2018-05-19 17:39:14,200 ib_insync.Watchdog start INFO Starting
2018-05-19 17:39:14,201 quamash <module> INFO Using Qt Implementation: PyQt5
2018-05-19 17:39:14,225 ib_insync.IBC startAsync INFO Starting
2018-05-19 17:39:29,239 ib_insync.client connectAsync INFO Connecting to 127.0.0.1:4002 with clientId 24...
2018-05-19 17:39:29,241 ib_insync.client _onSocketConnected INFO Connected
2018-05-19 17:39:29,284 ib_insync.client _onSocketHasData INFO Logged on to server version 141
2018-05-19 17:39:29,331 ib_insync.client connectAsync INFO API connection ready
2018-05-19 17:39:29,398 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17709995, marketValue=218940.59, averageCost=1.2182257, unrealizedPNL=-7649.39, realizedPNL=0.0, account='DU946735')
2018-05-19 17:39:29,399 ib_insync.wrapper position INFO position: Position(account='DU946735', contract=Contract(secType='CASH', conId=12087792, symbol='EUR', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, avgCost=1.2182257)
2018-05-19 17:39:29,426 ib_insync.ib connectAsync INFO Synchronization complete
2018-05-19 17:39:29,521 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() started
2018-05-19 17:39:29,522 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop datetime
2018-05-19 17:39:29,522 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 17:39:29,522 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop close
2018-05-19 17:39:29,522 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() complete
2018-05-19 17:39:29,522 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() started
2018-05-19 17:39:29,522 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop datetime
2018-05-19 17:39:29,523 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 17:39:29,523 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop close
2018-05-19 17:39:29,523 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() complete
2018-05-19 17:39:29,523 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() started
2018-05-19 17:39:29,523 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop datetime
2018-05-19 17:39:29,523 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 17:39:29,524 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop close
2018-05-19 17:39:29,524 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() complete
2018-05-19 17:39:29,524 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() started
2018-05-19 17:39:29,524 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop datetime
2018-05-19 17:39:29,524 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 17:39:29,524 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop close
2018-05-19 17:39:29,525 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() complete
2018-05-19 17:39:29,525 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() started
2018-05-19 17:39:29,525 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop datetime
2018-05-19 17:39:29,525 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 17:39:29,525 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop close
2018-05-19 17:39:29,525 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() complete
2018-05-19 17:39:29,525 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() started
2018-05-19 17:39:29,526 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop datetime
2018-05-19 17:39:29,526 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 17:39:29,526 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop close
2018-05-19 17:39:29,526 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() complete
2018-05-19 17:39:29,526 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() started
2018-05-19 17:39:29,526 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop datetime
2018-05-19 17:39:29,527 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 17:39:29,527 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop close
2018-05-19 17:39:29,527 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() complete
2018-05-19 17:39:29,527 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() started
2018-05-19 17:39:29,527 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop datetime
2018-05-19 17:39:29,527 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 17:39:29,527 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop close
2018-05-19 17:39:29,528 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() complete
2018-05-19 17:39:29,528 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() started
2018-05-19 17:39:29,528 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop datetime
2018-05-19 17:39:29,528 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop diffToNextRowInMinutes
2018-05-19 17:39:29,528 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop close
2018-05-19 17:39:29,528 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() complete
2018-05-19 17:39:29,529 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() started
2018-05-19 17:39:29,529 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop datetime
2018-05-19 17:39:29,529 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop diffToNextRowInMinutes
2018-05-19 17:39:29,529 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop close
2018-05-19 17:39:29,529 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() complete
2018-05-19 17:39:29,529 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() started
2018-05-19 17:39:29,529 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop datetime
2018-05-19 17:39:29,530 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop diffToNextRowInMinutes
2018-05-19 17:39:29,530 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop close
2018-05-19 17:39:29,530 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() complete
2018-05-19 17:39:29,530 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() started
2018-05-19 17:39:29,530 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop datetime
2018-05-19 17:39:29,530 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop diffToNextRowInMinutes
2018-05-19 17:39:29,531 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop close
2018-05-19 17:39:29,531 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() complete
2018-05-19 17:39:29,531 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() started
2018-05-19 17:39:29,531 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop datetime
2018-05-19 17:39:29,531 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop diffToNextRowInMinutes
2018-05-19 17:39:29,531 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop close
2018-05-19 17:39:29,532 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() complete
2018-05-19 17:39:29,532 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() started
2018-05-19 17:39:29,532 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop datetime
2018-05-19 17:39:29,532 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop diffToNextRowInMinutes
2018-05-19 17:39:29,532 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop close
2018-05-19 17:39:29,532 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() complete
2018-05-19 17:39:29,533 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-19 17:39:29,534 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-19 17:39:29,534 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 17:39:32,625 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-19 17:39:32,625 sqlalchemy.engine.base.Engine _execute_context INFO PRAGMA table_info("MarketDataInfoTable")
2018-05-19 17:39:32,625 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 17:39:32,630 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-19 17:39:32,631 sqlalchemy.engine.base.Engine _execute_context INFO SELECT count(*) AS count_1 
FROM (SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable") AS anon_1
2018-05-19 17:39:32,631 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 17:39:32,634 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName", "MarketDataInfoTable".description, "MarketDataInfoTable"."conId", "MarketDataInfoTable".symbol, "MarketDataInfoTable".currency, "MarketDataInfoTable".exchange, "MarketDataInfoTable".category, "MarketDataInfoTable"."secType", "MarketDataInfoTable"."earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-19 17:39:32,634 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 17:39:32,638 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-19 17:39:32,638 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 17:39:33,232 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-19 17:39:33,256 apscheduler.scheduler start INFO Scheduler started
2018-05-19 17:39:33,256 root runProg INFO Now updating the settings for the request of recent historical bars
2018-05-19 17:39:33,257 root runProg INFO Now requesting initial recent historical bars
2018-05-19 17:39:33,257 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-19 17:39:33,259 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for contract: EUR.AUD
2018-05-19 17:39:33,259 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-19 17:39:34,889 ib_insync.wrapper error INFO Warning 2106, reqId -1: HMDS data farm connection is OK:cashhmds
2018-05-19 17:39:34,889 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2106, errorString: HMDS data farm connection is OK:cashhmds, localSymbol: None
2018-05-19 17:52:53,965 ib_insync.Watchdog start INFO Starting
2018-05-19 17:52:53,966 quamash <module> INFO Using Qt Implementation: PyQt5
2018-05-19 17:52:53,993 ib_insync.IBC startAsync INFO Starting
2018-05-19 17:53:09,007 ib_insync.client connectAsync INFO Connecting to 127.0.0.1:4002 with clientId 24...
2018-05-19 17:53:09,009 ib_insync.client _onSocketConnected INFO Connected
2018-05-19 17:53:09,052 ib_insync.client _onSocketHasData INFO Logged on to server version 141
2018-05-19 17:53:09,095 ib_insync.client connectAsync INFO API connection ready
2018-05-19 17:53:09,159 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17709995, marketValue=218940.59, averageCost=1.2182257, unrealizedPNL=-7649.39, realizedPNL=0.0, account='DU946735')
2018-05-19 17:53:09,160 ib_insync.wrapper position INFO position: Position(account='DU946735', contract=Contract(secType='CASH', conId=12087792, symbol='EUR', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, avgCost=1.2182257)
2018-05-19 17:53:09,186 ib_insync.ib connectAsync INFO Synchronization complete
2018-05-19 17:53:09,285 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() started
2018-05-19 17:53:09,287 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop datetime
2018-05-19 17:53:09,287 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 17:53:09,287 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop close
2018-05-19 17:53:09,287 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() complete
2018-05-19 17:53:09,288 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() started
2018-05-19 17:53:09,288 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop datetime
2018-05-19 17:53:09,288 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 17:53:09,288 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop close
2018-05-19 17:53:09,289 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() complete
2018-05-19 17:53:09,289 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() started
2018-05-19 17:53:09,289 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop datetime
2018-05-19 17:53:09,289 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 17:53:09,289 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop close
2018-05-19 17:53:09,290 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() complete
2018-05-19 17:53:09,290 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() started
2018-05-19 17:53:09,290 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop datetime
2018-05-19 17:53:09,290 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 17:53:09,290 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop close
2018-05-19 17:53:09,291 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() complete
2018-05-19 17:53:09,291 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() started
2018-05-19 17:53:09,291 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop datetime
2018-05-19 17:53:09,291 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 17:53:09,291 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop close
2018-05-19 17:53:09,291 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() complete
2018-05-19 17:53:09,291 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() started
2018-05-19 17:53:09,291 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop datetime
2018-05-19 17:53:09,292 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 17:53:09,292 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop close
2018-05-19 17:53:09,292 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() complete
2018-05-19 17:53:09,292 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() started
2018-05-19 17:53:09,292 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop datetime
2018-05-19 17:53:09,293 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 17:53:09,293 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop close
2018-05-19 17:53:09,293 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() complete
2018-05-19 17:53:09,293 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() started
2018-05-19 17:53:09,293 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop datetime
2018-05-19 17:53:09,294 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 17:53:09,294 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop close
2018-05-19 17:53:09,294 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() complete
2018-05-19 17:53:09,294 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() started
2018-05-19 17:53:09,294 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop datetime
2018-05-19 17:53:09,294 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop diffToNextRowInMinutes
2018-05-19 17:53:09,295 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop close
2018-05-19 17:53:09,295 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() complete
2018-05-19 17:53:09,295 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() started
2018-05-19 17:53:09,295 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop datetime
2018-05-19 17:53:09,295 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop diffToNextRowInMinutes
2018-05-19 17:53:09,295 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop close
2018-05-19 17:53:09,296 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() complete
2018-05-19 17:53:09,296 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() started
2018-05-19 17:53:09,296 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop datetime
2018-05-19 17:53:09,296 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop diffToNextRowInMinutes
2018-05-19 17:53:09,296 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop close
2018-05-19 17:53:09,296 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() complete
2018-05-19 17:53:09,296 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() started
2018-05-19 17:53:09,296 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop datetime
2018-05-19 17:53:09,297 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop diffToNextRowInMinutes
2018-05-19 17:53:09,297 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop close
2018-05-19 17:53:09,297 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() complete
2018-05-19 17:53:09,297 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() started
2018-05-19 17:53:09,297 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop datetime
2018-05-19 17:53:09,298 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop diffToNextRowInMinutes
2018-05-19 17:53:09,298 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop close
2018-05-19 17:53:09,298 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() complete
2018-05-19 17:53:09,298 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() started
2018-05-19 17:53:09,298 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop datetime
2018-05-19 17:53:09,298 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop diffToNextRowInMinutes
2018-05-19 17:53:09,299 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop close
2018-05-19 17:53:09,299 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() complete
2018-05-19 17:53:09,299 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-19 17:53:09,300 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-19 17:53:09,300 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 17:53:12,496 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-19 17:53:12,496 sqlalchemy.engine.base.Engine _execute_context INFO PRAGMA table_info("MarketDataInfoTable")
2018-05-19 17:53:12,496 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 17:53:12,502 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-19 17:53:12,503 sqlalchemy.engine.base.Engine _execute_context INFO SELECT count(*) AS count_1 
FROM (SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable") AS anon_1
2018-05-19 17:53:12,504 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 17:53:12,507 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName", "MarketDataInfoTable".description, "MarketDataInfoTable"."conId", "MarketDataInfoTable".symbol, "MarketDataInfoTable".currency, "MarketDataInfoTable".exchange, "MarketDataInfoTable".category, "MarketDataInfoTable"."secType", "MarketDataInfoTable"."earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-19 17:53:12,507 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 17:53:12,513 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-19 17:53:12,514 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 17:53:13,057 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-19 17:53:13,085 apscheduler.scheduler start INFO Scheduler started
2018-05-19 17:53:13,086 root runProg INFO Now updating the settings for the request of recent historical bars
2018-05-19 17:53:13,086 root runProg INFO Now requesting initial recent historical bars
2018-05-19 17:53:13,086 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-19 17:53:13,088 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for contract: EUR.AUD
2018-05-19 17:53:13,088 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-19 17:53:14,686 ib_insync.wrapper error INFO Warning 2106, reqId -1: HMDS data farm connection is OK:cashhmds
2018-05-19 17:53:14,686 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2106, errorString: HMDS data farm connection is OK:cashhmds, localSymbol: None
2018-05-19 17:55:23,522 ib_insync.Watchdog start INFO Starting
2018-05-19 17:55:23,523 quamash <module> INFO Using Qt Implementation: PyQt5
2018-05-19 17:55:23,549 ib_insync.IBC startAsync INFO Starting
2018-05-19 17:55:38,561 ib_insync.client connectAsync INFO Connecting to 127.0.0.1:4002 with clientId 24...
2018-05-19 17:55:38,563 ib_insync.client _onSocketConnected INFO Connected
2018-05-19 17:55:38,605 ib_insync.client _onSocketHasData INFO Logged on to server version 141
2018-05-19 17:55:38,651 ib_insync.client connectAsync INFO API connection ready
2018-05-19 17:55:38,722 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17709995, marketValue=218940.59, averageCost=1.2182257, unrealizedPNL=-7649.39, realizedPNL=0.0, account='DU946735')
2018-05-19 17:55:38,723 ib_insync.wrapper position INFO position: Position(account='DU946735', contract=Contract(secType='CASH', conId=12087792, symbol='EUR', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, avgCost=1.2182257)
2018-05-19 17:55:38,743 ib_insync.ib connectAsync INFO Synchronization complete
2018-05-19 17:55:38,840 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() started
2018-05-19 17:55:38,841 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop datetime
2018-05-19 17:55:38,842 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 17:55:38,842 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop close
2018-05-19 17:55:38,842 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() complete
2018-05-19 17:55:38,843 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() started
2018-05-19 17:55:38,843 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop datetime
2018-05-19 17:55:38,843 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 17:55:38,843 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop close
2018-05-19 17:55:38,844 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() complete
2018-05-19 17:55:38,844 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() started
2018-05-19 17:55:38,844 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop datetime
2018-05-19 17:55:38,844 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 17:55:38,844 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop close
2018-05-19 17:55:38,845 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() complete
2018-05-19 17:55:38,845 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() started
2018-05-19 17:55:38,845 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop datetime
2018-05-19 17:55:38,845 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 17:55:38,845 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop close
2018-05-19 17:55:38,845 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() complete
2018-05-19 17:55:38,845 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() started
2018-05-19 17:55:38,846 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop datetime
2018-05-19 17:55:38,846 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 17:55:38,846 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop close
2018-05-19 17:55:38,846 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() complete
2018-05-19 17:55:38,846 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() started
2018-05-19 17:55:38,846 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop datetime
2018-05-19 17:55:38,846 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 17:55:38,847 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop close
2018-05-19 17:55:38,847 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() complete
2018-05-19 17:55:38,847 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() started
2018-05-19 17:55:38,847 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop datetime
2018-05-19 17:55:38,847 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 17:55:38,847 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop close
2018-05-19 17:55:38,848 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() complete
2018-05-19 17:55:38,848 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() started
2018-05-19 17:55:38,848 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop datetime
2018-05-19 17:55:38,848 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 17:55:38,849 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop close
2018-05-19 17:55:38,849 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() complete
2018-05-19 17:55:38,849 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() started
2018-05-19 17:55:38,849 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop datetime
2018-05-19 17:55:38,849 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop diffToNextRowInMinutes
2018-05-19 17:55:38,849 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop close
2018-05-19 17:55:38,850 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() complete
2018-05-19 17:55:38,850 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() started
2018-05-19 17:55:38,850 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop datetime
2018-05-19 17:55:38,850 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop diffToNextRowInMinutes
2018-05-19 17:55:38,850 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop close
2018-05-19 17:55:38,850 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() complete
2018-05-19 17:55:38,850 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() started
2018-05-19 17:55:38,851 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop datetime
2018-05-19 17:55:38,851 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop diffToNextRowInMinutes
2018-05-19 17:55:38,851 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop close
2018-05-19 17:55:38,851 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() complete
2018-05-19 17:55:38,851 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() started
2018-05-19 17:55:38,851 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop datetime
2018-05-19 17:55:38,852 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop diffToNextRowInMinutes
2018-05-19 17:55:38,852 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop close
2018-05-19 17:55:38,852 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() complete
2018-05-19 17:55:38,852 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() started
2018-05-19 17:55:38,853 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop datetime
2018-05-19 17:55:38,853 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop diffToNextRowInMinutes
2018-05-19 17:55:38,853 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop close
2018-05-19 17:55:38,853 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() complete
2018-05-19 17:55:38,853 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() started
2018-05-19 17:55:38,853 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop datetime
2018-05-19 17:55:38,854 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop diffToNextRowInMinutes
2018-05-19 17:55:38,854 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop close
2018-05-19 17:55:38,854 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() complete
2018-05-19 17:55:38,855 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-19 17:55:38,856 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-19 17:55:38,856 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 17:55:42,127 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-19 17:55:42,128 sqlalchemy.engine.base.Engine _execute_context INFO PRAGMA table_info("MarketDataInfoTable")
2018-05-19 17:55:42,128 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 17:55:42,132 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-19 17:55:42,133 sqlalchemy.engine.base.Engine _execute_context INFO SELECT count(*) AS count_1 
FROM (SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable") AS anon_1
2018-05-19 17:55:42,133 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 17:55:42,135 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName", "MarketDataInfoTable".description, "MarketDataInfoTable"."conId", "MarketDataInfoTable".symbol, "MarketDataInfoTable".currency, "MarketDataInfoTable".exchange, "MarketDataInfoTable".category, "MarketDataInfoTable"."secType", "MarketDataInfoTable"."earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-19 17:55:42,136 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 17:55:42,139 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-19 17:55:42,139 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 17:55:42,774 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-19 17:55:42,802 apscheduler.scheduler start INFO Scheduler started
2018-05-19 17:55:42,803 root runProg INFO Now updating the settings for the request of recent historical bars
2018-05-19 17:55:42,803 root runProg INFO Now requesting initial recent historical bars
2018-05-19 17:55:42,803 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-19 17:55:42,805 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for contract: EUR.AUD
2018-05-19 17:55:42,805 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-19 17:55:44,399 ib_insync.wrapper error INFO Warning 2106, reqId -1: HMDS data farm connection is OK:cashhmds
2018-05-19 17:55:44,400 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2106, errorString: HMDS data farm connection is OK:cashhmds, localSymbol: None
2018-05-19 18:01:13,312 ib_insync.Watchdog start INFO Starting
2018-05-19 18:01:13,313 quamash <module> INFO Using Qt Implementation: PyQt5
2018-05-19 18:01:13,338 ib_insync.IBC startAsync INFO Starting
2018-05-19 18:01:28,351 ib_insync.client connectAsync INFO Connecting to 127.0.0.1:4002 with clientId 24...
2018-05-19 18:01:28,354 ib_insync.client _onSocketConnected INFO Connected
2018-05-19 18:01:28,390 ib_insync.client _onSocketHasData INFO Logged on to server version 141
2018-05-19 18:01:28,435 ib_insync.client connectAsync INFO API connection ready
2018-05-19 18:01:28,498 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17709995, marketValue=218940.59, averageCost=1.2182257, unrealizedPNL=-7649.39, realizedPNL=0.0, account='DU946735')
2018-05-19 18:01:28,498 ib_insync.wrapper position INFO position: Position(account='DU946735', contract=Contract(secType='CASH', conId=12087792, symbol='EUR', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, avgCost=1.2182257)
2018-05-19 18:01:28,513 ib_insync.ib connectAsync INFO Synchronization complete
2018-05-19 18:01:28,605 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() started
2018-05-19 18:01:28,606 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop datetime
2018-05-19 18:01:28,606 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 18:01:28,606 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop close
2018-05-19 18:01:28,607 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() complete
2018-05-19 18:01:28,607 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() started
2018-05-19 18:01:28,607 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop datetime
2018-05-19 18:01:28,607 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 18:01:28,607 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop close
2018-05-19 18:01:28,607 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() complete
2018-05-19 18:01:28,608 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() started
2018-05-19 18:01:28,608 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop datetime
2018-05-19 18:01:28,608 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 18:01:28,608 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop close
2018-05-19 18:01:28,608 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() complete
2018-05-19 18:01:28,608 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() started
2018-05-19 18:01:28,608 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop datetime
2018-05-19 18:01:28,609 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 18:01:28,609 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop close
2018-05-19 18:01:28,609 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() complete
2018-05-19 18:01:28,609 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() started
2018-05-19 18:01:28,609 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop datetime
2018-05-19 18:01:28,609 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 18:01:28,609 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop close
2018-05-19 18:01:28,610 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() complete
2018-05-19 18:01:28,610 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() started
2018-05-19 18:01:28,610 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop datetime
2018-05-19 18:01:28,610 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 18:01:28,610 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop close
2018-05-19 18:01:28,610 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() complete
2018-05-19 18:01:28,611 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() started
2018-05-19 18:01:28,611 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop datetime
2018-05-19 18:01:28,611 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 18:01:28,611 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop close
2018-05-19 18:01:28,611 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() complete
2018-05-19 18:01:28,611 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() started
2018-05-19 18:01:28,611 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop datetime
2018-05-19 18:01:28,612 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 18:01:28,612 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop close
2018-05-19 18:01:28,612 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() complete
2018-05-19 18:01:28,612 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() started
2018-05-19 18:01:28,612 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop datetime
2018-05-19 18:01:28,612 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop diffToNextRowInMinutes
2018-05-19 18:01:28,612 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop close
2018-05-19 18:01:28,613 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() complete
2018-05-19 18:01:28,613 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() started
2018-05-19 18:01:28,613 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop datetime
2018-05-19 18:01:28,613 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop diffToNextRowInMinutes
2018-05-19 18:01:28,613 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop close
2018-05-19 18:01:28,613 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() complete
2018-05-19 18:01:28,614 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() started
2018-05-19 18:01:28,614 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop datetime
2018-05-19 18:01:28,614 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop diffToNextRowInMinutes
2018-05-19 18:01:28,614 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop close
2018-05-19 18:01:28,614 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() complete
2018-05-19 18:01:28,614 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() started
2018-05-19 18:01:28,614 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop datetime
2018-05-19 18:01:28,615 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop diffToNextRowInMinutes
2018-05-19 18:01:28,615 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop close
2018-05-19 18:01:28,615 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() complete
2018-05-19 18:01:28,615 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() started
2018-05-19 18:01:28,615 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop datetime
2018-05-19 18:01:28,615 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop diffToNextRowInMinutes
2018-05-19 18:01:28,615 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop close
2018-05-19 18:01:28,616 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() complete
2018-05-19 18:01:28,616 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() started
2018-05-19 18:01:28,616 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop datetime
2018-05-19 18:01:28,616 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop diffToNextRowInMinutes
2018-05-19 18:01:28,616 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop close
2018-05-19 18:01:28,617 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() complete
2018-05-19 18:01:28,617 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-19 18:01:28,618 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-19 18:01:28,618 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 18:01:31,856 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-19 18:01:31,856 sqlalchemy.engine.base.Engine _execute_context INFO PRAGMA table_info("MarketDataInfoTable")
2018-05-19 18:01:31,856 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 18:01:31,861 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-19 18:01:31,862 sqlalchemy.engine.base.Engine _execute_context INFO SELECT count(*) AS count_1 
FROM (SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable") AS anon_1
2018-05-19 18:01:31,863 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 18:01:31,865 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName", "MarketDataInfoTable".description, "MarketDataInfoTable"."conId", "MarketDataInfoTable".symbol, "MarketDataInfoTable".currency, "MarketDataInfoTable".exchange, "MarketDataInfoTable".category, "MarketDataInfoTable"."secType", "MarketDataInfoTable"."earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-19 18:01:31,865 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 18:01:31,870 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-19 18:01:31,870 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 18:01:32,493 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-19 18:01:32,513 apscheduler.scheduler start INFO Scheduler started
2018-05-19 18:01:32,513 root runProg INFO Now updating the settings for the request of recent historical bars
2018-05-19 18:01:32,513 root runProg INFO Now requesting initial recent historical bars
2018-05-19 18:01:32,514 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-19 18:01:32,515 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for contract: EUR.AUD
2018-05-19 18:01:32,515 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-19 18:01:34,290 ib_insync.wrapper error INFO Warning 2106, reqId -1: HMDS data farm connection is OK:cashhmds
2018-05-19 18:01:34,290 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2106, errorString: HMDS data farm connection is OK:cashhmds, localSymbol: None
2018-05-19 18:08:28,806 quamash <module> INFO Using Qt Implementation: PyQt5
2018-05-19 18:08:28,831 ib_insync.client connectAsync INFO Connecting to 127.0.0.1:4002 with clientId 24...
2018-05-19 18:08:28,832 ib_insync.client _onSocketConnected INFO Connected
2018-05-19 18:08:28,866 ib_insync.client _onSocketHasData INFO Logged on to server version 141
2018-05-19 18:08:28,911 ib_insync.client connectAsync INFO API connection ready
2018-05-19 18:08:28,978 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17709995, marketValue=218940.59, averageCost=1.2182257, unrealizedPNL=-7649.39, realizedPNL=0.0, account='DU946735')
2018-05-19 18:08:28,978 ib_insync.wrapper position INFO position: Position(account='DU946735', contract=Contract(secType='CASH', conId=12087792, symbol='EUR', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, avgCost=1.2182257)
2018-05-19 18:08:28,995 ib_insync.ib connectAsync INFO Synchronization complete
2018-05-19 18:08:46,805 quamash <module> INFO Using Qt Implementation: PyQt5
2018-05-19 18:08:46,829 ib_insync.client connectAsync INFO Connecting to 127.0.0.1:4002 with clientId 24...
2018-05-19 18:08:46,831 ib_insync.client _onSocketConnected INFO Connected
2018-05-19 18:08:46,837 ib_insync.client _onSocketHasData INFO Logged on to server version 141
2018-05-19 18:08:46,879 ib_insync.client connectAsync INFO API connection ready
2018-05-19 18:08:46,934 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17709995, marketValue=218940.59, averageCost=1.2182257, unrealizedPNL=-7649.39, realizedPNL=0.0, account='DU946735')
2018-05-19 18:08:46,935 ib_insync.wrapper position INFO position: Position(account='DU946735', contract=Contract(secType='CASH', conId=12087792, symbol='EUR', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, avgCost=1.2182257)
2018-05-19 18:08:46,949 ib_insync.ib connectAsync INFO Synchronization complete
2018-05-19 18:08:47,025 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() started
2018-05-19 18:08:47,026 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop datetime
2018-05-19 18:08:47,026 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 18:08:47,026 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop close
2018-05-19 18:08:47,026 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() complete
2018-05-19 18:08:47,026 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() started
2018-05-19 18:08:47,026 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop datetime
2018-05-19 18:08:47,027 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 18:08:47,027 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop close
2018-05-19 18:08:47,027 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() complete
2018-05-19 18:08:47,027 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() started
2018-05-19 18:08:47,027 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop datetime
2018-05-19 18:08:47,027 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 18:08:47,028 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop close
2018-05-19 18:08:47,028 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() complete
2018-05-19 18:08:47,028 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() started
2018-05-19 18:08:47,028 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop datetime
2018-05-19 18:08:47,028 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 18:08:47,028 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop close
2018-05-19 18:08:47,029 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() complete
2018-05-19 18:08:47,029 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() started
2018-05-19 18:08:47,029 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop datetime
2018-05-19 18:08:47,029 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 18:08:47,029 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop close
2018-05-19 18:08:47,029 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() complete
2018-05-19 18:08:47,029 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() started
2018-05-19 18:08:47,030 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop datetime
2018-05-19 18:08:47,030 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 18:08:47,030 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop close
2018-05-19 18:08:47,030 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() complete
2018-05-19 18:08:47,030 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() started
2018-05-19 18:08:47,030 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop datetime
2018-05-19 18:08:47,031 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 18:08:47,031 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop close
2018-05-19 18:08:47,031 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() complete
2018-05-19 18:08:47,031 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() started
2018-05-19 18:08:47,031 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop datetime
2018-05-19 18:08:47,031 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 18:08:47,032 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop close
2018-05-19 18:08:47,032 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() complete
2018-05-19 18:08:47,032 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() started
2018-05-19 18:08:47,032 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop datetime
2018-05-19 18:08:47,032 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop diffToNextRowInMinutes
2018-05-19 18:08:47,032 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop close
2018-05-19 18:08:47,033 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() complete
2018-05-19 18:08:47,033 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() started
2018-05-19 18:08:47,033 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop datetime
2018-05-19 18:08:47,033 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop diffToNextRowInMinutes
2018-05-19 18:08:47,033 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop close
2018-05-19 18:08:47,033 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() complete
2018-05-19 18:08:47,033 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() started
2018-05-19 18:08:47,033 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop datetime
2018-05-19 18:08:47,034 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop diffToNextRowInMinutes
2018-05-19 18:08:47,034 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop close
2018-05-19 18:08:47,034 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() complete
2018-05-19 18:08:47,034 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() started
2018-05-19 18:08:47,034 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop datetime
2018-05-19 18:08:47,034 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop diffToNextRowInMinutes
2018-05-19 18:08:47,035 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop close
2018-05-19 18:08:47,035 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() complete
2018-05-19 18:08:47,035 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() started
2018-05-19 18:08:47,035 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop datetime
2018-05-19 18:08:47,035 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop diffToNextRowInMinutes
2018-05-19 18:08:47,035 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop close
2018-05-19 18:08:47,036 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() complete
2018-05-19 18:08:47,036 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() started
2018-05-19 18:08:47,036 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop datetime
2018-05-19 18:08:47,036 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop diffToNextRowInMinutes
2018-05-19 18:08:47,036 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop close
2018-05-19 18:08:47,036 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() complete
2018-05-19 18:08:47,037 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-19 18:08:47,038 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-19 18:08:47,038 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 18:08:50,359 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-19 18:08:50,360 sqlalchemy.engine.base.Engine _execute_context INFO PRAGMA table_info("MarketDataInfoTable")
2018-05-19 18:08:50,360 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 18:08:50,364 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-19 18:08:50,365 sqlalchemy.engine.base.Engine _execute_context INFO SELECT count(*) AS count_1 
FROM (SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable") AS anon_1
2018-05-19 18:08:50,365 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 18:08:50,367 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName", "MarketDataInfoTable".description, "MarketDataInfoTable"."conId", "MarketDataInfoTable".symbol, "MarketDataInfoTable".currency, "MarketDataInfoTable".exchange, "MarketDataInfoTable".category, "MarketDataInfoTable"."secType", "MarketDataInfoTable"."earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-19 18:08:50,367 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 18:08:50,371 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-19 18:08:50,371 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 18:08:51,021 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-19 18:09:59,605 quamash <module> INFO Using Qt Implementation: PyQt5
2018-05-19 18:09:59,628 ib_insync.client connectAsync INFO Connecting to 127.0.0.1:4002 with clientId 24...
2018-05-19 18:09:59,630 ib_insync.client _onSocketConnected INFO Connected
2018-05-19 18:09:59,635 ib_insync.client _onSocketHasData INFO Logged on to server version 141
2018-05-19 18:09:59,683 ib_insync.client connectAsync INFO API connection ready
2018-05-19 18:09:59,739 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17709995, marketValue=218940.59, averageCost=1.2182257, unrealizedPNL=-7649.39, realizedPNL=0.0, account='DU946735')
2018-05-19 18:09:59,740 ib_insync.wrapper position INFO position: Position(account='DU946735', contract=Contract(secType='CASH', conId=12087792, symbol='EUR', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, avgCost=1.2182257)
2018-05-19 18:09:59,759 ib_insync.ib connectAsync INFO Synchronization complete
2018-05-19 18:09:59,839 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() started
2018-05-19 18:09:59,840 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop datetime
2018-05-19 18:09:59,840 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 18:09:59,840 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop close
2018-05-19 18:09:59,840 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() complete
2018-05-19 18:09:59,841 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() started
2018-05-19 18:09:59,841 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop datetime
2018-05-19 18:09:59,841 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 18:09:59,841 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop close
2018-05-19 18:09:59,841 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() complete
2018-05-19 18:09:59,841 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() started
2018-05-19 18:09:59,841 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop datetime
2018-05-19 18:09:59,842 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 18:09:59,842 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop close
2018-05-19 18:09:59,842 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() complete
2018-05-19 18:09:59,842 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() started
2018-05-19 18:09:59,842 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop datetime
2018-05-19 18:09:59,843 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 18:09:59,843 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop close
2018-05-19 18:09:59,843 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() complete
2018-05-19 18:09:59,843 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() started
2018-05-19 18:09:59,843 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop datetime
2018-05-19 18:09:59,843 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 18:09:59,844 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop close
2018-05-19 18:09:59,844 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() complete
2018-05-19 18:09:59,844 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() started
2018-05-19 18:09:59,844 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop datetime
2018-05-19 18:09:59,844 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 18:09:59,844 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop close
2018-05-19 18:09:59,845 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() complete
2018-05-19 18:09:59,845 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() started
2018-05-19 18:09:59,845 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop datetime
2018-05-19 18:09:59,845 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 18:09:59,845 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop close
2018-05-19 18:09:59,845 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() complete
2018-05-19 18:09:59,846 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() started
2018-05-19 18:09:59,846 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop datetime
2018-05-19 18:09:59,846 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 18:09:59,846 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop close
2018-05-19 18:09:59,846 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() complete
2018-05-19 18:09:59,846 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() started
2018-05-19 18:09:59,846 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop datetime
2018-05-19 18:09:59,847 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop diffToNextRowInMinutes
2018-05-19 18:09:59,847 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop close
2018-05-19 18:09:59,847 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() complete
2018-05-19 18:09:59,847 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() started
2018-05-19 18:09:59,847 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop datetime
2018-05-19 18:09:59,847 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop diffToNextRowInMinutes
2018-05-19 18:09:59,848 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop close
2018-05-19 18:09:59,848 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() complete
2018-05-19 18:09:59,848 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() started
2018-05-19 18:09:59,848 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop datetime
2018-05-19 18:09:59,848 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop diffToNextRowInMinutes
2018-05-19 18:09:59,848 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop close
2018-05-19 18:09:59,849 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() complete
2018-05-19 18:09:59,849 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() started
2018-05-19 18:09:59,849 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop datetime
2018-05-19 18:09:59,849 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop diffToNextRowInMinutes
2018-05-19 18:09:59,849 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop close
2018-05-19 18:09:59,849 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() complete
2018-05-19 18:09:59,850 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() started
2018-05-19 18:09:59,850 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop datetime
2018-05-19 18:09:59,850 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop diffToNextRowInMinutes
2018-05-19 18:09:59,850 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop close
2018-05-19 18:09:59,850 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() complete
2018-05-19 18:09:59,850 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() started
2018-05-19 18:09:59,850 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop datetime
2018-05-19 18:09:59,851 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop diffToNextRowInMinutes
2018-05-19 18:09:59,851 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop close
2018-05-19 18:09:59,851 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() complete
2018-05-19 18:09:59,852 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-19 18:09:59,852 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-19 18:09:59,852 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 18:10:00,435 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-19 18:10:00,436 sqlalchemy.engine.base.Engine _execute_context INFO PRAGMA table_info("MarketDataInfoTable")
2018-05-19 18:10:00,436 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 18:10:00,439 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-19 18:10:00,440 sqlalchemy.engine.base.Engine _execute_context INFO SELECT count(*) AS count_1 
FROM (SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable") AS anon_1
2018-05-19 18:10:00,440 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 18:10:00,442 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName", "MarketDataInfoTable".description, "MarketDataInfoTable"."conId", "MarketDataInfoTable".symbol, "MarketDataInfoTable".currency, "MarketDataInfoTable".exchange, "MarketDataInfoTable".category, "MarketDataInfoTable"."secType", "MarketDataInfoTable"."earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-19 18:10:00,442 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 18:10:00,445 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-19 18:10:00,446 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 18:10:01,069 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-19 18:10:01,094 apscheduler.scheduler start INFO Scheduler started
2018-05-19 18:10:01,094 root runProg INFO Now updating the settings for the request of recent historical bars
2018-05-19 18:10:01,095 root runProg INFO Now requesting initial recent historical bars
2018-05-19 18:10:01,095 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-19 18:10:01,097 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for contract: EUR.AUD
2018-05-19 18:10:01,097 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-19 18:10:02,750 ib_insync.wrapper error INFO Warning 2106, reqId -1: HMDS data farm connection is OK:cashhmds
2018-05-19 18:55:35,939 ib_insync.Watchdog start INFO Starting
2018-05-19 18:55:35,940 quamash <module> INFO Using Qt Implementation: PyQt5
2018-05-19 18:55:35,963 ib_insync.IBC startAsync INFO Starting
2018-05-19 18:55:50,975 ib_insync.client connectAsync INFO Connecting to 127.0.0.1:4002 with clientId 24...
2018-05-19 18:55:50,977 ib_insync.client _onSocketConnected INFO Connected
2018-05-19 18:55:51,018 ib_insync.client _onSocketHasData INFO Logged on to server version 141
2018-05-19 18:55:51,021 ib_insync.client connectAsync INFO API connection ready
2018-05-19 18:55:51,089 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17709995, marketValue=218940.59, averageCost=1.2182257, unrealizedPNL=-7649.39, realizedPNL=0.0, account='DU946735')
2018-05-19 18:55:51,090 ib_insync.wrapper position INFO position: Position(account='DU946735', contract=Contract(secType='CASH', conId=12087792, symbol='EUR', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, avgCost=1.2182257)
2018-05-19 18:55:51,116 ib_insync.ib connectAsync INFO Synchronization complete
2018-05-19 18:55:51,195 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() started
2018-05-19 18:55:51,196 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop datetime
2018-05-19 18:55:51,196 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 18:55:51,196 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop close
2018-05-19 18:55:51,196 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() complete
2018-05-19 18:55:51,197 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() started
2018-05-19 18:55:51,197 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop datetime
2018-05-19 18:55:51,197 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 18:55:51,197 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop close
2018-05-19 18:55:51,197 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() complete
2018-05-19 18:55:51,197 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() started
2018-05-19 18:55:51,197 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop datetime
2018-05-19 18:55:51,198 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 18:55:51,198 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop close
2018-05-19 18:55:51,198 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() complete
2018-05-19 18:55:51,198 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() started
2018-05-19 18:55:51,198 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop datetime
2018-05-19 18:55:51,199 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 18:55:51,199 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop close
2018-05-19 18:55:51,199 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() complete
2018-05-19 18:55:51,199 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() started
2018-05-19 18:55:51,199 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop datetime
2018-05-19 18:55:51,199 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 18:55:51,200 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop close
2018-05-19 18:55:51,200 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() complete
2018-05-19 18:55:51,200 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() started
2018-05-19 18:55:51,200 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop datetime
2018-05-19 18:55:51,200 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 18:55:51,200 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop close
2018-05-19 18:55:51,200 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() complete
2018-05-19 18:55:51,201 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() started
2018-05-19 18:55:51,201 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop datetime
2018-05-19 18:55:51,201 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 18:55:51,201 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop close
2018-05-19 18:55:51,201 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() complete
2018-05-19 18:55:51,201 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() started
2018-05-19 18:55:51,201 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop datetime
2018-05-19 18:55:51,202 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 18:55:51,202 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop close
2018-05-19 18:55:51,202 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() complete
2018-05-19 18:55:51,202 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() started
2018-05-19 18:55:51,202 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop datetime
2018-05-19 18:55:51,202 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop diffToNextRowInMinutes
2018-05-19 18:55:51,203 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop close
2018-05-19 18:55:51,203 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() complete
2018-05-19 18:55:51,203 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() started
2018-05-19 18:55:51,203 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop datetime
2018-05-19 18:55:51,203 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop diffToNextRowInMinutes
2018-05-19 18:55:51,203 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop close
2018-05-19 18:55:51,204 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() complete
2018-05-19 18:55:51,204 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() started
2018-05-19 18:55:51,204 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop datetime
2018-05-19 18:55:51,204 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop diffToNextRowInMinutes
2018-05-19 18:55:51,204 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop close
2018-05-19 18:55:51,204 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() complete
2018-05-19 18:55:51,205 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() started
2018-05-19 18:55:51,205 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop datetime
2018-05-19 18:55:51,205 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop diffToNextRowInMinutes
2018-05-19 18:55:51,205 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop close
2018-05-19 18:55:51,205 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() complete
2018-05-19 18:55:51,205 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() started
2018-05-19 18:55:51,205 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop datetime
2018-05-19 18:55:51,206 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop diffToNextRowInMinutes
2018-05-19 18:55:51,206 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop close
2018-05-19 18:55:51,206 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() complete
2018-05-19 18:55:51,206 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() started
2018-05-19 18:55:51,206 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop datetime
2018-05-19 18:55:51,206 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop diffToNextRowInMinutes
2018-05-19 18:55:51,207 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop close
2018-05-19 18:55:51,207 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() complete
2018-05-19 18:55:51,207 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-19 18:55:51,208 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-19 18:55:51,208 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 18:55:54,471 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-19 18:55:54,472 sqlalchemy.engine.base.Engine _execute_context INFO PRAGMA table_info("MarketDataInfoTable")
2018-05-19 18:55:54,472 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 18:55:54,476 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-19 18:55:54,476 sqlalchemy.engine.base.Engine _execute_context INFO SELECT count(*) AS count_1 
FROM (SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable") AS anon_1
2018-05-19 18:55:54,476 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 18:55:54,478 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName", "MarketDataInfoTable".description, "MarketDataInfoTable"."conId", "MarketDataInfoTable".symbol, "MarketDataInfoTable".currency, "MarketDataInfoTable".exchange, "MarketDataInfoTable".category, "MarketDataInfoTable"."secType", "MarketDataInfoTable"."earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-19 18:55:54,479 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 18:55:54,482 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-19 18:55:54,482 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 18:55:55,109 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-19 19:15:18,374 ib_insync.Watchdog start INFO Starting
2018-05-19 19:15:18,375 quamash <module> INFO Using Qt Implementation: PyQt5
2018-05-19 19:15:18,404 ib_insync.IBC startAsync INFO Starting
2018-05-19 19:15:33,419 ib_insync.client connectAsync INFO Connecting to 127.0.0.1:4002 with clientId 24...
2018-05-19 19:15:33,420 ib_insync.client _onSocketConnected INFO Connected
2018-05-19 19:15:33,468 ib_insync.client _onSocketHasData INFO Logged on to server version 141
2018-05-19 19:15:33,515 ib_insync.client connectAsync INFO API connection ready
2018-05-19 19:15:33,579 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17709995, marketValue=218940.59, averageCost=1.2182257, unrealizedPNL=-7649.39, realizedPNL=0.0, account='DU946735')
2018-05-19 19:15:33,580 ib_insync.wrapper position INFO position: Position(account='DU946735', contract=Contract(secType='CASH', conId=12087792, symbol='EUR', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, avgCost=1.2182257)
2018-05-19 19:15:33,598 ib_insync.ib connectAsync INFO Synchronization complete
2018-05-19 19:15:33,675 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() started
2018-05-19 19:15:33,676 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop datetime
2018-05-19 19:15:33,676 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 19:15:33,676 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop close
2018-05-19 19:15:33,676 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() complete
2018-05-19 19:15:33,676 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() started
2018-05-19 19:15:33,676 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop datetime
2018-05-19 19:15:33,677 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 19:15:33,677 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop close
2018-05-19 19:15:33,677 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() complete
2018-05-19 19:15:33,677 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() started
2018-05-19 19:15:33,677 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop datetime
2018-05-19 19:15:33,677 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 19:15:33,678 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop close
2018-05-19 19:15:33,678 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() complete
2018-05-19 19:15:33,678 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() started
2018-05-19 19:15:33,678 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop datetime
2018-05-19 19:15:33,678 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 19:15:33,678 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop close
2018-05-19 19:15:33,679 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() complete
2018-05-19 19:15:33,679 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() started
2018-05-19 19:15:33,679 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop datetime
2018-05-19 19:15:33,679 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 19:15:33,679 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop close
2018-05-19 19:15:33,679 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() complete
2018-05-19 19:15:33,679 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() started
2018-05-19 19:15:33,680 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop datetime
2018-05-19 19:15:33,680 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 19:15:33,680 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop close
2018-05-19 19:15:33,680 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() complete
2018-05-19 19:15:33,680 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() started
2018-05-19 19:15:33,680 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop datetime
2018-05-19 19:15:33,680 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 19:15:33,681 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop close
2018-05-19 19:15:33,681 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() complete
2018-05-19 19:15:33,681 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() started
2018-05-19 19:15:33,681 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop datetime
2018-05-19 19:15:33,681 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-19 19:15:33,681 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop close
2018-05-19 19:15:33,682 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() complete
2018-05-19 19:15:33,682 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() started
2018-05-19 19:15:33,682 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop datetime
2018-05-19 19:15:33,682 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop diffToNextRowInMinutes
2018-05-19 19:15:33,682 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop close
2018-05-19 19:15:33,682 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() complete
2018-05-19 19:15:33,683 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() started
2018-05-19 19:15:33,683 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop datetime
2018-05-19 19:15:33,683 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop diffToNextRowInMinutes
2018-05-19 19:15:33,683 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop close
2018-05-19 19:15:33,683 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() complete
2018-05-19 19:15:33,683 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() started
2018-05-19 19:15:33,683 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop datetime
2018-05-19 19:15:33,684 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop diffToNextRowInMinutes
2018-05-19 19:15:33,684 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop close
2018-05-19 19:15:33,684 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() complete
2018-05-19 19:15:33,684 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() started
2018-05-19 19:15:33,684 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop datetime
2018-05-19 19:15:33,684 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop diffToNextRowInMinutes
2018-05-19 19:15:33,685 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop close
2018-05-19 19:15:33,685 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() complete
2018-05-19 19:15:33,685 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() started
2018-05-19 19:15:33,685 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop datetime
2018-05-19 19:15:33,685 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop diffToNextRowInMinutes
2018-05-19 19:15:33,685 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop close
2018-05-19 19:15:33,686 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() complete
2018-05-19 19:15:33,686 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() started
2018-05-19 19:15:33,686 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop datetime
2018-05-19 19:15:33,686 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop diffToNextRowInMinutes
2018-05-19 19:15:33,686 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop close
2018-05-19 19:15:33,686 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() complete
2018-05-19 19:15:33,687 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-19 19:15:33,688 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-19 19:15:33,688 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 19:15:36,824 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-19 19:15:36,824 sqlalchemy.engine.base.Engine _execute_context INFO PRAGMA table_info("MarketDataInfoTable")
2018-05-19 19:15:36,824 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 19:15:36,830 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-19 19:15:36,831 sqlalchemy.engine.base.Engine _execute_context INFO SELECT count(*) AS count_1 
FROM (SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable") AS anon_1
2018-05-19 19:15:36,831 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 19:15:36,835 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName", "MarketDataInfoTable".description, "MarketDataInfoTable"."conId", "MarketDataInfoTable".symbol, "MarketDataInfoTable".currency, "MarketDataInfoTable".exchange, "MarketDataInfoTable".category, "MarketDataInfoTable"."secType", "MarketDataInfoTable"."earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-19 19:15:36,835 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 19:15:36,841 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-19 19:15:36,841 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-19 19:15:37,462 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-19 19:15:47,477 apscheduler.scheduler start INFO Scheduler started
2018-05-19 19:15:47,478 root runProg INFO Now updating the settings for the request of recent historical bars
2018-05-19 19:15:47,478 root runProg INFO Now requesting initial recent historical bars
2018-05-19 19:15:47,478 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-19 19:15:47,481 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for contract: EUR.AUD
2018-05-19 19:15:47,481 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-19 19:15:48,994 ib_insync.wrapper error INFO Warning 2106, reqId -1: HMDS data farm connection is OK:cashhmds
2018-05-19 19:15:48,994 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2106, errorString: HMDS data farm connection is OK:cashhmds, localSymbol: None
2018-05-19 19:15:49,211 apscheduler.scheduler _real_add_job INFO Added job "schedulerJobGetHistoricalData_000000" to job store "default"
2018-05-19 19:16:00,007 apscheduler.executors.default run_coroutine_job INFO Running job "schedulerJobGetHistoricalData_000000 (trigger: cron[minute='*', second='0'], next run at: 2018-05-19 19:17:00 CEST)" (scheduled at 2018-05-19 19:16:00+02:00)
2018-05-19 19:16:06,937 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, AUD; is going to be performed because earliestDateTime is given by IB: 2005-09-28 03:30:00
2018-05-19 19:16:06,939 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2005-10-11 00:13:00
2018-05-19 19:16:06,939 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2005-10-12 00:13:00
2018-05-19 19:16:06,940 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2005-10-11 00:13:00; endDT: 2005-10-12 00:12:00; durationString: 86340 S
2018-05-19 19:16:07,970 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 602; elapsed time: 0:00:00.165690
2018-05-19 19:16:07,970 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 602; elapsed time: 0:00:00.467191
2018-05-19 19:16:08,260 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2005-10-11 00:13:00; endDT: 2005-10-12 00:12:00; durationString: 86340 S; elapsedTime: 0:00:01.320018; rows: 602; rowsTotal: 4595359
2018-05-19 19:16:08,277 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2005-10-12 00:12:00
2018-05-19 19:16:08,278 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2005-10-13 00:11:00
2018-05-19 19:16:08,279 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2005-10-12 00:12:00; endDT: 2005-10-12 23:50:00; durationString: 85080 S
2018-05-19 19:16:09,867 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1418; elapsed time: 0:00:00.236794
2018-05-19 19:16:09,868 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1418; elapsed time: 0:00:00.795982
2018-05-19 19:16:09,999 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2005-10-12 00:12:00; endDT: 2005-10-12 23:50:00; durationString: 85080 S; elapsedTime: 0:00:01.719889; rows: 1418; rowsTotal: 4595359
2018-05-19 19:16:10,011 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2005-10-12 23:50:00
2018-05-19 19:16:10,011 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2005-10-13 23:28:00
2018-05-19 19:16:10,012 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2005-10-12 23:50:00; endDT: 2005-10-13 23:43:00; durationString: 85980 S
2018-05-19 19:16:11,407 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1433; elapsed time: 0:00:00.208279
2018-05-19 19:16:11,408 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1433; elapsed time: 0:00:00.647781
2018-05-19 19:16:11,531 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2005-10-12 23:50:00; endDT: 2005-10-13 23:43:00; durationString: 85980 S; elapsedTime: 0:00:01.519239; rows: 1433; rowsTotal: 4595359
2018-05-19 19:16:11,542 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2005-10-13 23:43:00
2018-05-19 19:16:11,543 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2005-10-14 23:36:00
2018-05-19 19:16:11,543 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2005-10-13 23:43:00; endDT: 2005-10-14 23:38:00; durationString: 86100 S
2018-05-19 19:16:13,181 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1435; elapsed time: 0:00:00.302499
2018-05-19 19:16:13,181 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1435; elapsed time: 0:00:00.880164
2018-05-19 19:16:13,477 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2005-10-13 23:43:00; endDT: 2005-10-14 23:38:00; durationString: 86100 S; elapsedTime: 0:00:01.933972; rows: 1435; rowsTotal: 4595359
2018-05-19 19:16:13,489 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2005-10-14 23:38:00
2018-05-19 19:16:13,489 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2005-10-15 23:33:00
2018-05-19 19:16:13,490 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2005-10-14 23:38:00; endDT: 2005-10-15 23:23:00; durationString: 85500 S
2018-05-19 19:16:14,835 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1425; elapsed time: 0:00:00.205373
2018-05-19 19:16:14,835 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1425; elapsed time: 0:00:00.643298
2018-05-19 19:16:14,965 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2005-10-14 23:38:00; endDT: 2005-10-15 23:23:00; durationString: 85500 S; elapsedTime: 0:00:01.475268; rows: 1425; rowsTotal: 4595359
2018-05-19 19:16:14,978 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2005-10-15 23:23:00
2018-05-19 19:16:14,978 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2005-10-16 23:08:00
2018-05-19 19:16:14,979 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2005-10-15 23:23:00; endDT: 2005-10-16 23:00:00; durationString: 85020 S
2018-05-19 19:16:16,286 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1327; elapsed time: 0:00:00.190674
2018-05-19 19:16:16,287 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1327; elapsed time: 0:00:00.614514
2018-05-19 19:16:16,397 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2005-10-15 23:23:00; endDT: 2005-10-16 23:00:00; durationString: 85020 S; elapsedTime: 0:00:01.417510; rows: 1327; rowsTotal: 4595359
2018-05-19 19:16:16,414 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2005-10-16 23:00:00
2018-05-19 19:16:16,415 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2005-10-17 22:37:00
2018-05-19 19:16:16,416 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2005-10-16 23:00:00; endDT: 2005-10-17 22:40:00; durationString: 85200 S
2018-05-19 19:16:17,383 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 502; elapsed time: 0:00:00.137502
2018-05-19 19:16:17,383 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 502; elapsed time: 0:00:00.347796
2018-05-19 19:16:17,499 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2005-10-16 23:00:00; endDT: 2005-10-17 22:40:00; durationString: 85200 S; elapsedTime: 0:00:01.083383; rows: 502; rowsTotal: 4595359
2018-05-19 19:16:17,511 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2005-10-17 22:40:00
2018-05-19 19:16:17,511 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2005-10-18 22:20:00
2018-05-19 19:16:17,512 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2005-10-17 22:40:00; endDT: 2005-10-18 22:39:00; durationString: 86340 S
2018-05-19 19:16:19,336 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1439; elapsed time: 0:00:00.468644
2018-05-19 19:16:19,337 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1439; elapsed time: 0:00:01.117118
2018-05-19 19:16:19,452 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2005-10-17 22:40:00; endDT: 2005-10-18 22:39:00; durationString: 86340 S; elapsedTime: 0:00:01.939465; rows: 1439; rowsTotal: 4595359
2018-05-19 19:16:19,469 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2005-10-18 22:39:00
2018-05-19 19:16:19,470 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2005-10-19 22:38:00
2018-05-19 19:16:19,472 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2005-10-18 22:39:00; endDT: 2005-10-19 22:20:00; durationString: 85260 S
2018-05-19 19:16:20,276 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 469; elapsed time: 0:00:00.129890
2018-05-19 19:16:20,276 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 469; elapsed time: 0:00:00.311740
2018-05-19 19:16:20,391 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2005-10-18 22:39:00; endDT: 2005-10-19 22:20:00; durationString: 85260 S; elapsedTime: 0:00:00.919512; rows: 469; rowsTotal: 4595359
2018-05-19 19:16:20,403 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2005-10-19 22:20:00
2018-05-19 19:16:20,404 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2005-10-20 22:01:00
2018-05-19 19:16:20,404 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2005-10-19 22:20:00; endDT: 2005-10-20 21:54:00; durationString: 84840 S
2018-05-19 19:16:21,244 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 375; elapsed time: 0:00:00.145530
2018-05-19 19:16:21,244 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 375; elapsed time: 0:00:00.311320
2018-05-19 19:16:21,355 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2005-10-19 22:20:00; endDT: 2005-10-20 21:54:00; durationString: 84840 S; elapsedTime: 0:00:00.950157; rows: 375; rowsTotal: 4595359
2018-05-19 19:16:21,371 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2005-10-20 21:54:00
2018-05-19 19:16:21,373 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2005-10-21 21:28:00
2018-05-19 19:16:21,374 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2005-10-20 21:54:00; endDT: 2005-10-21 21:41:00; durationString: 85620 S
2018-05-19 19:16:22,644 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 760; elapsed time: 0:00:00.344925
2018-05-19 19:16:22,645 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 760; elapsed time: 0:00:00.614567
2018-05-19 19:16:22,883 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2005-10-20 21:54:00; endDT: 2005-10-21 21:41:00; durationString: 85620 S; elapsedTime: 0:00:01.508825; rows: 760; rowsTotal: 4595359
2018-05-19 19:16:22,900 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2005-10-21 21:41:00
2018-05-19 19:16:22,901 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2005-10-22 21:28:00
2018-05-19 19:16:22,902 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2005-10-21 21:41:00; endDT: 2005-10-22 21:24:00; durationString: 85380 S
2018-05-19 19:16:26,656 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 942; elapsed time: 0:00:00.169739
2018-05-19 19:16:26,656 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 942; elapsed time: 0:00:00.495960
2018-05-19 19:16:26,772 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2005-10-21 21:41:00; endDT: 2005-10-22 21:24:00; durationString: 85380 S; elapsedTime: 0:00:03.869823; rows: 942; rowsTotal: 4595359
2018-05-19 19:16:26,784 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2005-10-22 21:24:00
2018-05-19 19:16:26,784 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2005-10-23 21:07:00
2018-05-19 19:16:26,784 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2005-10-22 21:24:00; endDT: 2005-10-23 21:17:00; durationString: 85980 S
2018-05-19 19:16:32,999 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 942; elapsed time: 0:00:00.322262
2018-05-19 19:16:32,999 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 942; elapsed time: 0:00:00.862474
2018-05-19 19:16:33,131 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2005-10-22 21:24:00; endDT: 2005-10-23 21:17:00; durationString: 85980 S; elapsedTime: 0:00:06.346819; rows: 942; rowsTotal: 4595359
2018-05-19 19:16:33,143 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2005-10-23 21:17:00
2018-05-19 19:16:33,143 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2005-10-24 21:10:00
2018-05-19 19:16:33,143 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2005-10-23 21:17:00; endDT: 2005-10-24 20:55:00; durationString: 85080 S
2018-05-19 19:16:38,421 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 590; elapsed time: 0:00:00.168462
2018-05-19 19:16:38,421 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 590; elapsed time: 0:00:00.453522
2018-05-19 19:16:38,596 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2005-10-23 21:17:00; endDT: 2005-10-24 20:55:00; durationString: 85080 S; elapsedTime: 0:00:05.453032; rows: 590; rowsTotal: 4595359
2018-05-19 19:16:38,608 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2005-10-24 20:55:00
2018-05-19 19:16:38,608 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2005-10-25 20:33:00
2018-05-19 19:16:38,608 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2005-10-24 20:55:00; endDT: 2005-10-25 20:50:00; durationString: 86100 S
2018-05-19 19:16:44,736 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1435; elapsed time: 0:00:00.188900
2018-05-19 19:16:44,736 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1435; elapsed time: 0:00:00.642398
2018-05-19 19:16:44,839 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2005-10-24 20:55:00; endDT: 2005-10-25 20:50:00; durationString: 86100 S; elapsedTime: 0:00:06.230140; rows: 1435; rowsTotal: 4595359
2018-05-19 19:16:44,850 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2005-10-25 20:50:00
2018-05-19 19:16:44,850 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2005-10-26 20:45:00
2018-05-19 19:16:44,851 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2005-10-25 20:50:00; endDT: 2005-10-26 20:49:00; durationString: 86340 S
2018-05-19 19:16:56,988 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1439; elapsed time: 0:00:00.248220
2018-05-19 19:16:56,989 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1439; elapsed time: 0:00:00.854077
2018-05-19 19:16:57,147 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2005-10-25 20:50:00; endDT: 2005-10-26 20:49:00; durationString: 86340 S; elapsedTime: 0:00:12.296334; rows: 1439; rowsTotal: 4595359
2018-05-19 19:16:57,158 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2005-10-26 20:49:00
2018-05-19 19:16:57,159 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2005-10-27 20:48:00
2018-05-19 19:16:57,159 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2005-10-26 20:49:00; endDT: 2005-10-27 20:41:00; durationString: 85920 S
2018-05-19 19:17:00,003 apscheduler.scheduler _process_jobs WARNING Execution of job "schedulerJobGetHistoricalData_000000 (trigger: cron[minute='*', second='0'], next run at: 2018-05-19 19:17:00 CEST)" skipped: maximum number of running instances reached (1)
2018-05-19 19:17:15,891 trading.containerClass myTimeoutCallback INFO timeout callback 20.010248
2018-05-19 19:17:15,891 trading.containerClass mySoftTimeoutCallback INFO soft time out watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB connected to 127.0.0.1:4002 clientId=24>, port=4002, clientId='24', appStartupTime=15)
2018-05-19 19:17:20,908 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1432; elapsed time: 0:00:00.261699
2018-05-19 19:17:20,908 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1432; elapsed time: 0:00:00.798825
2018-05-19 19:17:21,021 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2005-10-26 20:49:00; endDT: 2005-10-27 20:41:00; durationString: 85920 S; elapsedTime: 0:00:23.861653; rows: 1432; rowsTotal: 4595359
2018-05-19 19:17:21,040 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2005-10-27 20:41:00
2018-05-19 19:17:21,041 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2005-10-28 20:33:00
2018-05-19 19:17:21,043 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2005-10-27 20:41:00; endDT: 2005-10-28 20:40:00; durationString: 86340 S
2018-05-19 19:17:22,456 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1439; elapsed time: 0:00:00.197813
2018-05-19 19:17:22,456 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1439; elapsed time: 0:00:00.637473
2018-05-19 19:17:22,567 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2005-10-27 20:41:00; endDT: 2005-10-28 20:40:00; durationString: 86340 S; elapsedTime: 0:00:01.524194; rows: 1439; rowsTotal: 4595359
2018-05-19 19:17:22,579 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2005-10-28 20:40:00
2018-05-19 19:17:22,580 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2005-10-29 20:39:00
2018-05-19 19:17:22,580 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2005-10-28 20:40:00; endDT: 2005-10-29 20:27:00; durationString: 85620 S
2018-05-19 19:17:24,397 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1427; elapsed time: 0:00:00.459315
2018-05-19 19:17:24,397 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1427; elapsed time: 0:00:01.094182
2018-05-19 19:17:24,743 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2005-10-28 20:40:00; endDT: 2005-10-29 20:27:00; durationString: 85620 S; elapsedTime: 0:00:02.162113; rows: 1427; rowsTotal: 4595359
2018-05-19 19:17:24,760 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2005-10-29 20:27:00
2018-05-19 19:17:24,761 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2005-10-30 20:14:00
2018-05-19 19:17:24,762 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2005-10-29 20:27:00; endDT: 2005-10-30 20:26:00; durationString: 86340 S
2018-05-19 19:17:26,943 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1439; elapsed time: 0:00:00.199227
2018-05-19 19:17:26,943 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1439; elapsed time: 0:00:00.705080
2018-05-19 19:17:27,054 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2005-10-29 20:27:00; endDT: 2005-10-30 20:26:00; durationString: 86340 S; elapsedTime: 0:00:02.292014; rows: 1439; rowsTotal: 4595359
2018-05-19 19:17:27,066 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2005-10-30 20:26:00
2018-05-19 19:17:27,066 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2005-10-31 20:25:00
2018-05-19 19:17:27,066 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2005-10-30 20:26:00; endDT: 2005-10-31 20:14:00; durationString: 85680 S
2018-05-19 19:17:32,374 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 600; elapsed time: 0:00:00.136786
2018-05-19 19:17:32,374 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 600; elapsed time: 0:00:00.364210
2018-05-19 19:17:32,488 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2005-10-30 20:26:00; endDT: 2005-10-31 20:14:00; durationString: 85680 S; elapsedTime: 0:00:05.421834; rows: 600; rowsTotal: 4595359
2018-05-19 19:17:32,501 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2005-10-31 20:14:00
2018-05-19 19:17:32,502 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2005-11-01 20:02:00
2018-05-19 19:17:32,503 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2005-10-31 20:14:00; endDT: 2005-11-01 19:50:00; durationString: 84960 S
2018-05-19 19:17:34,105 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1416; elapsed time: 0:00:00.341970
2018-05-19 19:17:34,105 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1416; elapsed time: 0:00:00.884742
2018-05-19 19:17:34,445 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2005-10-31 20:14:00; endDT: 2005-11-01 19:50:00; durationString: 84960 S; elapsedTime: 0:00:01.942674; rows: 1416; rowsTotal: 4595359
2018-05-19 19:17:34,457 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2005-11-01 19:50:00
2018-05-19 19:17:34,457 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2005-11-02 19:26:00
2018-05-19 19:17:34,458 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2005-11-01 19:50:00; endDT: 2005-11-02 19:31:00; durationString: 85260 S
2018-05-19 19:17:39,355 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1420; elapsed time: 0:00:00.403946
2018-05-19 19:17:39,356 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1420; elapsed time: 0:00:01.083621
2018-05-19 19:17:39,559 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2005-11-01 19:50:00; endDT: 2005-11-02 19:31:00; durationString: 85260 S; elapsedTime: 0:00:05.101523; rows: 1420; rowsTotal: 4595359
2018-05-19 19:17:39,571 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2005-11-02 19:31:00
2018-05-19 19:17:39,571 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2005-11-03 19:12:00
2018-05-19 19:17:39,572 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2005-11-02 19:31:00; endDT: 2005-11-03 19:30:00; durationString: 86340 S
2018-05-20 00:11:53,610 ib_insync.Watchdog start INFO Starting
2018-05-20 00:11:53,612 quamash <module> INFO Using Qt Implementation: PyQt5
2018-05-20 00:11:53,636 ib_insync.IBC startAsync INFO Starting
2018-05-20 00:12:11,040 ib_insync.Watchdog start INFO Starting
2018-05-20 00:12:11,041 quamash <module> INFO Using Qt Implementation: PyQt5
2018-05-20 00:12:11,066 ib_insync.IBC startAsync INFO Starting
2018-05-20 00:12:26,082 ib_insync.client connectAsync INFO Connecting to 127.0.0.1:4002 with clientId 24...
2018-05-20 00:12:26,083 ib_insync.client _onSocketConnected INFO Connected
2018-05-20 00:12:26,123 ib_insync.client _onSocketHasData INFO Logged on to server version 141
2018-05-20 00:12:26,167 ib_insync.client connectAsync INFO API connection ready
2018-05-20 00:12:26,239 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17709995, marketValue=218940.59, averageCost=1.2182257, unrealizedPNL=-7649.39, realizedPNL=0.0, account='DU946735')
2018-05-20 00:12:26,240 ib_insync.wrapper position INFO position: Position(account='DU946735', contract=Contract(secType='CASH', conId=12087792, symbol='EUR', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, avgCost=1.2182257)
2018-05-20 00:12:26,267 ib_insync.ib connectAsync INFO Synchronization complete
2018-05-20 00:12:26,388 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() started
2018-05-20 00:12:26,390 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop datetime
2018-05-20 00:12:26,390 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 00:12:26,390 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop close
2018-05-20 00:12:26,391 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() complete
2018-05-20 00:12:26,391 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() started
2018-05-20 00:12:26,391 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop datetime
2018-05-20 00:12:26,391 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 00:12:26,392 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop close
2018-05-20 00:12:26,392 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() complete
2018-05-20 00:12:26,392 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() started
2018-05-20 00:12:26,392 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop datetime
2018-05-20 00:12:26,392 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 00:12:26,393 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop close
2018-05-20 00:12:26,393 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() complete
2018-05-20 00:12:26,393 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() started
2018-05-20 00:12:26,393 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop datetime
2018-05-20 00:12:26,394 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 00:12:26,394 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop close
2018-05-20 00:12:26,394 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() complete
2018-05-20 00:12:26,394 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() started
2018-05-20 00:12:26,395 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop datetime
2018-05-20 00:12:26,395 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 00:12:26,395 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop close
2018-05-20 00:12:26,395 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() complete
2018-05-20 00:12:26,396 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() started
2018-05-20 00:12:26,396 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop datetime
2018-05-20 00:12:26,396 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 00:12:26,396 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop close
2018-05-20 00:12:26,397 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() complete
2018-05-20 00:12:26,397 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() started
2018-05-20 00:12:26,397 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop datetime
2018-05-20 00:12:26,397 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 00:12:26,397 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop close
2018-05-20 00:12:26,398 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() complete
2018-05-20 00:12:26,398 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() started
2018-05-20 00:12:26,398 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop datetime
2018-05-20 00:12:26,398 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 00:12:26,399 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop close
2018-05-20 00:12:26,399 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() complete
2018-05-20 00:12:26,399 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() started
2018-05-20 00:12:26,399 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop datetime
2018-05-20 00:12:26,400 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop diffToNextRowInMinutes
2018-05-20 00:12:26,400 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop close
2018-05-20 00:12:26,400 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() complete
2018-05-20 00:12:26,400 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() started
2018-05-20 00:12:26,400 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop datetime
2018-05-20 00:12:26,401 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop diffToNextRowInMinutes
2018-05-20 00:12:26,401 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop close
2018-05-20 00:12:26,401 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() complete
2018-05-20 00:12:26,401 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() started
2018-05-20 00:12:26,402 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop datetime
2018-05-20 00:12:26,402 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop diffToNextRowInMinutes
2018-05-20 00:12:26,402 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop close
2018-05-20 00:12:26,402 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() complete
2018-05-20 00:12:26,403 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() started
2018-05-20 00:12:26,403 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop datetime
2018-05-20 00:12:26,403 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop diffToNextRowInMinutes
2018-05-20 00:12:26,403 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop close
2018-05-20 00:12:26,404 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() complete
2018-05-20 00:12:26,404 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() started
2018-05-20 00:12:26,404 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop datetime
2018-05-20 00:12:26,404 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop diffToNextRowInMinutes
2018-05-20 00:12:26,405 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop close
2018-05-20 00:12:26,405 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() complete
2018-05-20 00:12:26,405 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() started
2018-05-20 00:12:26,405 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop datetime
2018-05-20 00:12:26,406 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop diffToNextRowInMinutes
2018-05-20 00:12:26,406 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop close
2018-05-20 00:12:26,406 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() complete
2018-05-20 00:12:26,407 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-20 00:12:26,408 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-20 00:12:26,408 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 00:12:29,611 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-20 00:12:29,612 sqlalchemy.engine.base.Engine _execute_context INFO PRAGMA table_info("MarketDataInfoTable")
2018-05-20 00:12:29,612 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 00:12:29,615 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-20 00:12:29,616 sqlalchemy.engine.base.Engine _execute_context INFO SELECT count(*) AS count_1 
FROM (SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable") AS anon_1
2018-05-20 00:12:29,616 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 00:12:29,618 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName", "MarketDataInfoTable".description, "MarketDataInfoTable"."conId", "MarketDataInfoTable".symbol, "MarketDataInfoTable".currency, "MarketDataInfoTable".exchange, "MarketDataInfoTable".category, "MarketDataInfoTable"."secType", "MarketDataInfoTable"."earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-20 00:12:29,619 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 00:12:29,622 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-20 00:12:29,622 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 00:12:30,245 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-20 00:12:30,266 apscheduler.scheduler start INFO Scheduler started
2018-05-20 00:12:30,266 root runProg INFO Now updating the settings for the request of recent historical bars
2018-05-20 00:12:30,266 root runProg INFO Now requesting initial recent historical bars
2018-05-20 00:12:30,266 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 00:12:30,268 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for contract: EUR.AUD
2018-05-20 00:12:30,268 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 00:12:31,824 ib_insync.wrapper error INFO Warning 2106, reqId -1: HMDS data farm connection is OK:cashhmds
2018-05-20 00:12:31,825 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2106, errorString: HMDS data farm connection is OK:cashhmds, localSymbol: None
2018-05-20 00:12:31,966 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for contract: EUR.CAD
2018-05-20 00:12:31,966 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CAD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 00:12:32,176 trading.containerClass addJobToScheduler INFO addJobToScheduler: jobName=asyncioJobGetHistoricalData_000000; args=([<IB connected to 127.0.0.1:4002 clientId=24>, <trading.database.tradingDB object at 0x7ff24c544df0>, [Contract(secType='CASH', conId=15016065, symbol='EUR', exchange='IDEALPRO', currency='AUD', localSymbol='EUR.AUD', tradingClass='EUR.AUD'), Contract(secType='CASH', conId=15016068, symbol='EUR', exchange='IDEALPRO', currency='CAD', localSymbol='EUR.CAD', tradingClass='EUR.CAD')], {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'earliestDateTimeUTCNaive': Timestamp('2018-05-14 22:12:32.173885'), 'timeOutTimeHistoricalBars': 1800}], None), kwargs={}
2018-05-20 00:12:32,257 apscheduler.scheduler _real_add_job INFO Added job "asyncioJobGetHistoricalData_000000" to job store "default"
2018-05-20 00:12:35,003 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 00:12:42 CEST)" (scheduled at 2018-05-20 00:12:35+02:00)
2018-05-20 00:12:35,012 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, AUD; is going to be performed because earliestDateTime is given by IB: 2005-09-28 03:30:00
2018-05-20 00:12:35,013 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-15 22:01:32.975863
2018-05-20 00:12:35,013 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-16 22:01:32.975863
2018-05-20 00:12:35,013 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-15 22:01:32.975863; endDT: 2018-05-16 21:45:32.975863; durationString: 85440 S
2018-05-20 00:12:36,371 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1425; elapsed time: 0:00:00.429986
2018-05-20 00:12:36,372 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1425; elapsed time: 0:00:00.791037
2018-05-20 00:12:36,499 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-15 22:01:32.975863; endDT: 2018-05-16 21:45:32.975863; durationString: 85440 S; elapsedTime: 0:00:01.485424; rows: 1425; rowsTotal: 4595359
2018-05-20 00:12:36,510 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-16 21:45:32.975863
2018-05-20 00:12:36,511 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-17 21:29:32.975863
2018-05-20 00:12:36,511 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-16 21:45:32.975863; endDT: 2018-05-17 21:18:32.975863; durationString: 84780 S
2018-05-20 00:12:37,382 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1414; elapsed time: 0:00:00.194590
2018-05-20 00:12:37,382 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1414; elapsed time: 0:00:00.445337
2018-05-20 00:12:37,545 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-16 21:45:32.975863; endDT: 2018-05-17 21:18:32.975863; durationString: 84780 S; elapsedTime: 0:00:01.033731; rows: 1414; rowsTotal: 4595359
2018-05-20 00:12:37,556 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-17 21:18:32.975863
2018-05-20 00:12:37,556 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-18 20:51:32.975863
2018-05-20 00:12:37,556 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-17 21:18:32.975863; endDT: 2018-05-18 20:56:32.975863; durationString: 85080 S
2018-05-20 00:12:38,369 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1419; elapsed time: 0:00:00.177368
2018-05-20 00:12:38,369 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1419; elapsed time: 0:00:00.409943
2018-05-20 00:12:38,476 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-17 21:18:32.975863; endDT: 2018-05-18 20:56:32.975863; durationString: 85080 S; elapsedTime: 0:00:00.919347; rows: 1419; rowsTotal: 4595359
2018-05-20 00:12:38,487 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-18 20:56:32.975863
2018-05-20 00:12:38,487 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-19 20:34:32.975863
2018-05-20 00:12:38,487 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-18 20:56:32.975863; endDT: 2018-05-19 20:49:32.975863; durationString: 85980 S
2018-05-20 00:12:39,231 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1433; elapsed time: 0:00:00.118706
2018-05-20 00:12:39,231 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1433; elapsed time: 0:00:00.335447
2018-05-20 00:12:39,339 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-18 20:56:32.975863; endDT: 2018-05-19 20:49:32.975863; durationString: 85980 S; elapsedTime: 0:00:00.851898; rows: 1433; rowsTotal: 4595359
2018-05-20 00:12:39,350 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-19 20:49:32.975863
2018-05-20 00:12:39,350 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-20 20:42:32.975863
2018-05-20 00:12:39,351 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-19 20:49:32.975863; endDT: 2018-05-20 20:47:32.975863; durationString: 86280 S
2018-05-20 00:12:40,549 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1438; elapsed time: 0:00:00.133134
2018-05-20 00:12:40,550 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1438; elapsed time: 0:00:00.717725
2018-05-20 00:12:40,673 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-19 20:49:32.975863; endDT: 2018-05-20 20:47:32.975863; durationString: 86280 S; elapsedTime: 0:00:01.322277; rows: 1438; rowsTotal: 4595359
2018-05-20 00:12:40,684 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: EUR, AUD; elapsedTime: 0:00:05.676096
2018-05-20 00:12:40,686 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, CAD; is going to be performed because earliestDateTime is given by IB: 2005-03-09 04:30:00
2018-05-20 00:12:40,686 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-14 22:12:32.173885
2018-05-20 00:12:40,687 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-15 22:12:32.173885
2018-05-20 00:12:40,687 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-14 22:12:32.173885; endDT: 2018-05-15 21:57:32.173885; durationString: 85500 S
2018-05-20 00:12:41,727 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1426; elapsed time: 0:00:00.329205
2018-05-20 00:12:41,727 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1426; elapsed time: 0:00:00.606213
2018-05-20 00:12:41,839 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-14 22:12:32.173885; endDT: 2018-05-15 21:57:32.173885; durationString: 85500 S; elapsedTime: 0:00:01.152291; rows: 1426; rowsTotal: 2099282
2018-05-20 00:12:41,850 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-15 21:57:32.173885
2018-05-20 00:12:41,850 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-16 21:42:32.173885
2018-05-20 00:12:41,851 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-15 21:57:32.173885; endDT: 2018-05-16 21:31:32.173885; durationString: 84840 S
2018-05-20 00:12:42,001 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 00:12:42 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 00:12:42,683 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1415; elapsed time: 0:00:00.196127
2018-05-20 00:12:42,684 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1415; elapsed time: 0:00:00.416863
2018-05-20 00:12:42,845 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-15 21:57:32.173885; endDT: 2018-05-16 21:31:32.173885; durationString: 84840 S; elapsedTime: 0:00:00.994568; rows: 1415; rowsTotal: 2099282
2018-05-20 00:12:42,856 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-16 21:31:32.173885
2018-05-20 00:12:42,856 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-17 21:05:32.173885
2018-05-20 00:12:42,857 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-16 21:31:32.173885; endDT: 2018-05-17 21:27:32.173885; durationString: 86160 S
2018-05-20 00:12:43,628 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1437; elapsed time: 0:00:00.128782
2018-05-20 00:12:43,628 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1437; elapsed time: 0:00:00.357267
2018-05-20 00:12:43,703 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-16 21:31:32.173885; endDT: 2018-05-17 21:27:32.173885; durationString: 86160 S; elapsedTime: 0:00:00.846848; rows: 1437; rowsTotal: 2099282
2018-05-20 00:12:43,715 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-17 21:27:32.173885
2018-05-20 00:12:43,715 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-18 21:23:32.173885
2018-05-20 00:12:43,715 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-17 21:27:32.173885; endDT: 2018-05-18 21:07:32.173885; durationString: 85200 S
2018-05-20 00:12:44,536 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1420; elapsed time: 0:00:00.154307
2018-05-20 00:12:44,536 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1420; elapsed time: 0:00:00.404541
2018-05-20 00:12:44,612 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-17 21:27:32.173885; endDT: 2018-05-18 21:07:32.173885; durationString: 85200 S; elapsedTime: 0:00:00.896934; rows: 1420; rowsTotal: 2099282
2018-05-20 00:12:44,623 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-18 21:07:32.173885
2018-05-20 00:12:44,624 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-19 20:47:32.173885
2018-05-20 00:12:44,624 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-18 21:07:32.173885; endDT: 2018-05-19 20:41:32.173885; durationString: 84840 S
2018-05-20 00:12:45,380 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1414; elapsed time: 0:00:00.133371
2018-05-20 00:12:45,380 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1414; elapsed time: 0:00:00.363935
2018-05-20 00:12:45,636 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-18 21:07:32.173885; endDT: 2018-05-19 20:41:32.173885; durationString: 84840 S; elapsedTime: 0:00:01.012101; rows: 1414; rowsTotal: 2099282
2018-05-20 00:12:45,647 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-19 20:41:32.173885
2018-05-20 00:12:45,647 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-20 20:15:32.173885
2018-05-20 00:12:45,648 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-19 20:41:32.173885; endDT: 2018-05-20 20:20:32.173885; durationString: 85140 S
2018-05-20 00:12:46,369 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1419; elapsed time: 0:00:00.092444
2018-05-20 00:12:46,369 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1419; elapsed time: 0:00:00.328924
2018-05-20 00:12:46,628 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-19 20:41:32.173885; endDT: 2018-05-20 20:20:32.173885; durationString: 85140 S; elapsedTime: 0:00:00.980687; rows: 1419; rowsTotal: 2099282
2018-05-20 00:12:46,640 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: EUR, CAD; elapsedTime: 0:00:05.955408
2018-05-20 00:12:46,640 apscheduler.executors.default run_coroutine_job INFO Job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 00:12:49 CEST)" executed successfully
2018-05-20 00:12:49,006 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 00:12:56 CEST)" (scheduled at 2018-05-20 00:12:49+02:00)
2018-05-20 00:12:49,061 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, AUD; is going to be performed because earliestDateTime is given by IB: 2005-09-28 03:30:00
2018-05-20 00:12:49,065 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-14 22:12:32.173885
2018-05-20 00:12:49,065 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-15 22:12:32.173885
2018-05-20 00:12:49,067 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-14 22:12:32.173885; endDT: 2018-05-15 21:47:32.173885; durationString: 84900 S
2018-05-20 00:12:49,934 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1416; elapsed time: 0:00:00.156991
2018-05-20 00:12:49,934 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1416; elapsed time: 0:00:00.406077
2018-05-20 00:12:50,034 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-14 22:12:32.173885; endDT: 2018-05-15 21:47:32.173885; durationString: 84900 S; elapsedTime: 0:00:00.967566; rows: 1416; rowsTotal: 4595359
2018-05-20 00:12:50,045 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-15 21:47:32.173885
2018-05-20 00:12:50,045 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-16 21:22:32.173885
2018-05-20 00:12:50,045 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-15 21:47:32.173885; endDT: 2018-05-16 21:27:32.173885; durationString: 85200 S
2018-05-20 00:12:51,175 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1421; elapsed time: 0:00:00.195527
2018-05-20 00:12:51,175 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1421; elapsed time: 0:00:00.652659
2018-05-20 00:12:51,518 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-15 21:47:32.173885; endDT: 2018-05-16 21:27:32.173885; durationString: 85200 S; elapsedTime: 0:00:01.472153; rows: 1421; rowsTotal: 4595359
2018-05-20 00:12:51,529 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-16 21:27:32.173885
2018-05-20 00:12:51,529 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-17 21:07:32.173885
2018-05-20 00:12:51,529 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-16 21:27:32.173885; endDT: 2018-05-17 21:11:32.173885; durationString: 85440 S
2018-05-20 00:12:52,513 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1424; elapsed time: 0:00:00.253589
2018-05-20 00:12:52,513 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1424; elapsed time: 0:00:00.576453
2018-05-20 00:12:52,650 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-16 21:27:32.173885; endDT: 2018-05-17 21:11:32.173885; durationString: 85440 S; elapsedTime: 0:00:01.120053; rows: 1424; rowsTotal: 4595359
2018-05-20 00:12:52,661 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-17 21:11:32.173885
2018-05-20 00:12:52,661 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-18 20:55:32.173885
2018-05-20 00:12:52,662 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-17 21:11:32.173885; endDT: 2018-05-18 20:59:32.173885; durationString: 85680 S
2018-05-20 00:12:53,434 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1429; elapsed time: 0:00:00.116254
2018-05-20 00:12:53,434 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1429; elapsed time: 0:00:00.368729
2018-05-20 00:12:53,541 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-17 21:11:32.173885; endDT: 2018-05-18 20:59:32.173885; durationString: 85680 S; elapsedTime: 0:00:00.879276; rows: 1429; rowsTotal: 4595359
2018-05-20 00:12:53,552 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-18 20:59:32.173885
2018-05-20 00:12:53,552 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-19 20:47:32.173885
2018-05-20 00:12:53,553 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-18 20:59:32.173885; endDT: 2018-05-19 20:43:32.173885; durationString: 85440 S
2018-05-20 00:12:54,315 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1424; elapsed time: 0:00:00.129073
2018-05-20 00:12:54,315 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1424; elapsed time: 0:00:00.355920
2018-05-20 00:12:54,423 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-18 20:59:32.173885; endDT: 2018-05-19 20:43:32.173885; durationString: 85440 S; elapsedTime: 0:00:00.870078; rows: 1424; rowsTotal: 4595359
2018-05-20 00:12:54,434 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-19 20:43:32.173885
2018-05-20 00:12:54,434 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-20 20:27:32.173885
2018-05-20 00:12:54,434 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-19 20:43:32.173885; endDT: 2018-05-20 20:26:32.173885; durationString: 85380 S
2018-05-20 00:12:55,186 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1423; elapsed time: 0:00:00.119331
2018-05-20 00:12:55,186 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1423; elapsed time: 0:00:00.347496
2018-05-20 00:12:55,297 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-19 20:43:32.173885; endDT: 2018-05-20 20:26:32.173885; durationString: 85380 S; elapsedTime: 0:00:00.862660; rows: 1423; rowsTotal: 4595359
2018-05-20 00:12:55,308 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: EUR, AUD; elapsedTime: 0:00:06.254254
2018-05-20 00:12:55,310 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, CAD; is going to be performed because earliestDateTime is given by IB: 2005-03-09 04:30:00
2018-05-20 00:12:55,311 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-18 22:12:55.310577
2018-05-20 00:12:55,311 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-19 22:12:55.310577
2018-05-20 00:12:55,311 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-18 22:12:55.310577; endDT: 2018-05-19 21:59:55.310577; durationString: 85620 S
2018-05-20 00:12:56,325 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1427; elapsed time: 0:00:00.146231
2018-05-20 00:12:56,325 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1427; elapsed time: 0:00:00.618583
2018-05-20 00:12:56,471 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-18 22:12:55.310577; endDT: 2018-05-19 21:59:55.310577; durationString: 85620 S; elapsedTime: 0:00:01.160391; rows: 1427; rowsTotal: 2099282
2018-05-20 00:12:56,472 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 00:12:56 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 00:12:56,484 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-19 21:59:55.310577
2018-05-20 00:12:56,484 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-20 21:46:55.310577
2018-05-20 00:12:56,484 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-19 21:59:55.310577; endDT: 2018-05-20 21:39:55.310577; durationString: 85200 S
2018-05-20 00:12:57,384 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1396; elapsed time: 0:00:00.108244
2018-05-20 00:12:57,384 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1396; elapsed time: 0:00:00.412496
2018-05-20 00:12:57,644 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-19 21:59:55.310577; endDT: 2018-05-20 21:39:55.310577; durationString: 85200 S; elapsedTime: 0:00:01.159079; rows: 1396; rowsTotal: 2099282
2018-05-20 00:12:57,655 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: EUR, CAD; elapsedTime: 0:00:02.346722
2018-05-20 00:12:57,656 apscheduler.executors.default run_coroutine_job INFO Job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 00:13:00 CEST)" executed successfully
2018-05-20 00:13:00,004 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 00:13:07 CEST)" (scheduled at 2018-05-20 00:13:00+02:00)
2018-05-20 00:13:00,040 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, AUD; is going to be performed because earliestDateTime is given by IB: 2005-09-28 03:30:00
2018-05-20 00:13:00,041 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-14 22:12:32.173885
2018-05-20 00:13:00,041 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-15 22:12:32.173885
2018-05-20 00:13:00,042 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-14 22:12:32.173885; endDT: 2018-05-15 21:55:32.173885; durationString: 85380 S
2018-05-20 00:13:01,282 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1424; elapsed time: 0:00:00.272247
2018-05-20 00:13:01,282 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1424; elapsed time: 0:00:00.735700
2018-05-20 00:13:01,739 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-14 22:12:32.173885; endDT: 2018-05-15 21:55:32.173885; durationString: 85380 S; elapsedTime: 0:00:01.696738; rows: 1424; rowsTotal: 4595359
2018-05-20 00:13:01,750 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-15 21:55:32.173885
2018-05-20 00:13:01,750 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-16 21:38:32.173885
2018-05-20 00:13:01,750 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-15 21:55:32.173885; endDT: 2018-05-16 21:37:32.173885; durationString: 85320 S
2018-05-20 00:13:02,702 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1423; elapsed time: 0:00:00.181501
2018-05-20 00:13:02,702 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1423; elapsed time: 0:00:00.462568
2018-05-20 00:13:03,146 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-15 21:55:32.173885; endDT: 2018-05-16 21:37:32.173885; durationString: 85320 S; elapsedTime: 0:00:01.395480; rows: 1423; rowsTotal: 4595359
2018-05-20 00:13:03,157 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-16 21:37:32.173885
2018-05-20 00:13:03,157 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-17 21:19:32.173885
2018-05-20 00:13:03,157 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-16 21:37:32.173885; endDT: 2018-05-17 21:27:32.173885; durationString: 85800 S
2018-05-20 00:13:04,158 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1431; elapsed time: 0:00:00.172767
2018-05-20 00:13:04,158 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1431; elapsed time: 0:00:00.528043
2018-05-20 00:13:04,276 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-16 21:37:32.173885; endDT: 2018-05-17 21:27:32.173885; durationString: 85800 S; elapsedTime: 0:00:01.118472; rows: 1431; rowsTotal: 4595359
2018-05-20 00:13:04,287 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-17 21:27:32.173885
2018-05-20 00:13:04,287 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-18 21:17:32.173885
2018-05-20 00:13:04,288 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-17 21:27:32.173885; endDT: 2018-05-18 21:11:32.173885; durationString: 85440 S
2018-05-20 00:13:05,122 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1424; elapsed time: 0:00:00.145291
2018-05-20 00:13:05,123 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1424; elapsed time: 0:00:00.411705
2018-05-20 00:13:05,235 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-17 21:27:32.173885; endDT: 2018-05-18 21:11:32.173885; durationString: 85440 S; elapsedTime: 0:00:00.947786; rows: 1424; rowsTotal: 4595359
2018-05-20 00:13:05,247 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-18 21:11:32.173885
2018-05-20 00:13:05,247 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-19 20:55:32.173885
2018-05-20 00:13:05,247 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-18 21:11:32.173885; endDT: 2018-05-19 20:52:32.173885; durationString: 85260 S
2018-05-20 00:13:06,062 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1421; elapsed time: 0:00:00.132311
2018-05-20 00:13:06,063 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1421; elapsed time: 0:00:00.373550
2018-05-20 00:13:06,173 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-18 21:11:32.173885; endDT: 2018-05-19 20:52:32.173885; durationString: 85260 S; elapsedTime: 0:00:00.926395; rows: 1421; rowsTotal: 4595359
2018-05-20 00:13:06,185 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-19 20:52:32.173885
2018-05-20 00:13:06,185 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-20 20:33:32.173885
2018-05-20 00:13:06,185 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-19 20:52:32.173885; endDT: 2018-05-20 20:44:32.173885; durationString: 85920 S
2018-05-20 00:13:07,273 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1432; elapsed time: 0:00:00.155741
2018-05-20 00:13:07,274 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1432; elapsed time: 0:00:00.614949
2018-05-20 00:13:07,615 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-19 20:52:32.173885; endDT: 2018-05-20 20:44:32.173885; durationString: 85920 S; elapsedTime: 0:00:01.429585; rows: 1432; rowsTotal: 4595359
2018-05-20 00:13:07,616 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 00:13:07 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 00:13:07,627 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: EUR, AUD; elapsedTime: 0:00:07.589329
2018-05-20 00:13:07,628 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, CAD; is going to be performed because earliestDateTime is given by IB: 2005-03-09 04:30:00
2018-05-20 00:13:07,629 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-18 22:13:07.629225
2018-05-20 00:13:07,629 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-19 22:13:07.629225
2018-05-20 00:13:07,630 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-18 22:13:07.629225; endDT: 2018-05-19 22:04:07.629225; durationString: 85860 S
2018-05-20 00:13:08,520 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1431; elapsed time: 0:00:00.135355
2018-05-20 00:13:08,521 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1431; elapsed time: 0:00:00.473064
2018-05-20 00:13:08,677 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-18 22:13:07.629225; endDT: 2018-05-19 22:04:07.629225; durationString: 85860 S; elapsedTime: 0:00:01.047023; rows: 1431; rowsTotal: 2099282
2018-05-20 00:13:08,688 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-19 22:04:07.629225
2018-05-20 00:13:08,688 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-20 21:55:07.629225
2018-05-20 00:13:08,688 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-19 22:04:07.629225; endDT: 2018-05-20 21:55:07.629225; durationString: 85860 S
2018-05-20 00:13:09,440 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1391; elapsed time: 0:00:00.093609
2018-05-20 00:13:09,440 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1391; elapsed time: 0:00:00.323437
2018-05-20 00:13:09,523 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-19 22:04:07.629225; endDT: 2018-05-20 21:55:07.629225; durationString: 85860 S; elapsedTime: 0:00:00.834749; rows: 1391; rowsTotal: 2099282
2018-05-20 00:13:09,534 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: EUR, CAD; elapsedTime: 0:00:01.907393
2018-05-20 00:13:09,535 apscheduler.executors.default run_coroutine_job INFO Job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 00:13:14 CEST)" executed successfully
2018-05-20 00:13:14,006 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 00:13:21 CEST)" (scheduled at 2018-05-20 00:13:14+02:00)
2018-05-20 00:13:14,041 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, AUD; is going to be performed because earliestDateTime is given by IB: 2005-09-28 03:30:00
2018-05-20 00:13:14,042 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-14 22:12:32.173885
2018-05-20 00:13:14,042 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-15 22:12:32.173885
2018-05-20 00:13:14,043 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-14 22:12:32.173885; endDT: 2018-05-15 22:11:32.173885; durationString: 86340 S
2018-05-20 00:13:14,900 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1440; elapsed time: 0:00:00.155619
2018-05-20 00:13:14,900 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1440; elapsed time: 0:00:00.423165
2018-05-20 00:13:15,013 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-14 22:12:32.173885; endDT: 2018-05-15 22:11:32.173885; durationString: 86340 S; elapsedTime: 0:00:00.969942; rows: 1440; rowsTotal: 4595359
2018-05-20 00:13:15,024 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-15 22:11:32.173885
2018-05-20 00:13:15,024 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-16 22:10:32.173885
2018-05-20 00:13:15,025 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-15 22:11:32.173885; endDT: 2018-05-16 21:44:32.173885; durationString: 84780 S
2018-05-20 00:13:15,892 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1414; elapsed time: 0:00:00.194875
2018-05-20 00:13:15,892 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1414; elapsed time: 0:00:00.437496
2018-05-20 00:13:16,008 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-15 22:11:32.173885; endDT: 2018-05-16 21:44:32.173885; durationString: 84780 S; elapsedTime: 0:00:00.983379; rows: 1414; rowsTotal: 4595359
2018-05-20 00:13:16,019 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-16 21:44:32.173885
2018-05-20 00:13:16,020 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-17 21:17:32.173885
2018-05-20 00:13:16,020 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-16 21:44:32.173885; endDT: 2018-05-17 21:35:32.173885; durationString: 85860 S
2018-05-20 00:13:17,151 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1432; elapsed time: 0:00:00.387299
2018-05-20 00:13:17,151 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1432; elapsed time: 0:00:00.653325
2018-05-20 00:13:17,277 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-16 21:44:32.173885; endDT: 2018-05-17 21:35:32.173885; durationString: 85860 S; elapsedTime: 0:00:01.257524; rows: 1432; rowsTotal: 4595359
2018-05-20 00:13:17,289 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-17 21:35:32.173885
2018-05-20 00:13:17,289 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-18 21:26:32.173885
2018-05-20 00:13:17,289 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-17 21:35:32.173885; endDT: 2018-05-18 21:07:32.173885; durationString: 84720 S
2018-05-20 00:13:18,130 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1412; elapsed time: 0:00:00.147326
2018-05-20 00:13:18,130 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1412; elapsed time: 0:00:00.447062
2018-05-20 00:13:18,477 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-17 21:35:32.173885; endDT: 2018-05-18 21:07:32.173885; durationString: 84720 S; elapsedTime: 0:00:01.187626; rows: 1412; rowsTotal: 4595359
2018-05-20 00:13:18,488 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-18 21:07:32.173885
2018-05-20 00:13:18,488 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-19 20:39:32.173885
2018-05-20 00:13:18,489 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-18 21:07:32.173885; endDT: 2018-05-19 20:55:32.173885; durationString: 85680 S
2018-05-20 00:13:19,323 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1428; elapsed time: 0:00:00.148459
2018-05-20 00:13:19,323 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1428; elapsed time: 0:00:00.415917
2018-05-20 00:13:19,426 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-18 21:07:32.173885; endDT: 2018-05-19 20:55:32.173885; durationString: 85680 S; elapsedTime: 0:00:00.937090; rows: 1428; rowsTotal: 4595359
2018-05-20 00:13:19,437 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-19 20:55:32.173885
2018-05-20 00:13:19,437 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-20 20:43:32.173885
2018-05-20 00:13:19,437 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-19 20:55:32.173885; endDT: 2018-05-20 20:54:32.173885; durationString: 86340 S
2018-05-20 00:13:20,209 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1439; elapsed time: 0:00:00.142884
2018-05-20 00:13:20,209 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1439; elapsed time: 0:00:00.368048
2018-05-20 00:13:20,323 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-19 20:55:32.173885; endDT: 2018-05-20 20:54:32.173885; durationString: 86340 S; elapsedTime: 0:00:00.886107; rows: 1439; rowsTotal: 4595359
2018-05-20 00:13:20,335 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: EUR, AUD; elapsedTime: 0:00:06.296006
2018-05-20 00:13:20,338 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, CAD; is going to be performed because earliestDateTime is given by IB: 2005-03-09 04:30:00
2018-05-20 00:13:20,339 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-18 22:13:20.338794
2018-05-20 00:13:20,339 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-19 22:13:20.338794
2018-05-20 00:13:20,340 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-18 22:13:20.338794; endDT: 2018-05-19 21:54:20.338794; durationString: 85260 S
2018-05-20 00:13:21,137 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1421; elapsed time: 0:00:00.100164
2018-05-20 00:13:21,137 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1421; elapsed time: 0:00:00.342452
2018-05-20 00:13:21,221 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-18 22:13:20.338794; endDT: 2018-05-19 21:54:20.338794; durationString: 85260 S; elapsedTime: 0:00:00.880917; rows: 1421; rowsTotal: 2099282
2018-05-20 00:13:21,222 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 00:13:21 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 00:13:21,234 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-19 21:54:20.338794
2018-05-20 00:13:21,234 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-20 21:35:20.338794
2018-05-20 00:13:21,234 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-19 21:54:20.338794; endDT: 2018-05-20 21:39:20.338794; durationString: 85500 S
2018-05-20 00:13:22,051 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1401; elapsed time: 0:00:00.092548
2018-05-20 00:13:22,052 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1401; elapsed time: 0:00:00.395205
2018-05-20 00:13:22,359 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-19 21:54:20.338794; endDT: 2018-05-20 21:39:20.338794; durationString: 85500 S; elapsedTime: 0:00:01.125416; rows: 1401; rowsTotal: 2099282
2018-05-20 00:13:22,370 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: EUR, CAD; elapsedTime: 0:00:02.035178
2018-05-20 00:13:22,371 apscheduler.executors.default run_coroutine_job INFO Job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 00:13:28 CEST)" executed successfully
2018-05-20 00:13:25,235 ib_insync.client _onSocketDisconnected ERROR Peer closed connection
2018-05-20 00:13:39,703 trading.containerClass myStoppingCallback INFO stopping watchdog callback: Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-20 00:13:48,592 trading.containerClass myStoppingCallback INFO removing jobs from the scheduler
2018-05-20 00:13:51,062 trading.containerClass myStoppingCallback INFO scheduler: removing job asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 00:13:28 CEST)
2018-05-20 00:13:53,012 apscheduler.scheduler remove_job INFO Removed job asyncioJobGetHistoricalData_000000
2018-05-20 00:13:58,875 trading.containerClass myStoppingCallback INFO removing requests for recent historical bars
2018-05-20 00:13:59,852 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: ['MarketData_CASH_EUR_AUD_IDEALPRO', 'MarketData_CASH_EUR_CAD_IDEALPRO']
2018-05-20 00:14:03,538 ib_insync.Watchdog stop INFO Stopping
2018-05-20 00:14:03,538 ib_insync.ib disconnect INFO BN added disconnect in ib
2018-05-20 00:14:03,538 ib_insync.IBC terminateAsync INFO Terminating
2018-05-20 00:14:03,539 trading.containerClass myStoppedCallback INFO stopped watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-20 00:14:03,539 ib_insync.Watchdog scheduleRestart INFO Schedule restart in 2s
2018-05-20 00:14:11,975 trading.containerClass myDisconnectedCallback INFO disconnected callback
2018-05-20 00:14:14,694 trading.containerClass myStartingCallback INFO starting watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-20 00:14:14,695 ib_insync.Watchdog start INFO Starting
2018-05-20 00:14:14,695 ib_insync.IBC startAsync INFO Starting
2018-05-20 00:14:29,710 ib_insync.client connectAsync INFO Connecting to 127.0.0.1:4002 with clientId 24...
2018-05-20 00:14:29,712 ib_insync.client _onSocketConnected INFO Connected
2018-05-20 00:14:29,744 ib_insync.client _onSocketHasData INFO Logged on to server version 141
2018-05-20 00:14:29,749 ib_insync.client connectAsync INFO API connection ready
2018-05-20 00:14:29,804 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17709995, marketValue=218940.59, averageCost=1.2182257, unrealizedPNL=-7649.39, realizedPNL=0.0, account='DU946735')
2018-05-20 00:14:29,805 ib_insync.wrapper position INFO position: Position(account='DU946735', contract=Contract(secType='CASH', conId=12087792, symbol='EUR', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, avgCost=1.2182257)
2018-05-20 00:14:29,832 ib_insync.ib connectAsync INFO Synchronization complete
2018-05-20 00:14:29,833 trading.containerClass myConnectedCallback INFO connected callback
2018-05-20 00:14:29,833 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 00:14:29,836 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for contract: EUR.AUD
2018-05-20 00:14:29,837 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 00:14:31,454 ib_insync.wrapper error INFO Warning 2106, reqId -1: HMDS data farm connection is OK:cashhmds
2018-05-20 00:14:31,454 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2106, errorString: HMDS data farm connection is OK:cashhmds, localSymbol: None
2018-05-20 00:14:31,610 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for contract: EUR.CAD
2018-05-20 00:14:31,611 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CAD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 00:15:14,150 ib_insync.wrapper handleEvent ERROR Event connectedEvent(())
Traceback (most recent call last):
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/wrapper.py", line 143, in handleEvent
    event.emit(*args)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/event.py", line 76, in emit
    func(obj, *args, **kwargs)
  File "/home/bn/PycharmProjects/trading/trading/containerClass.py", line 357, in myConnectedCallback
    jobRootName = jobSettings.get('jobRootName',None)
  File "/home/bn/PycharmProjects/trading/trading/containerClass.py", line 357, in myConnectedCallback
    jobRootName = jobSettings.get('jobRootName',None)
  File "/snap/pycharm-professional/66/helpers/pydev/_pydevd_bundle/pydevd_frame.py", line 620, in trace_dispatch
    self.do_wait_suspend(thread, frame, event, arg)
  File "/snap/pycharm-professional/66/helpers/pydev/_pydevd_bundle/pydevd_frame.py", line 125, in do_wait_suspend
    self._args[0].do_wait_suspend(*args, **kwargs)
  File "/snap/pycharm-professional/66/helpers/pydev/pydevd.py", line 812, in do_wait_suspend
    time.sleep(0.01)
KeyboardInterrupt
2018-05-20 00:15:14,151 trading.containerClass myStartedCallback INFO started watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB connected to 127.0.0.1:4002 clientId=24>, port=4002, clientId='24', appStartupTime=15)
2018-05-20 00:15:14,522 ib_insync.client _onSocketDisconnected ERROR Peer closed connection
2018-05-20 00:15:14,522 trading.containerClass myStoppingCallback INFO stopping watchdog callback: Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-20 00:15:14,523 trading.containerClass myStoppingCallback INFO removing jobs from the scheduler
2018-05-20 00:15:14,523 trading.containerClass myStoppingCallback INFO removing requests for recent historical bars
2018-05-20 00:15:14,523 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: ['MarketData_CASH_EUR_AUD_IDEALPRO', 'MarketData_CASH_EUR_CAD_IDEALPRO']
2018-05-20 00:15:14,523 ib_insync.Watchdog stop INFO Stopping
2018-05-20 00:15:14,523 ib_insync.ib disconnect INFO BN added disconnect in ib
2018-05-20 00:15:14,523 ib_insync.IBC terminateAsync INFO Terminating
2018-05-20 00:15:14,523 trading.containerClass myStoppedCallback INFO stopped watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-20 00:15:14,523 ib_insync.Watchdog scheduleRestart INFO Schedule restart in 2s
2018-05-20 00:15:14,523 trading.containerClass myDisconnectedCallback INFO disconnected callback
2018-05-20 00:15:16,524 trading.containerClass myStartingCallback INFO starting watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-20 00:15:16,524 ib_insync.Watchdog start INFO Starting
2018-05-20 00:15:16,525 ib_insync.IBC startAsync INFO Starting
2018-05-20 00:15:31,539 ib_insync.client connectAsync INFO Connecting to 127.0.0.1:4002 with clientId 24...
2018-05-20 00:15:31,540 ib_insync.client connectAsync ERROR API connection failed: ConnectionRefusedError(111, "Connect call failed ('127.0.0.1', 4002)")
2018-05-20 00:15:31,540 ib_insync.client connectAsync ERROR Make sure API port on TWS/IBG is open
2018-05-20 00:15:31,540 trading.containerClass myStoppingCallback INFO stopping watchdog callback: Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-20 00:15:31,540 trading.containerClass myStoppingCallback INFO removing jobs from the scheduler
2018-05-20 00:15:31,540 trading.containerClass myStoppingCallback INFO removing requests for recent historical bars
2018-05-20 00:15:31,540 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: ['MarketData_CASH_EUR_AUD_IDEALPRO', 'MarketData_CASH_EUR_CAD_IDEALPRO']
2018-05-20 00:15:31,540 ib_insync.Watchdog stop INFO Stopping
2018-05-20 00:15:31,540 ib_insync.ib disconnect INFO BN added disconnect in ib
2018-05-20 00:15:31,540 ib_insync.IBC terminateAsync INFO Terminating
2018-05-20 00:15:31,540 trading.containerClass myStoppedCallback INFO stopped watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-20 00:15:31,540 ib_insync.Watchdog scheduleRestart INFO Schedule restart in 2s
2018-05-20 00:15:33,541 trading.containerClass myStartingCallback INFO starting watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-20 00:15:33,541 ib_insync.Watchdog start INFO Starting
2018-05-20 00:15:33,541 ib_insync.IBC startAsync INFO Starting
2018-05-20 01:20:56,617 ib_insync.Watchdog start INFO Starting
2018-05-20 01:20:56,618 quamash <module> INFO Using Qt Implementation: PyQt5
2018-05-20 01:20:56,642 ib_insync.IBC startAsync INFO Starting
2018-05-20 01:21:11,655 ib_insync.client connectAsync INFO Connecting to 127.0.0.1:4002 with clientId 24...
2018-05-20 01:21:11,657 ib_insync.client _onSocketConnected INFO Connected
2018-05-20 01:21:11,683 ib_insync.client _onSocketHasData INFO Logged on to server version 141
2018-05-20 01:21:11,688 ib_insync.client connectAsync INFO API connection ready
2018-05-20 01:21:11,752 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17709995, marketValue=218940.59, averageCost=1.2182257, unrealizedPNL=-7649.39, realizedPNL=0.0, account='DU946735')
2018-05-20 01:21:11,753 ib_insync.wrapper position INFO position: Position(account='DU946735', contract=Contract(secType='CASH', conId=12087792, symbol='EUR', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, avgCost=1.2182257)
2018-05-20 01:21:11,768 ib_insync.ib connectAsync INFO Synchronization complete
2018-05-20 01:21:11,874 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() started
2018-05-20 01:21:11,875 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop datetime
2018-05-20 01:21:11,875 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 01:21:11,875 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop close
2018-05-20 01:21:11,875 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() complete
2018-05-20 01:21:11,875 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() started
2018-05-20 01:21:11,875 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop datetime
2018-05-20 01:21:11,876 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 01:21:11,876 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop close
2018-05-20 01:21:11,876 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() complete
2018-05-20 01:21:11,876 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() started
2018-05-20 01:21:11,876 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop datetime
2018-05-20 01:21:11,876 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 01:21:11,877 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop close
2018-05-20 01:21:11,877 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() complete
2018-05-20 01:21:11,877 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() started
2018-05-20 01:21:11,877 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop datetime
2018-05-20 01:21:11,877 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 01:21:11,877 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop close
2018-05-20 01:21:11,878 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() complete
2018-05-20 01:21:11,878 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() started
2018-05-20 01:21:11,878 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop datetime
2018-05-20 01:21:11,878 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 01:21:11,878 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop close
2018-05-20 01:21:11,878 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() complete
2018-05-20 01:21:11,878 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() started
2018-05-20 01:21:11,879 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop datetime
2018-05-20 01:21:11,879 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 01:21:11,879 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop close
2018-05-20 01:21:11,879 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() complete
2018-05-20 01:21:11,879 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() started
2018-05-20 01:21:11,879 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop datetime
2018-05-20 01:21:11,880 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 01:21:11,880 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop close
2018-05-20 01:21:11,880 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() complete
2018-05-20 01:21:11,880 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() started
2018-05-20 01:21:11,880 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop datetime
2018-05-20 01:21:11,880 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 01:21:11,881 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop close
2018-05-20 01:21:11,881 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() complete
2018-05-20 01:21:11,881 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() started
2018-05-20 01:21:11,881 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop datetime
2018-05-20 01:21:11,881 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop diffToNextRowInMinutes
2018-05-20 01:21:11,881 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop close
2018-05-20 01:21:11,881 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() complete
2018-05-20 01:21:11,882 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() started
2018-05-20 01:21:11,882 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop datetime
2018-05-20 01:21:11,882 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop diffToNextRowInMinutes
2018-05-20 01:21:11,882 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop close
2018-05-20 01:21:11,882 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() complete
2018-05-20 01:21:11,882 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() started
2018-05-20 01:21:11,882 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop datetime
2018-05-20 01:21:11,883 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop diffToNextRowInMinutes
2018-05-20 01:21:11,883 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop close
2018-05-20 01:21:11,883 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() complete
2018-05-20 01:21:11,883 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() started
2018-05-20 01:21:11,883 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop datetime
2018-05-20 01:21:11,883 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop diffToNextRowInMinutes
2018-05-20 01:21:11,884 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop close
2018-05-20 01:21:11,884 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() complete
2018-05-20 01:21:11,884 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() started
2018-05-20 01:21:11,884 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop datetime
2018-05-20 01:21:11,884 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop diffToNextRowInMinutes
2018-05-20 01:21:11,884 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop close
2018-05-20 01:21:11,885 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() complete
2018-05-20 01:21:11,885 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() started
2018-05-20 01:21:11,885 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop datetime
2018-05-20 01:21:11,885 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop diffToNextRowInMinutes
2018-05-20 01:21:11,885 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop close
2018-05-20 01:21:11,885 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() complete
2018-05-20 01:21:11,886 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-20 01:21:11,887 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-20 01:21:11,887 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 01:21:14,803 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-20 01:21:14,803 sqlalchemy.engine.base.Engine _execute_context INFO PRAGMA table_info("MarketDataInfoTable")
2018-05-20 01:21:14,804 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 01:21:14,810 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-20 01:21:14,811 sqlalchemy.engine.base.Engine _execute_context INFO SELECT count(*) AS count_1 
FROM (SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable") AS anon_1
2018-05-20 01:21:14,811 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 01:21:14,815 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName", "MarketDataInfoTable".description, "MarketDataInfoTable"."conId", "MarketDataInfoTable".symbol, "MarketDataInfoTable".currency, "MarketDataInfoTable".exchange, "MarketDataInfoTable".category, "MarketDataInfoTable"."secType", "MarketDataInfoTable"."earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-20 01:21:14,815 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 01:21:14,821 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-20 01:21:14,821 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 01:21:15,366 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-20 01:21:15,393 apscheduler.scheduler start INFO Scheduler started
2018-05-20 01:21:15,393 root runProg INFO Now updating the settings for the request of recent historical bars
2018-05-20 01:21:15,393 root runProg INFO Now requesting initial recent historical bars
2018-05-20 01:21:15,394 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 01:21:15,396 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 01:21:16,967 ib_insync.wrapper error INFO Warning 2106, reqId -1: HMDS data farm connection is OK:cashhmds
2018-05-20 01:21:16,967 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2106, errorString: HMDS data farm connection is OK:cashhmds, localSymbol: None
2018-05-20 01:21:17,114 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CAD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 01:22:01,156 trading.containerClass addJobToScheduler INFO addJobToScheduler: jobName=asyncioJobGetHistoricalData_000000; args=([<IB connected to 127.0.0.1:4002 clientId=24>, <trading.database.tradingDB object at 0x7f8a92515e88>, [Contract(secType='CASH', conId=15016065, symbol='EUR', exchange='IDEALPRO', currency='AUD', localSymbol='EUR.AUD', tradingClass='EUR.AUD'), Contract(secType='CASH', conId=15016068, symbol='EUR', exchange='IDEALPRO', currency='CAD', localSymbol='EUR.CAD', tradingClass='EUR.CAD')], {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'earliestDateTimeUTCNaive': Timestamp('2018-05-14 23:21:17.320019'), 'timeOutTimeHistoricalBars': 1800}], None), kwargs={}
2018-05-20 01:22:01,254 apscheduler.scheduler _real_add_job INFO Added job "asyncioJobGetHistoricalData_000000" to job store "default"
2018-05-20 01:22:08,361 trading.containerClass addJobToScheduler INFO addJobToScheduler: jobName=schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000; args=([], None), kwargs={'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 01:22:08,362 apscheduler.scheduler _real_add_job INFO Added job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000" to job store "default"
2018-05-20 01:22:12,640 trading.containerClass addJobToScheduler INFO addJobToScheduler: jobName=schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001; args=([], None), kwargs={'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 01:22:12,641 apscheduler.scheduler _real_add_job INFO Added job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001" to job store "default"
2018-05-20 01:22:12,642 trading.containerClass myTimeoutCallback INFO timeout callback 55.327968
2018-05-20 01:22:12,642 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 01:22:14 CEST)" (scheduled at 2018-05-20 01:22:07+02:00)
2018-05-20 01:22:12,651 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, AUD; is going to be performed because earliestDateTime is given by IB: 2005-09-28 03:30:00
2018-05-20 01:22:12,652 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-14 23:21:17.320019
2018-05-20 01:22:12,652 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-15 23:21:17.320019
2018-05-20 01:22:12,652 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-14 23:21:17.320019; endDT: 2018-05-15 23:10:17.320019; durationString: 85740 S
2018-05-20 01:22:13,598 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1430; elapsed time: 0:00:00.160799
2018-05-20 01:22:13,598 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1430; elapsed time: 0:00:00.415726
2018-05-20 01:22:13,708 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-14 23:21:17.320019; endDT: 2018-05-15 23:10:17.320019; durationString: 85740 S; elapsedTime: 0:00:01.056102; rows: 1430; rowsTotal: 4595359
2018-05-20 01:22:13,720 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-15 23:10:17.320019
2018-05-20 01:22:13,720 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-16 22:59:17.320019
2018-05-20 01:22:13,720 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-15 23:10:17.320019; endDT: 2018-05-16 23:08:17.320019; durationString: 86280 S
2018-05-20 01:22:14,000 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 01:22:14 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 01:22:14,549 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1439; elapsed time: 0:00:00.153883
2018-05-20 01:22:14,549 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1439; elapsed time: 0:00:00.390652
2018-05-20 01:22:14,881 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-15 23:10:17.320019; endDT: 2018-05-16 23:08:17.320019; durationString: 86280 S; elapsedTime: 0:00:01.160710; rows: 1439; rowsTotal: 4595359
2018-05-20 01:22:14,892 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-16 23:08:17.320019
2018-05-20 01:22:14,893 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-17 23:06:17.320019
2018-05-20 01:22:14,893 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-16 23:08:17.320019; endDT: 2018-05-17 22:48:17.320019; durationString: 85200 S
2018-05-20 01:22:15,868 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1421; elapsed time: 0:00:00.277927
2018-05-20 01:22:15,868 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1421; elapsed time: 0:00:00.523686
2018-05-20 01:22:16,212 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-16 23:08:17.320019; endDT: 2018-05-17 22:48:17.320019; durationString: 85200 S; elapsedTime: 0:00:01.318808; rows: 1421; rowsTotal: 4595359
2018-05-20 01:22:16,223 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-17 22:48:17.320019
2018-05-20 01:22:16,223 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-18 22:28:17.320019
2018-05-20 01:22:16,223 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-17 22:48:17.320019; endDT: 2018-05-18 22:22:17.320019; durationString: 84840 S
2018-05-20 01:22:17,042 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1414; elapsed time: 0:00:00.125119
2018-05-20 01:22:17,042 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1414; elapsed time: 0:00:00.385402
2018-05-20 01:22:17,149 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-17 22:48:17.320019; endDT: 2018-05-18 22:22:17.320019; durationString: 84840 S; elapsedTime: 0:00:00.925710; rows: 1414; rowsTotal: 4595359
2018-05-20 01:22:17,160 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-18 22:22:17.320019
2018-05-20 01:22:17,160 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-19 21:56:17.320019
2018-05-20 01:22:17,161 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-18 22:22:17.320019; endDT: 2018-05-19 22:13:17.320019; durationString: 85860 S
2018-05-20 01:22:17,912 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1431; elapsed time: 0:00:00.119843
2018-05-20 01:22:17,912 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1431; elapsed time: 0:00:00.339276
2018-05-20 01:22:18,027 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-18 22:22:17.320019; endDT: 2018-05-19 22:13:17.320019; durationString: 85860 S; elapsedTime: 0:00:00.866132; rows: 1431; rowsTotal: 4595359
2018-05-20 01:22:18,038 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-19 22:13:17.320019
2018-05-20 01:22:18,038 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-20 22:04:17.320019
2018-05-20 01:22:18,038 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-19 22:13:17.320019; endDT: 2018-05-20 22:05:17.320019; durationString: 85920 S
2018-05-20 01:22:18,791 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1382; elapsed time: 0:00:00.117162
2018-05-20 01:22:18,791 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1382; elapsed time: 0:00:00.354271
2018-05-20 01:22:18,903 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-19 22:13:17.320019; endDT: 2018-05-20 22:05:17.320019; durationString: 85920 S; elapsedTime: 0:00:00.864062; rows: 1382; rowsTotal: 4595359
2018-05-20 01:22:18,914 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: EUR, AUD; elapsedTime: 0:00:06.267115
2018-05-20 01:22:18,915 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, CAD; is going to be performed because earliestDateTime is given by IB: 2005-03-09 04:30:00
2018-05-20 01:22:18,916 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-14 23:21:17.320019
2018-05-20 01:22:18,916 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-15 23:21:17.320019
2018-05-20 01:22:18,917 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-14 23:21:17.320019; endDT: 2018-05-15 22:58:17.320019; durationString: 85020 S
2018-05-20 01:22:19,678 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1418; elapsed time: 0:00:00.124530
2018-05-20 01:22:19,678 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1418; elapsed time: 0:00:00.358067
2018-05-20 01:22:19,768 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-14 23:21:17.320019; endDT: 2018-05-15 22:58:17.320019; durationString: 85020 S; elapsedTime: 0:00:00.851873; rows: 1418; rowsTotal: 2099282
2018-05-20 01:22:19,779 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-15 22:58:17.320019
2018-05-20 01:22:19,780 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-16 22:35:17.320019
2018-05-20 01:22:19,780 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-15 22:58:17.320019; endDT: 2018-05-16 22:44:17.320019; durationString: 85560 S
2018-05-20 01:22:20,725 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1427; elapsed time: 0:00:00.207751
2018-05-20 01:22:20,725 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1427; elapsed time: 0:00:00.506423
2018-05-20 01:22:20,810 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-15 22:58:17.320019; endDT: 2018-05-16 22:44:17.320019; durationString: 85560 S; elapsedTime: 0:00:01.030283; rows: 1427; rowsTotal: 2099282
2018-05-20 01:22:20,821 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-16 22:44:17.320019
2018-05-20 01:22:20,821 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-17 22:30:17.320019
2018-05-20 01:22:20,822 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-16 22:44:17.320019; endDT: 2018-05-17 22:24:17.320019; durationString: 85200 S
2018-05-20 01:22:21,001 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 01:22:21 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 01:22:21,867 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1421; elapsed time: 0:00:00.362921
2018-05-20 01:22:21,867 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1421; elapsed time: 0:00:00.626165
2018-05-20 01:22:21,983 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-16 22:44:17.320019; endDT: 2018-05-17 22:24:17.320019; durationString: 85200 S; elapsedTime: 0:00:01.160903; rows: 1421; rowsTotal: 2099282
2018-05-20 01:22:21,994 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-17 22:24:17.320019
2018-05-20 01:22:21,994 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-18 22:04:17.320019
2018-05-20 01:22:21,994 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-17 22:24:17.320019; endDT: 2018-05-18 22:24:17.320019; durationString: 86400 S
2018-05-20 01:22:22,720 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1440; elapsed time: 0:00:00.097058
2018-05-20 01:22:22,721 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1440; elapsed time: 0:00:00.325933
2018-05-20 01:22:22,797 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-17 22:24:17.320019; endDT: 2018-05-18 22:24:17.320019; durationString: 86400 S; elapsedTime: 0:00:00.803218; rows: 1440; rowsTotal: 2099282
2018-05-20 01:22:22,808 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-18 22:24:17.320019
2018-05-20 01:22:22,809 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-19 22:24:17.320019
2018-05-20 01:22:22,809 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-18 22:24:17.320019; endDT: 2018-05-19 22:12:17.320019; durationString: 85680 S
2018-05-20 01:22:23,550 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1428; elapsed time: 0:00:00.097885
2018-05-20 01:22:23,551 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1428; elapsed time: 0:00:00.320896
2018-05-20 01:22:23,628 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-18 22:24:17.320019; endDT: 2018-05-19 22:12:17.320019; durationString: 85680 S; elapsedTime: 0:00:00.819462; rows: 1428; rowsTotal: 2099282
2018-05-20 01:22:23,640 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-19 22:12:17.320019
2018-05-20 01:22:23,640 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-20 22:00:17.320019
2018-05-20 01:22:23,640 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-19 22:12:17.320019; endDT: 2018-05-20 22:01:17.320019; durationString: 85740 S
2018-05-20 01:22:24,792 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1383; elapsed time: 0:00:00.092937
2018-05-20 01:22:24,792 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1383; elapsed time: 0:00:00.344197
2018-05-20 01:22:24,874 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-19 22:12:17.320019; endDT: 2018-05-20 22:01:17.320019; durationString: 85740 S; elapsedTime: 0:00:01.233507; rows: 1383; rowsTotal: 2099282
2018-05-20 01:22:24,885 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: EUR, CAD; elapsedTime: 0:00:05.971157
2018-05-20 01:22:24,886 apscheduler.executors.default run_coroutine_job INFO Job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 01:22:28 CEST)" executed successfully
2018-05-20 01:22:24,887 trading.containerClass mySoftTimeoutCallback INFO soft time out watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB connected to 127.0.0.1:4002 clientId=24>, port=4002, clientId='24', appStartupTime=15)
2018-05-20 01:22:28,002 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 01:22:35 CEST)" (scheduled at 2018-05-20 01:22:28+02:00)
2018-05-20 01:22:28,033 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, AUD; is going to be performed because earliestDateTime is given by IB: 2005-09-28 03:30:00
2018-05-20 01:22:28,034 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-14 23:21:17.320019
2018-05-20 01:22:28,035 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-15 23:21:17.320019
2018-05-20 01:22:28,035 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-14 23:21:17.320019; endDT: 2018-05-15 23:13:17.320019; durationString: 85920 S
2018-05-20 01:22:28,885 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1433; elapsed time: 0:00:00.143465
2018-05-20 01:22:28,885 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1433; elapsed time: 0:00:00.404173
2018-05-20 01:22:28,996 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-14 23:21:17.320019; endDT: 2018-05-15 23:13:17.320019; durationString: 85920 S; elapsedTime: 0:00:00.961229; rows: 1433; rowsTotal: 4595359
2018-05-20 01:22:29,007 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-15 23:13:17.320019
2018-05-20 01:22:29,007 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-16 23:05:17.320019
2018-05-20 01:22:29,008 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-15 23:13:17.320019; endDT: 2018-05-16 22:49:17.320019; durationString: 84960 S
2018-05-20 01:22:30,002 apscheduler.executors.default run_coroutine_job INFO Running job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='30'], next run at: 2018-05-20 01:23:30 CEST)" (scheduled at 2018-05-20 01:22:30+02:00)
2018-05-20 01:22:30,002 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO cancelling request for recent historical bars
2018-05-20 01:22:30,002 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: ['MarketData_CASH_EUR_AUD_IDEALPRO', 'MarketData_CASH_EUR_CAD_IDEALPRO']
2018-05-20 01:22:30,002 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO re-initializing the ordered dict of bars
2018-05-20 01:22:30,002 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO renewing request for recent historical bars with new settings
2018-05-20 01:22:30,002 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 01:22:30,004 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 01:22:30,015 ib_insync.wrapper error ERROR Error 366, reqId 31: No historical data query found for ticker id:31
2018-05-20 01:22:30,015 trading.containerClass myErrorCallback INFO reqId: 31, errorCode: 366, errorString: No historical data query found for ticker id:31, localSymbol: None
2018-05-20 01:22:30,015 ib_insync.wrapper error ERROR Error 366, reqId 32: No historical data query found for ticker id:32
2018-05-20 01:22:30,015 trading.containerClass myErrorCallback INFO reqId: 32, errorCode: 366, errorString: No historical data query found for ticker id:32, localSymbol: None
2018-05-20 01:22:30,218 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CAD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 01:22:30,470 apscheduler.executors.default run_coroutine_job INFO Job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='30'], next run at: 2018-05-20 01:23:30 CEST)" executed successfully
2018-05-20 01:22:31,123 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1417; elapsed time: 0:00:00.177270
2018-05-20 01:22:31,123 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1417; elapsed time: 0:00:00.652660
2018-05-20 01:22:31,459 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-15 23:13:17.320019; endDT: 2018-05-16 22:49:17.320019; durationString: 84960 S; elapsedTime: 0:00:02.451074; rows: 1417; rowsTotal: 4595359
2018-05-20 01:22:31,470 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-16 22:49:17.320019
2018-05-20 01:22:31,470 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-17 22:25:17.320019
2018-05-20 01:22:31,470 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-16 22:49:17.320019; endDT: 2018-05-17 22:33:17.320019; durationString: 85440 S
2018-05-20 01:22:32,275 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1425; elapsed time: 0:00:00.146165
2018-05-20 01:22:32,276 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1425; elapsed time: 0:00:00.400729
2018-05-20 01:22:32,376 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-16 22:49:17.320019; endDT: 2018-05-17 22:33:17.320019; durationString: 85440 S; elapsedTime: 0:00:00.905905; rows: 1425; rowsTotal: 4595359
2018-05-20 01:22:32,387 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-17 22:33:17.320019
2018-05-20 01:22:32,388 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-18 22:17:17.320019
2018-05-20 01:22:32,388 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-17 22:33:17.320019; endDT: 2018-05-18 22:16:17.320019; durationString: 85380 S
2018-05-20 01:22:33,141 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1423; elapsed time: 0:00:00.117863
2018-05-20 01:22:33,141 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1423; elapsed time: 0:00:00.350014
2018-05-20 01:22:33,247 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-17 22:33:17.320019; endDT: 2018-05-18 22:16:17.320019; durationString: 85380 S; elapsedTime: 0:00:00.859550; rows: 1423; rowsTotal: 4595359
2018-05-20 01:22:33,259 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-18 22:16:17.320019
2018-05-20 01:22:33,259 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-19 21:59:17.320019
2018-05-20 01:22:33,259 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-18 22:16:17.320019; endDT: 2018-05-19 22:14:17.320019; durationString: 86280 S
2018-05-20 01:22:34,076 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1438; elapsed time: 0:00:00.169368
2018-05-20 01:22:34,076 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1438; elapsed time: 0:00:00.395678
2018-05-20 01:22:34,175 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-18 22:16:17.320019; endDT: 2018-05-19 22:14:17.320019; durationString: 86280 S; elapsedTime: 0:00:00.916416; rows: 1438; rowsTotal: 4595359
2018-05-20 01:22:34,187 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-19 22:14:17.320019
2018-05-20 01:22:34,187 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-20 22:12:17.320019
2018-05-20 01:22:34,187 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-19 22:14:17.320019; endDT: 2018-05-20 21:54:17.320019; durationString: 85200 S
2018-05-20 01:22:35,002 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 01:22:35 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 01:22:36,809 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1381; elapsed time: 0:00:00.114423
2018-05-20 01:22:36,809 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1381; elapsed time: 0:00:00.349665
2018-05-20 01:22:36,912 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-19 22:14:17.320019; endDT: 2018-05-20 21:54:17.320019; durationString: 85200 S; elapsedTime: 0:00:02.725220; rows: 1381; rowsTotal: 4595359
2018-05-20 01:22:36,925 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: EUR, AUD; elapsedTime: 0:00:08.892591
2018-05-20 01:22:36,927 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, CAD; is going to be performed because earliestDateTime is given by IB: 2005-03-09 04:30:00
2018-05-20 01:22:36,929 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-18 23:22:36.928737
2018-05-20 01:22:36,929 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-19 23:22:36.928737
2018-05-20 01:22:36,930 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-18 23:22:36.928737; endDT: 2018-05-19 23:07:36.928737; durationString: 85500 S
2018-05-20 01:22:37,654 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1425; elapsed time: 0:00:00.097569
2018-05-20 01:22:37,654 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1425; elapsed time: 0:00:00.320798
2018-05-20 01:22:37,729 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-18 23:22:36.928737; endDT: 2018-05-19 23:07:36.928737; durationString: 85500 S; elapsedTime: 0:00:00.798917; rows: 1425; rowsTotal: 2099282
2018-05-20 01:22:37,740 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-19 23:07:36.928737
2018-05-20 01:22:37,740 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-20 22:52:36.928737
2018-05-20 01:22:37,740 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-19 23:07:36.928737; endDT: 2018-05-20 22:43:36.928737; durationString: 84960 S
2018-05-20 01:22:42,002 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 01:22:42 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 01:22:42,746 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1328; elapsed time: 0:00:00.090588
2018-05-20 01:22:42,746 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1328; elapsed time: 0:00:00.302039
2018-05-20 01:22:42,822 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-19 23:07:36.928737; endDT: 2018-05-20 22:43:36.928737; durationString: 84960 S; elapsedTime: 0:00:05.081989; rows: 1328; rowsTotal: 2099282
2018-05-20 01:22:42,833 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: EUR, CAD; elapsedTime: 0:00:05.908642
2018-05-20 01:22:42,834 apscheduler.executors.default run_coroutine_job INFO Job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 01:22:49 CEST)" executed successfully
2018-05-20 01:22:49,006 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 01:22:56 CEST)" (scheduled at 2018-05-20 01:22:49+02:00)
2018-05-20 01:22:49,268 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, AUD; is going to be performed because earliestDateTime is given by IB: 2005-09-28 03:30:00
2018-05-20 01:22:49,269 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-14 23:21:17.320019
2018-05-20 01:22:49,270 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-15 23:21:17.320019
2018-05-20 01:22:49,270 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-14 23:21:17.320019; endDT: 2018-05-15 22:57:17.320019; durationString: 84960 S
2018-05-20 01:22:50,244 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1417; elapsed time: 0:00:00.248975
2018-05-20 01:22:50,244 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1417; elapsed time: 0:00:00.539627
2018-05-20 01:22:50,386 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-14 23:21:17.320019; endDT: 2018-05-15 22:57:17.320019; durationString: 84960 S; elapsedTime: 0:00:01.116287; rows: 1417; rowsTotal: 4595359
2018-05-20 01:22:50,397 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-15 22:57:17.320019
2018-05-20 01:22:50,398 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-16 22:33:17.320019
2018-05-20 01:22:50,398 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-15 22:57:17.320019; endDT: 2018-05-16 22:37:17.320019; durationString: 85200 S
2018-05-20 01:22:56,006 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 01:22:56 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 01:23:00,003 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 01:23:00 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 01:23:00,005 apscheduler.executors.default run_coroutine_job INFO Running job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='0'], next run at: 2018-05-20 01:24:00 CEST)" (scheduled at 2018-05-20 01:23:00+02:00)
2018-05-20 01:23:00,005 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO cancelling request for recent historical bars
2018-05-20 01:23:00,005 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: ['MarketData_CASH_EUR_AUD_IDEALPRO', 'MarketData_CASH_EUR_CAD_IDEALPRO']
2018-05-20 01:23:00,005 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO re-initializing the ordered dict of bars
2018-05-20 01:23:00,006 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO renewing request for recent historical bars with new settings
2018-05-20 01:23:00,006 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 01:23:00,008 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 01:23:00,009 ib_insync.wrapper error ERROR Error 366, reqId 48: No historical data query found for ticker id:48
2018-05-20 01:23:00,009 trading.containerClass myErrorCallback INFO reqId: 48, errorCode: 366, errorString: No historical data query found for ticker id:48, localSymbol: None
2018-05-20 01:23:00,009 ib_insync.wrapper error ERROR Error 366, reqId 49: No historical data query found for ticker id:49
2018-05-20 01:23:00,010 trading.containerClass myErrorCallback INFO reqId: 49, errorCode: 366, errorString: No historical data query found for ticker id:49, localSymbol: None
2018-05-20 01:23:00,742 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CAD. settings: {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 01:23:01,141 apscheduler.executors.default run_coroutine_job INFO Job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='0'], next run at: 2018-05-20 01:24:00 CEST)" executed successfully
2018-05-20 01:23:01,496 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1421; elapsed time: 0:00:00.139754
2018-05-20 01:23:01,496 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1421; elapsed time: 0:00:00.354389
2018-05-20 01:23:01,594 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-15 22:57:17.320019; endDT: 2018-05-16 22:37:17.320019; durationString: 85200 S; elapsedTime: 0:00:11.195771; rows: 1421; rowsTotal: 4595359
2018-05-20 01:23:01,605 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-16 22:37:17.320019
2018-05-20 01:23:01,605 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-17 22:17:17.320019
2018-05-20 01:23:01,605 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-16 22:37:17.320019; endDT: 2018-05-17 22:12:17.320019; durationString: 84900 S
2018-05-20 01:23:06,177 ib_insync.client _onSocketDisconnected ERROR Peer closed connection
2018-05-20 01:23:40,132 trading.containerClass myStoppingCallback INFO stopping watchdog callback: Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-20 01:23:42,610 trading.containerClass myStoppingCallback INFO removing jobs from the scheduler
2018-05-20 01:23:46,041 trading.containerClass myStoppingCallback INFO scheduler: removing job asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 01:23:07 CEST)
2018-05-20 01:23:46,042 apscheduler.scheduler remove_job INFO Removed job asyncioJobGetHistoricalData_000000
2018-05-20 01:23:46,042 trading.containerClass myStoppingCallback INFO scheduler: removing job schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='30'], next run at: 2018-05-20 01:23:30 CEST)
2018-05-20 01:23:46,042 apscheduler.scheduler remove_job INFO Removed job schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001
2018-05-20 01:23:46,042 trading.containerClass myStoppingCallback INFO scheduler: removing job schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='0'], next run at: 2018-05-20 01:24:00 CEST)
2018-05-20 01:23:46,042 apscheduler.scheduler remove_job INFO Removed job schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000
2018-05-20 01:23:46,042 trading.containerClass myStoppingCallback INFO removing requests for recent historical bars
2018-05-20 01:23:46,042 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: ['MarketData_CASH_EUR_AUD_IDEALPRO', 'MarketData_CASH_EUR_CAD_IDEALPRO']
2018-05-20 01:23:46,042 ib_insync.Watchdog stop INFO Stopping
2018-05-20 01:23:46,043 ib_insync.ib disconnect INFO BN added disconnect in ib
2018-05-20 01:23:46,043 ib_insync.IBC terminateAsync INFO Terminating
2018-05-20 01:23:46,044 trading.containerClass myStoppedCallback INFO stopped watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-20 01:23:46,044 ib_insync.Watchdog scheduleRestart INFO Schedule restart in 2s
2018-05-20 01:23:51,411 trading.containerClass myDisconnectedCallback INFO disconnected callback
2018-05-20 01:23:51,412 trading.containerClass myStartingCallback INFO starting watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-20 01:23:51,412 ib_insync.Watchdog start INFO Starting
2018-05-20 01:23:51,412 ib_insync.IBC startAsync INFO Starting
2018-05-20 01:24:06,428 ib_insync.client connectAsync INFO Connecting to 127.0.0.1:4002 with clientId 24...
2018-05-20 01:24:06,429 ib_insync.client _onSocketConnected INFO Connected
2018-05-20 01:24:06,456 ib_insync.client _onSocketHasData INFO Logged on to server version 141
2018-05-20 01:24:06,503 ib_insync.client connectAsync INFO API connection ready
2018-05-20 01:24:06,558 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17709995, marketValue=218940.59, averageCost=1.2182257, unrealizedPNL=-7649.39, realizedPNL=0.0, account='DU946735')
2018-05-20 01:24:06,559 ib_insync.wrapper position INFO position: Position(account='DU946735', contract=Contract(secType='CASH', conId=12087792, symbol='EUR', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, avgCost=1.2182257)
2018-05-20 01:24:06,574 ib_insync.ib connectAsync INFO Synchronization complete
2018-05-20 01:24:06,574 trading.containerClass myConnectedCallback INFO connected callback
2018-05-20 01:24:06,574 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 01:24:06,577 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 01:24:08,089 ib_insync.wrapper error INFO Warning 2106, reqId -1: HMDS data farm connection is OK:cashhmds
2018-05-20 01:24:08,089 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2106, errorString: HMDS data farm connection is OK:cashhmds, localSymbol: None
2018-05-20 01:24:08,531 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CAD. settings: {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 01:24:18,767 trading.containerClass myConnectedCallback INFO 0: about to add job asyncioJobGetHistoricalData to the scheduler: <apscheduler.schedulers.asyncio.AsyncIOScheduler object at 0x7f8a8e1a6da0>
2018-05-20 02:23:59,437 ib_insync.Watchdog start INFO Starting
2018-05-20 02:23:59,439 quamash <module> INFO Using Qt Implementation: PyQt5
2018-05-20 02:23:59,463 ib_insync.IBC startAsync INFO Starting
2018-05-20 02:24:14,478 ib_insync.client connectAsync INFO Connecting to 127.0.0.1:4002 with clientId 24...
2018-05-20 02:24:14,485 ib_insync.client _onSocketConnected INFO Connected
2018-05-20 02:24:14,539 ib_insync.client _onSocketHasData INFO Logged on to server version 141
2018-05-20 02:24:14,591 ib_insync.client connectAsync INFO API connection ready
2018-05-20 02:24:14,695 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17709995, marketValue=218940.59, averageCost=1.2182257, unrealizedPNL=-7649.39, realizedPNL=0.0, account='DU946735')
2018-05-20 02:24:14,699 ib_insync.wrapper position INFO position: Position(account='DU946735', contract=Contract(secType='CASH', conId=12087792, symbol='EUR', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, avgCost=1.2182257)
2018-05-20 02:24:14,778 ib_insync.ib connectAsync INFO Synchronization complete
2018-05-20 02:24:14,857 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() started
2018-05-20 02:24:14,858 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop datetime
2018-05-20 02:24:14,858 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 02:24:14,858 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop close
2018-05-20 02:24:14,858 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() complete
2018-05-20 02:24:14,859 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() started
2018-05-20 02:24:14,859 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop datetime
2018-05-20 02:24:14,859 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 02:24:14,859 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop close
2018-05-20 02:24:14,859 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() complete
2018-05-20 02:24:14,859 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() started
2018-05-20 02:24:14,859 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop datetime
2018-05-20 02:24:14,860 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 02:24:14,860 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop close
2018-05-20 02:24:14,860 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() complete
2018-05-20 02:24:14,860 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() started
2018-05-20 02:24:14,860 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop datetime
2018-05-20 02:24:14,860 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 02:24:14,861 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop close
2018-05-20 02:24:14,861 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() complete
2018-05-20 02:24:14,861 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() started
2018-05-20 02:24:14,861 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop datetime
2018-05-20 02:24:14,861 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 02:24:14,861 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop close
2018-05-20 02:24:14,861 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() complete
2018-05-20 02:24:14,862 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() started
2018-05-20 02:24:14,862 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop datetime
2018-05-20 02:24:14,862 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 02:24:14,862 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop close
2018-05-20 02:24:14,862 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() complete
2018-05-20 02:24:14,862 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() started
2018-05-20 02:24:14,862 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop datetime
2018-05-20 02:24:14,863 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 02:24:14,863 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop close
2018-05-20 02:24:14,863 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() complete
2018-05-20 02:24:14,863 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() started
2018-05-20 02:24:14,863 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop datetime
2018-05-20 02:24:14,864 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 02:24:14,864 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop close
2018-05-20 02:24:14,864 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() complete
2018-05-20 02:24:14,864 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() started
2018-05-20 02:24:14,864 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop datetime
2018-05-20 02:24:14,864 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop diffToNextRowInMinutes
2018-05-20 02:24:14,865 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop close
2018-05-20 02:24:14,865 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() complete
2018-05-20 02:24:14,865 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() started
2018-05-20 02:24:14,865 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop datetime
2018-05-20 02:24:14,865 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop diffToNextRowInMinutes
2018-05-20 02:24:14,865 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop close
2018-05-20 02:24:14,865 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() complete
2018-05-20 02:24:14,866 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() started
2018-05-20 02:24:14,866 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop datetime
2018-05-20 02:24:14,866 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop diffToNextRowInMinutes
2018-05-20 02:24:14,866 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop close
2018-05-20 02:24:14,866 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() complete
2018-05-20 02:24:14,866 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() started
2018-05-20 02:24:14,866 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop datetime
2018-05-20 02:24:14,867 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop diffToNextRowInMinutes
2018-05-20 02:24:14,867 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop close
2018-05-20 02:24:14,867 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() complete
2018-05-20 02:24:14,867 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() started
2018-05-20 02:24:14,867 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop datetime
2018-05-20 02:24:14,867 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop diffToNextRowInMinutes
2018-05-20 02:24:14,868 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop close
2018-05-20 02:24:14,868 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() complete
2018-05-20 02:24:14,868 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() started
2018-05-20 02:24:14,868 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop datetime
2018-05-20 02:24:14,868 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop diffToNextRowInMinutes
2018-05-20 02:24:14,868 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop close
2018-05-20 02:24:14,869 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() complete
2018-05-20 02:24:14,869 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-20 02:24:14,870 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-20 02:24:14,870 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 02:24:17,930 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-20 02:24:17,931 sqlalchemy.engine.base.Engine _execute_context INFO PRAGMA table_info("MarketDataInfoTable")
2018-05-20 02:24:17,931 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 02:24:17,936 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-20 02:24:17,937 sqlalchemy.engine.base.Engine _execute_context INFO SELECT count(*) AS count_1 
FROM (SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable") AS anon_1
2018-05-20 02:24:17,937 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 02:24:17,940 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName", "MarketDataInfoTable".description, "MarketDataInfoTable"."conId", "MarketDataInfoTable".symbol, "MarketDataInfoTable".currency, "MarketDataInfoTable".exchange, "MarketDataInfoTable".category, "MarketDataInfoTable"."secType", "MarketDataInfoTable"."earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-20 02:24:17,940 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 02:24:17,944 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-20 02:24:17,944 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 02:24:18,569 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-20 02:24:18,594 apscheduler.scheduler start INFO Scheduler started
2018-05-20 02:24:18,595 root runProg INFO Now updating the settings for the request of recent historical bars
2018-05-20 02:24:18,595 root runProg INFO Now requesting initial recent historical bars
2018-05-20 02:24:18,595 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:24:18,596 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:24:20,127 ib_insync.wrapper error INFO Warning 2106, reqId -1: HMDS data farm connection is OK:cashhmds
2018-05-20 02:24:20,127 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2106, errorString: HMDS data farm connection is OK:cashhmds, localSymbol: None
2018-05-20 02:24:20,276 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CAD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:24:20,495 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CHF. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:24:41,813 trading.containerClass addJobToScheduler INFO addJobToScheduler: jobName=asyncioJobGetHistoricalData_000000; args=([<IB connected to 127.0.0.1:4002 clientId=24>, <trading.database.tradingDB object at 0x7f8a92515e88>, [Contract(secType='CASH', conId=15016065, symbol='EUR', exchange='IDEALPRO', currency='AUD', localSymbol='EUR.AUD', tradingClass='EUR.AUD'), Contract(secType='CASH', conId=15016068, symbol='EUR', exchange='IDEALPRO', currency='CAD', localSymbol='EUR.CAD', tradingClass='EUR.CAD')], {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'earliestDateTimeUTCNaive': Timestamp('2018-05-14 23:21:17.320019'), 'timeOutTimeHistoricalBars': 1800}], None), kwargs={}
2018-05-20 02:24:41,814 apscheduler.scheduler _real_add_job INFO Added job "asyncioJobGetHistoricalData_000000" to job store "default"
2018-05-20 02:24:41,814 trading.containerClass myConnectedCallback INFO added job asyncioJobGetHistoricalData_000000 to the scheduler: <apscheduler.schedulers.asyncio.AsyncIOScheduler object at 0x7f8a8e1a6da0>
2018-05-20 02:24:41,814 trading.containerClass myConnectedCallback INFO 1: about to add job schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther to the scheduler: <apscheduler.schedulers.asyncio.AsyncIOScheduler object at 0x7f8a8e1a6da0>
2018-05-20 02:24:41,814 trading.containerClass addJobToScheduler INFO addJobToScheduler: jobName=schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000; args=([], None), kwargs={'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 02:24:41,815 apscheduler.scheduler _real_add_job INFO Added job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000" to job store "default"
2018-05-20 02:24:41,815 trading.containerClass myConnectedCallback INFO added job schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 to the scheduler: <apscheduler.schedulers.asyncio.AsyncIOScheduler object at 0x7f8a8e1a6da0>
2018-05-20 02:24:41,816 trading.containerClass myConnectedCallback INFO 2: about to add job schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther to the scheduler: <apscheduler.schedulers.asyncio.AsyncIOScheduler object at 0x7f8a8e1a6da0>
2018-05-20 02:24:41,816 trading.containerClass addJobToScheduler INFO addJobToScheduler: jobName=schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001; args=([], None), kwargs={'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:24:41,816 apscheduler.scheduler _real_add_job INFO Added job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001" to job store "default"
2018-05-20 02:24:41,817 trading.containerClass myConnectedCallback INFO added job schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 to the scheduler: <apscheduler.schedulers.asyncio.AsyncIOScheduler object at 0x7f8a8e1a6da0>
2018-05-20 02:24:41,817 trading.containerClass myStartedCallback INFO started watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB connected to 127.0.0.1:4002 clientId=24>, port=4002, clientId='24', appStartupTime=15)
2018-05-20 02:24:41,820 ib_insync.wrapper error INFO Warning 2107, reqId -1: HMDS data farm connection is inactive but should be available upon demand.cashhmds
2018-05-20 02:24:41,820 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2107, errorString: HMDS data farm connection is inactive but should be available upon demand.cashhmds, localSymbol: None
2018-05-20 02:24:41,822 trading.marketDataIB getHistoricalDataBars WARNING Timeout while requesting historical bars for contract Contract(secType='CASH', conId=15016065, symbol='EUR', exchange='IDEALPRO', currency='AUD', localSymbol='EUR.AUD', tradingClass='EUR.AUD')
2018-05-20 02:24:41,822 trading.marketDataIB asyncioJobGetHistoricalData WARNING Timeout while requesting historical bars for contract Contract(secType='CASH', conId=15016065, symbol='EUR', exchange='IDEALPRO', currency='AUD', localSymbol='EUR.AUD', tradingClass='EUR.AUD')
2018-05-20 02:24:41,932 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-16 22:37:17.320019; endDT: 2018-05-17 22:12:17.320019; durationString: 84900 S; elapsedTime: 1:01:40.326983; rows: 0; rowsTotal: 4595359
2018-05-20 02:24:41,943 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-17 22:12:17.320019
2018-05-20 02:24:41,944 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-18 21:47:17.320019
2018-05-20 02:24:41,944 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-17 22:12:17.320019; endDT: 2018-05-18 22:03:17.320019; durationString: 85860 S
2018-05-20 02:24:42,002 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:24:42 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:24:49,011 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:24:49 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:24:56,007 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:24:56 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:25:00,003 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:25:00 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:25:00,004 apscheduler.executors.default run_coroutine_job INFO Running job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='0'], next run at: 2018-05-20 02:26:00 CEST)" (scheduled at 2018-05-20 02:25:00+02:00)
2018-05-20 02:25:00,004 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO cancelling request for recent historical bars
2018-05-20 02:25:00,004 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: ['MarketData_CASH_EUR_AUD_IDEALPRO', 'MarketData_CASH_EUR_CAD_IDEALPRO']
2018-05-20 02:25:00,005 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO re-initializing the ordered dict of bars
2018-05-20 02:25:00,005 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO renewing request for recent historical bars with new settings
2018-05-20 02:25:00,005 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 02:25:00,006 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 02:25:01,819 trading.containerClass myTimeoutCallback INFO timeout callback 20.00028
2018-05-20 02:25:01,820 trading.containerClass mySoftTimeoutCallback INFO soft time out watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB connected to 127.0.0.1:4002 clientId=24>, port=4002, clientId='24', appStartupTime=15)
2018-05-20 02:25:01,820 asyncio write WARNING socket.send() raised exception.
2018-05-20 02:25:05,823 ib_insync.Watchdog watchAsync ERROR Hard timeout
2018-05-20 02:25:05,823 trading.containerClass myHardTimeoutCallback INFO hard time out watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB connected to 127.0.0.1:4002 clientId=24>, port=4002, clientId='24', appStartupTime=15)
2018-05-20 02:25:07,003 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:25:07 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:25:12,157 apscheduler.executors.default run_coroutine_job ERROR Job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='0'], next run at: 2018-05-20 02:26:00 CEST)" raised an exception
Traceback (most recent call last):
  File "/home/bn/anaconda3/envs/trading/lib/python3.6/site-packages/apscheduler/executors/base_py3.py", line 29, in run_coroutine_job
    retval = await job.func(*job.args, **job.kwargs)
  File "/home/bn/PycharmProjects/trading/trading/containerClass.py", line 649, in schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther
    self.__log.info(a)
  File "/home/bn/PycharmProjects/trading/trading/containerClass.py", line 152, in requestRecentHistoricalOrderedDictOfBars
    # note: the orderedDictOfBars attribute is continually updated
  File "/home/bn/PycharmProjects/trading/trading/containerClass.py", line 117, in requestRecentHistoricalBars
    # if bars is empty, no historical data is available
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 71, in getHistoricalDataBars
    bars = ib.run(asyncio.wait_for(req, timeOutTime))
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/ib.py", line 251, in run
    result = util.syncAwait(future)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/util.py", line 245, in syncAwait
    result = _syncAwaitAsyncio(future)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/util.py", line 259, in _syncAwaitAsyncio
    loop._run_once()
  File "/home/bn/anaconda3/envs/trading/lib/python3.6/asyncio/base_events.py", line 1396, in _run_once
    event_list = self._selector.select(timeout)
  File "/home/bn/anaconda3/envs/trading/lib/python3.6/selectors.py", line 445, in select
    fd_event_list = self._epoll.poll(timeout, max_ev)
KeyboardInterrupt
2018-05-20 02:25:12,158 asyncio default_exception_handler ERROR Exception in callback Task._step()
handle: <Handle Task._step()>
Traceback (most recent call last):
  File "/home/bn/anaconda3/envs/trading/lib/python3.6/asyncio/events.py", line 145, in _run
    self._callback(*self._args)
  File "/home/bn/anaconda3/envs/trading/lib/python3.6/asyncio/tasks.py", line 245, in _step
    self.__class__._current_tasks.pop(self._loop)
KeyError: <_UnixSelectorEventLoop running=True closed=False debug=False>
2018-05-20 02:25:14,003 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:25:14 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:25:21,007 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:25:21 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:25:25,096 ib_insync.Watchdog start INFO Starting
2018-05-20 02:25:25,097 quamash <module> INFO Using Qt Implementation: PyQt5
2018-05-20 02:25:25,123 ib_insync.IBC startAsync INFO Starting
2018-05-20 02:25:28,007 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:25:28 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:25:30,004 apscheduler.executors.default run_coroutine_job INFO Running job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='30'], next run at: 2018-05-20 02:26:30 CEST)" (scheduled at 2018-05-20 02:25:30+02:00)
2018-05-20 02:25:30,004 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO cancelling request for recent historical bars
2018-05-20 02:25:30,005 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: []
2018-05-20 02:25:30,005 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO re-initializing the ordered dict of bars
2018-05-20 02:25:30,005 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO renewing request for recent historical bars with new settings
2018-05-20 02:25:30,005 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:25:30,007 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:25:30,007 asyncio write WARNING socket.send() raised exception.
2018-05-20 02:25:35,005 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:25:35 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:25:40,013 trading.marketDataIB getHistoricalDataBars WARNING Timeout while requesting historical bars for contract Contract(secType='CASH', conId=15016065, symbol='EUR', exchange='IDEALPRO', currency='AUD', localSymbol='EUR.AUD', tradingClass='EUR.AUD')
2018-05-20 02:25:40,014 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CAD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:25:40,015 asyncio write WARNING socket.send() raised exception.
2018-05-20 02:25:40,139 ib_insync.client connectAsync INFO Connecting to 127.0.0.1:4002 with clientId 24...
2018-05-20 02:25:40,141 ib_insync.client _onSocketConnected INFO Connected
2018-05-20 02:25:40,189 ib_insync.client _onSocketHasData INFO Logged on to server version 141
2018-05-20 02:25:40,239 ib_insync.client connectAsync INFO API connection ready
2018-05-20 02:25:40,295 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17709995, marketValue=218940.59, averageCost=1.2182257, unrealizedPNL=-7649.39, realizedPNL=0.0, account='DU946735')
2018-05-20 02:25:40,295 ib_insync.wrapper position INFO position: Position(account='DU946735', contract=Contract(secType='CASH', conId=12087792, symbol='EUR', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, avgCost=1.2182257)
2018-05-20 02:25:40,310 ib_insync.ib connectAsync INFO Synchronization complete
2018-05-20 02:25:40,390 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() started
2018-05-20 02:25:40,391 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop datetime
2018-05-20 02:25:40,391 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 02:25:40,392 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop close
2018-05-20 02:25:40,392 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() complete
2018-05-20 02:25:40,392 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() started
2018-05-20 02:25:40,392 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop datetime
2018-05-20 02:25:40,392 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 02:25:40,392 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop close
2018-05-20 02:25:40,393 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() complete
2018-05-20 02:25:40,393 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() started
2018-05-20 02:25:40,393 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop datetime
2018-05-20 02:25:40,393 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 02:25:40,393 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop close
2018-05-20 02:25:40,393 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() complete
2018-05-20 02:25:40,393 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() started
2018-05-20 02:25:40,394 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop datetime
2018-05-20 02:25:40,394 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 02:25:40,394 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop close
2018-05-20 02:25:40,394 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() complete
2018-05-20 02:25:40,394 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() started
2018-05-20 02:25:40,394 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop datetime
2018-05-20 02:25:40,394 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 02:25:40,395 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop close
2018-05-20 02:25:40,395 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() complete
2018-05-20 02:25:40,395 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() started
2018-05-20 02:25:40,395 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop datetime
2018-05-20 02:25:40,395 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 02:25:40,395 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop close
2018-05-20 02:25:40,396 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() complete
2018-05-20 02:25:40,396 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() started
2018-05-20 02:25:40,396 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop datetime
2018-05-20 02:25:40,396 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 02:25:40,396 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop close
2018-05-20 02:25:40,396 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() complete
2018-05-20 02:25:40,397 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() started
2018-05-20 02:25:40,397 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop datetime
2018-05-20 02:25:40,397 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 02:25:40,397 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop close
2018-05-20 02:25:40,397 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() complete
2018-05-20 02:25:40,397 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() started
2018-05-20 02:25:40,397 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop datetime
2018-05-20 02:25:40,398 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop diffToNextRowInMinutes
2018-05-20 02:25:40,398 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop close
2018-05-20 02:25:40,398 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() complete
2018-05-20 02:25:40,398 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() started
2018-05-20 02:25:40,398 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop datetime
2018-05-20 02:25:40,398 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop diffToNextRowInMinutes
2018-05-20 02:25:40,399 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop close
2018-05-20 02:25:40,399 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() complete
2018-05-20 02:25:40,399 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() started
2018-05-20 02:25:40,399 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop datetime
2018-05-20 02:25:40,399 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop diffToNextRowInMinutes
2018-05-20 02:25:40,399 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop close
2018-05-20 02:25:40,400 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() complete
2018-05-20 02:25:40,400 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() started
2018-05-20 02:25:40,400 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop datetime
2018-05-20 02:25:40,400 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop diffToNextRowInMinutes
2018-05-20 02:25:40,400 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop close
2018-05-20 02:25:40,400 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() complete
2018-05-20 02:25:40,400 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() started
2018-05-20 02:25:40,401 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop datetime
2018-05-20 02:25:40,401 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop diffToNextRowInMinutes
2018-05-20 02:25:40,401 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop close
2018-05-20 02:25:40,401 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() complete
2018-05-20 02:25:40,401 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() started
2018-05-20 02:25:40,401 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop datetime
2018-05-20 02:25:40,402 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop diffToNextRowInMinutes
2018-05-20 02:25:40,402 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop close
2018-05-20 02:25:40,402 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() complete
2018-05-20 02:25:40,403 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-20 02:25:40,403 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-20 02:25:40,403 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 02:25:42,004 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:25:42 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:25:43,543 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-20 02:25:43,544 sqlalchemy.engine.base.Engine _execute_context INFO PRAGMA table_info("MarketDataInfoTable")
2018-05-20 02:25:43,544 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 02:25:43,548 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-20 02:25:43,548 sqlalchemy.engine.base.Engine _execute_context INFO SELECT count(*) AS count_1 
FROM (SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable") AS anon_1
2018-05-20 02:25:43,548 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 02:25:43,551 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName", "MarketDataInfoTable".description, "MarketDataInfoTable"."conId", "MarketDataInfoTable".symbol, "MarketDataInfoTable".currency, "MarketDataInfoTable".exchange, "MarketDataInfoTable".category, "MarketDataInfoTable"."secType", "MarketDataInfoTable"."earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-20 02:25:43,551 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 02:25:43,555 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-20 02:25:43,555 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 02:25:44,102 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-20 02:25:44,123 apscheduler.scheduler start INFO Scheduler started
2018-05-20 02:25:44,124 root runProg INFO Now updating the settings for the request of recent historical bars
2018-05-20 02:25:44,124 root runProg INFO Now requesting initial recent historical bars
2018-05-20 02:25:44,124 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:25:44,126 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:25:45,838 ib_insync.wrapper error INFO Warning 2106, reqId -1: HMDS data farm connection is OK:cashhmds
2018-05-20 02:25:45,839 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2106, errorString: HMDS data farm connection is OK:cashhmds, localSymbol: None
2018-05-20 02:25:45,979 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CAD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:25:46,190 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CHF. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:25:46,400 trading.containerClass addJobToScheduler INFO addJobToScheduler: jobName=asyncioJobGetHistoricalData_000000; args=([<IB connected to 127.0.0.1:4002 clientId=24>, <trading.database.tradingDB object at 0x7fa5ae1c3df0>, [Contract(secType='CASH', conId=15016065, symbol='EUR', exchange='IDEALPRO', currency='AUD', localSymbol='EUR.AUD', tradingClass='EUR.AUD'), Contract(secType='CASH', conId=15016068, symbol='EUR', exchange='IDEALPRO', currency='CAD', localSymbol='EUR.CAD', tradingClass='EUR.CAD'), Contract(secType='CASH', conId=12087817, symbol='EUR', exchange='IDEALPRO', currency='CHF', localSymbol='EUR.CHF', tradingClass='EUR.CHF')], {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'earliestDateTimeUTCNaive': Timestamp('2018-05-17 22:01:46.396592'), 'timeOutTimeHistoricalBars': 1800}], None), kwargs={}
2018-05-20 02:25:46,536 apscheduler.scheduler _real_add_job INFO Added job "asyncioJobGetHistoricalData_000000" to job store "default"
2018-05-20 02:25:46,536 trading.containerClass addJobToScheduler INFO addJobToScheduler: jobName=schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000; args=([], None), kwargs={'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 02:25:46,537 apscheduler.scheduler _real_add_job INFO Added job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000" to job store "default"
2018-05-20 02:25:46,537 trading.containerClass addJobToScheduler INFO addJobToScheduler: jobName=schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001; args=([], None), kwargs={'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:25:46,539 apscheduler.scheduler _real_add_job INFO Added job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001" to job store "default"
2018-05-20 02:25:49,004 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:25:56 CEST)" (scheduled at 2018-05-20 02:25:49+02:00)
2018-05-20 02:25:49,007 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:25:49 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:25:50,017 trading.marketDataIB getHistoricalDataBars WARNING Timeout while requesting historical bars for contract Contract(secType='CASH', conId=15016068, symbol='EUR', exchange='IDEALPRO', currency='CAD', localSymbol='EUR.CAD', tradingClass='EUR.CAD')
2018-05-20 02:25:50,017 apscheduler.executors.default run_coroutine_job INFO Job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='30'], next run at: 2018-05-20 02:26:30 CEST)" executed successfully
2018-05-20 02:25:56,008 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:25:56 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:26:00,004 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:26:00 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:26:00,005 apscheduler.executors.default run_coroutine_job INFO Running job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='0'], next run at: 2018-05-20 02:27:00 CEST)" (scheduled at 2018-05-20 02:26:00+02:00)
2018-05-20 02:26:00,005 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO cancelling request for recent historical bars
2018-05-20 02:26:00,005 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: ['MarketData_CASH_EUR_AUD_IDEALPRO', 'MarketData_CASH_EUR_CAD_IDEALPRO']
2018-05-20 02:26:00,005 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO re-initializing the ordered dict of bars
2018-05-20 02:26:00,005 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO renewing request for recent historical bars with new settings
2018-05-20 02:26:00,005 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 02:26:00,007 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 02:26:00,007 asyncio write WARNING socket.send() raised exception.
2018-05-20 02:26:07,005 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:26:07 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:26:14,008 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:26:14 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:26:21,008 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:26:21 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:26:28,007 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:26:28 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:26:30,002 apscheduler.executors.default run_coroutine_job INFO Running job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='30'], next run at: 2018-05-20 02:27:30 CEST)" (scheduled at 2018-05-20 02:26:30+02:00)
2018-05-20 02:26:30,003 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO cancelling request for recent historical bars
2018-05-20 02:26:30,003 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: []
2018-05-20 02:26:30,003 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO re-initializing the ordered dict of bars
2018-05-20 02:26:30,003 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO renewing request for recent historical bars with new settings
2018-05-20 02:26:30,003 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:26:30,005 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:26:30,006 asyncio write WARNING socket.send() raised exception.
2018-05-20 02:26:35,003 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:26:35 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:26:40,011 trading.marketDataIB getHistoricalDataBars WARNING Timeout while requesting historical bars for contract Contract(secType='CASH', conId=15016065, symbol='EUR', exchange='IDEALPRO', currency='AUD', localSymbol='EUR.AUD', tradingClass='EUR.AUD')
2018-05-20 02:26:40,013 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CAD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:26:40,013 asyncio write WARNING socket.send() raised exception.
2018-05-20 02:26:42,003 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:26:42 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:26:49,007 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:26:49 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:26:50,015 trading.marketDataIB getHistoricalDataBars WARNING Timeout while requesting historical bars for contract Contract(secType='CASH', conId=15016068, symbol='EUR', exchange='IDEALPRO', currency='CAD', localSymbol='EUR.CAD', tradingClass='EUR.CAD')
2018-05-20 02:26:50,015 apscheduler.executors.default run_coroutine_job INFO Job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='30'], next run at: 2018-05-20 02:27:30 CEST)" executed successfully
2018-05-20 02:26:56,007 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:26:56 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:27:00,003 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:27:00 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:27:00,004 apscheduler.scheduler _process_jobs WARNING Execution of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='0'], next run at: 2018-05-20 02:27:00 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:27:00,008 trading.marketDataIB getHistoricalDataBars WARNING Timeout while requesting historical bars for contract Contract(secType='CASH', conId=15016065, symbol='EUR', exchange='IDEALPRO', currency='AUD', localSymbol='EUR.AUD', tradingClass='EUR.AUD')
2018-05-20 02:27:00,010 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CAD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:27:00,010 asyncio write WARNING socket.send() raised exception.
2018-05-20 02:27:07,008 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:27:07 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:27:10,012 trading.marketDataIB getHistoricalDataBars WARNING Timeout while requesting historical bars for contract Contract(secType='CASH', conId=15016068, symbol='EUR', exchange='IDEALPRO', currency='CAD', localSymbol='EUR.CAD', tradingClass='EUR.CAD')
2018-05-20 02:27:10,012 apscheduler.executors.default run_coroutine_job INFO Job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='0'], next run at: 2018-05-20 02:28:00 CEST)" executed successfully
2018-05-20 02:27:14,003 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:27:14 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:27:18,996 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, AUD; is going to be performed because earliestDateTime is given by IB: 2005-09-28 03:30:00
2018-05-20 02:27:18,997 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-17 22:12:17.320019
2018-05-20 02:27:18,998 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-18 22:12:17.320019
2018-05-20 02:27:18,999 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-17 22:12:17.320019; endDT: 2018-05-18 21:52:17.320019; durationString: 85200 S
2018-05-20 02:27:19,000 trading.containerClass myTimeoutCallback INFO timeout callback 92.61195
2018-05-20 02:27:19,007 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:25:56 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:27:19,008 trading.containerClass mySoftTimeoutCallback INFO soft time out watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB connected to 127.0.0.1:4002 clientId=24>, port=4002, clientId='24', appStartupTime=15)
2018-05-20 02:27:19,008 apscheduler.executors.default run_coroutine_job INFO Running job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='*/10'], next run at: 2018-05-20 02:27:20 CEST)" (scheduled at 2018-05-20 02:27:10+02:00)
2018-05-20 02:27:19,009 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO cancelling request for recent historical bars
2018-05-20 02:27:19,009 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: ['MarketData_CASH_EUR_AUD_IDEALPRO', 'MarketData_CASH_EUR_CAD_IDEALPRO', 'MarketData_CASH_EUR_CHF_IDEALPRO']
2018-05-20 02:27:19,009 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO re-initializing the ordered dict of bars
2018-05-20 02:27:19,009 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO renewing request for recent historical bars with new settings
2018-05-20 02:27:19,009 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 02:27:19,011 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 02:27:19,022 ib_insync.wrapper error ERROR Error 366, reqId 31: No historical data query found for ticker id:31
2018-05-20 02:27:19,022 trading.containerClass myErrorCallback INFO reqId: 31, errorCode: 366, errorString: No historical data query found for ticker id:31, localSymbol: None
2018-05-20 02:27:19,022 ib_insync.wrapper error ERROR Error 366, reqId 32: No historical data query found for ticker id:32
2018-05-20 02:27:19,022 trading.containerClass myErrorCallback INFO reqId: 32, errorCode: 366, errorString: No historical data query found for ticker id:32, localSymbol: None
2018-05-20 02:27:19,023 ib_insync.wrapper error ERROR Error 366, reqId 33: No historical data query found for ticker id:33
2018-05-20 02:27:19,023 trading.containerClass myErrorCallback INFO reqId: 33, errorCode: 366, errorString: No historical data query found for ticker id:33, localSymbol: None
2018-05-20 02:27:19,769 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CAD. settings: {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 02:27:20,009 apscheduler.scheduler _process_jobs WARNING Execution of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='*/10'], next run at: 2018-05-20 02:27:20 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:27:20,195 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CHF. settings: {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 02:27:20,670 apscheduler.executors.default run_coroutine_job INFO Job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='*/10'], next run at: 2018-05-20 02:27:30 CEST)" executed successfully
2018-05-20 02:27:20,671 apscheduler.executors.default run_coroutine_job INFO Running job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='5-59/10'], next run at: 2018-05-20 02:27:25 CEST)" (scheduled at 2018-05-20 02:27:15+02:00)
2018-05-20 02:27:20,671 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO cancelling request for recent historical bars
2018-05-20 02:27:20,672 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: ['MarketData_CASH_EUR_AUD_IDEALPRO', 'MarketData_CASH_EUR_CAD_IDEALPRO', 'MarketData_CASH_EUR_CHF_IDEALPRO']
2018-05-20 02:27:20,672 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO re-initializing the ordered dict of bars
2018-05-20 02:27:20,673 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO renewing request for recent historical bars with new settings
2018-05-20 02:27:20,673 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:27:20,675 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:27:20,676 ib_insync.wrapper error ERROR Error 366, reqId 36: No historical data query found for ticker id:36
2018-05-20 02:27:20,676 trading.containerClass myErrorCallback INFO reqId: 36, errorCode: 366, errorString: No historical data query found for ticker id:36, localSymbol: None
2018-05-20 02:27:20,676 ib_insync.wrapper error ERROR Error 366, reqId 37: No historical data query found for ticker id:37
2018-05-20 02:27:20,676 trading.containerClass myErrorCallback INFO reqId: 37, errorCode: 366, errorString: No historical data query found for ticker id:37, localSymbol: None
2018-05-20 02:27:20,676 ib_insync.wrapper error ERROR Error 366, reqId 38: No historical data query found for ticker id:38
2018-05-20 02:27:20,677 trading.containerClass myErrorCallback INFO reqId: 38, errorCode: 366, errorString: No historical data query found for ticker id:38, localSymbol: None
2018-05-20 02:27:20,874 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CAD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:27:21,001 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:27:21 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:27:21,007 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:27:21 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:27:21,086 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CHF. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:27:21,288 apscheduler.executors.default run_coroutine_job INFO Job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='5-59/10'], next run at: 2018-05-20 02:27:25 CEST)" executed successfully
2018-05-20 02:27:21,742 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1420; elapsed time: 0:00:00.129276
2018-05-20 02:27:21,742 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1420; elapsed time: 0:00:00.453727
2018-05-20 02:27:21,927 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-17 22:12:17.320019; endDT: 2018-05-18 21:52:17.320019; durationString: 85200 S; elapsedTime: 0:00:02.928264; rows: 1420; rowsTotal: 4595359
2018-05-20 02:27:21,940 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-18 21:52:17.320019
2018-05-20 02:27:21,940 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-19 21:32:17.320019
2018-05-20 02:27:21,941 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-18 21:52:17.320019; endDT: 2018-05-19 21:28:17.320019; durationString: 84960 S
2018-05-20 02:27:22,798 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1416; elapsed time: 0:00:00.123570
2018-05-20 02:27:22,798 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1416; elapsed time: 0:00:00.442476
2018-05-20 02:27:22,964 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-18 21:52:17.320019; endDT: 2018-05-19 21:28:17.320019; durationString: 84960 S; elapsedTime: 0:00:01.022744; rows: 1416; rowsTotal: 4595359
2018-05-20 02:27:22,978 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-19 21:28:17.320019
2018-05-20 02:27:22,979 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-20 21:04:17.320019
2018-05-20 02:27:22,980 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-19 21:28:17.320019; endDT: 2018-05-20 21:15:17.320019; durationString: 85620 S
2018-05-20 02:27:23,770 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1427; elapsed time: 0:00:00.120343
2018-05-20 02:27:23,770 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1427; elapsed time: 0:00:00.373458
2018-05-20 02:27:23,878 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-19 21:28:17.320019; endDT: 2018-05-20 21:15:17.320019; durationString: 85620 S; elapsedTime: 0:00:00.897981; rows: 1427; rowsTotal: 4595359
2018-05-20 02:27:23,889 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: EUR, AUD; elapsedTime: 0:00:04.897086
2018-05-20 02:27:28,008 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:27:28 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:27:30,010 apscheduler.executors.default run_coroutine_job INFO Running job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='30'], next run at: 2018-05-20 02:28:30 CEST)" (scheduled at 2018-05-20 02:27:30+02:00)
2018-05-20 02:27:30,012 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO cancelling request for recent historical bars
2018-05-20 02:27:30,013 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: ['MarketData_CASH_EUR_AUD_IDEALPRO', 'MarketData_CASH_EUR_CAD_IDEALPRO']
2018-05-20 02:27:30,014 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO re-initializing the ordered dict of bars
2018-05-20 02:27:30,015 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO renewing request for recent historical bars with new settings
2018-05-20 02:27:30,015 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:27:30,027 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:27:30,030 asyncio write WARNING socket.send() raised exception.
2018-05-20 02:27:35,007 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:27:35 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:27:36,080 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, CAD; is going to be performed because earliestDateTime is given by IB: 2005-03-09 04:30:00
2018-05-20 02:27:36,081 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-17 22:01:46.396592
2018-05-20 02:27:36,081 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-18 22:01:46.396592
2018-05-20 02:27:36,082 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-17 22:01:46.396592; endDT: 2018-05-18 21:35:46.396592; durationString: 84840 S
2018-05-20 02:27:36,083 apscheduler.scheduler _process_jobs WARNING Execution of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='5-59/10'], next run at: 2018-05-20 02:27:25 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:27:36,084 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:27:28 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:27:36,084 apscheduler.scheduler _process_jobs WARNING Execution of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='*/10'], next run at: 2018-05-20 02:27:30 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:27:37,032 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1414; elapsed time: 0:00:00.111948
2018-05-20 02:27:37,032 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1414; elapsed time: 0:00:00.484278
2018-05-20 02:27:37,189 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-17 22:01:46.396592; endDT: 2018-05-18 21:35:46.396592; durationString: 84840 S; elapsedTime: 0:00:01.107390; rows: 1414; rowsTotal: 2099307
2018-05-20 02:27:37,200 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-18 21:35:46.396592
2018-05-20 02:27:37,200 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-19 21:09:46.396592
2018-05-20 02:27:37,201 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-18 21:35:46.396592; endDT: 2018-05-19 21:08:46.396592; durationString: 84780 S
2018-05-20 02:27:37,917 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1413; elapsed time: 0:00:00.093979
2018-05-20 02:27:37,917 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1413; elapsed time: 0:00:00.317577
2018-05-20 02:27:37,998 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-18 21:35:46.396592; endDT: 2018-05-19 21:08:46.396592; durationString: 84780 S; elapsedTime: 0:00:00.797461; rows: 1413; rowsTotal: 2099307
2018-05-20 02:27:38,009 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-19 21:08:46.396592
2018-05-20 02:27:38,009 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-20 20:41:46.396592
2018-05-20 02:27:38,010 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-19 21:08:46.396592; endDT: 2018-05-20 21:07:46.396592; durationString: 86340 S
2018-05-20 02:27:38,820 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1439; elapsed time: 0:00:00.113438
2018-05-20 02:27:38,820 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1439; elapsed time: 0:00:00.394214
2018-05-20 02:27:38,896 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-19 21:08:46.396592; endDT: 2018-05-20 21:07:46.396592; durationString: 86340 S; elapsedTime: 0:00:00.886443; rows: 1439; rowsTotal: 2099307
2018-05-20 02:27:38,907 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: EUR, CAD; elapsedTime: 0:00:02.828418
2018-05-20 02:27:40,035 trading.marketDataIB getHistoricalDataBars WARNING Timeout while requesting historical bars for contract Contract(secType='CASH', conId=15016065, symbol='EUR', exchange='IDEALPRO', currency='AUD', localSymbol='EUR.AUD', tradingClass='EUR.AUD')
2018-05-20 02:27:40,037 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CAD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:27:40,037 asyncio write WARNING socket.send() raised exception.
2018-05-20 02:27:42,003 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:27:42 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:27:47,820 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, CHF; is going to be performed because earliestDateTime is given by IB: 2005-03-09 04:30:00
2018-05-20 02:27:47,822 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-17 22:01:46.396592
2018-05-20 02:27:47,822 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-18 22:01:46.396592
2018-05-20 02:27:47,822 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CHF; startDT: 2018-05-17 22:01:46.396592; endDT: 2018-05-18 21:59:46.396592; durationString: 86280 S
2018-05-20 02:27:47,824 apscheduler.scheduler _process_jobs WARNING Execution of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='*/10'], next run at: 2018-05-20 02:27:40 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:27:47,825 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:27:42 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:27:47,826 apscheduler.scheduler _process_jobs WARNING Execution of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='5-59/10'], next run at: 2018-05-20 02:27:45 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:27:48,622 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CHF_IDEALPRO; nRows: 1438; elapsed time: 0:00:00.137967
2018-05-20 02:27:48,622 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CHF_IDEALPRO; nRows: 1438; elapsed time: 0:00:00.384045
2018-05-20 02:27:48,727 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CHF; startDT: 2018-05-17 22:01:46.396592; endDT: 2018-05-18 21:59:46.396592; durationString: 86280 S; elapsedTime: 0:00:00.904596; rows: 1438; rowsTotal: 4824410
2018-05-20 02:27:48,738 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-18 21:59:46.396592
2018-05-20 02:27:48,739 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-19 21:57:46.396592
2018-05-20 02:27:48,739 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CHF; startDT: 2018-05-18 21:59:46.396592; endDT: 2018-05-19 21:48:46.396592; durationString: 85740 S
2018-05-20 02:27:49,003 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:27:49 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:27:49,007 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:27:49 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:27:49,560 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CHF_IDEALPRO; nRows: 1429; elapsed time: 0:00:00.142126
2018-05-20 02:27:49,561 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CHF_IDEALPRO; nRows: 1429; elapsed time: 0:00:00.411803
2018-05-20 02:27:49,891 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CHF; startDT: 2018-05-18 21:59:46.396592; endDT: 2018-05-19 21:48:46.396592; durationString: 85740 S; elapsedTime: 0:00:01.152034; rows: 1429; rowsTotal: 4824410
2018-05-20 02:27:49,902 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-19 21:48:46.396592
2018-05-20 02:27:49,902 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-20 21:37:46.396592
2018-05-20 02:27:49,902 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CHF; startDT: 2018-05-19 21:48:46.396592; endDT: 2018-05-20 21:47:46.396592; durationString: 86340 S
2018-05-20 02:27:50,002 apscheduler.scheduler _process_jobs WARNING Execution of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='*/10'], next run at: 2018-05-20 02:27:50 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:27:50,039 trading.marketDataIB getHistoricalDataBars WARNING Timeout while requesting historical bars for contract Contract(secType='CASH', conId=15016068, symbol='EUR', exchange='IDEALPRO', currency='CAD', localSymbol='EUR.CAD', tradingClass='EUR.CAD')
2018-05-20 02:27:50,039 apscheduler.executors.default run_coroutine_job INFO Job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='30'], next run at: 2018-05-20 02:28:30 CEST)" executed successfully
2018-05-20 02:27:50,768 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CHF_IDEALPRO; nRows: 1407; elapsed time: 0:00:00.136961
2018-05-20 02:27:50,768 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CHF_IDEALPRO; nRows: 1407; elapsed time: 0:00:00.454192
2018-05-20 02:27:50,970 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CHF; startDT: 2018-05-19 21:48:46.396592; endDT: 2018-05-20 21:47:46.396592; durationString: 86340 S; elapsedTime: 0:00:01.067774; rows: 1407; rowsTotal: 4824410
2018-05-20 02:27:50,981 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: EUR, CHF; elapsedTime: 0:00:03.163266
2018-05-20 02:27:56,003 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:27:56 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:28:00,005 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:28:00 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:28:00,006 apscheduler.executors.default run_coroutine_job INFO Running job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='0'], next run at: 2018-05-20 02:29:00 CEST)" (scheduled at 2018-05-20 02:28:00+02:00)
2018-05-20 02:28:00,006 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO cancelling request for recent historical bars
2018-05-20 02:28:00,006 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: ['MarketData_CASH_EUR_AUD_IDEALPRO', 'MarketData_CASH_EUR_CAD_IDEALPRO']
2018-05-20 02:28:00,006 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO re-initializing the ordered dict of bars
2018-05-20 02:28:00,006 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO renewing request for recent historical bars with new settings
2018-05-20 02:28:00,007 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 02:28:00,008 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 02:28:00,008 asyncio write WARNING socket.send() raised exception.
2018-05-20 02:28:07,009 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:28:07 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:28:14,007 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:28:14 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:28:14,827 apscheduler.executors.default run_coroutine_job INFO Job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:27:56 CEST)" executed successfully
2018-05-20 02:28:14,828 trading.containerClass myTimeoutCallback INFO timeout callback 24.616016
2018-05-20 02:28:14,831 trading.containerClass mySoftTimeoutCallback INFO soft time out watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB connected to 127.0.0.1:4002 clientId=24>, port=4002, clientId='24', appStartupTime=15)
2018-05-20 02:28:14,832 apscheduler.executors.default run_coroutine_job INFO Running job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='5-59/10'], next run at: 2018-05-20 02:28:15 CEST)" (scheduled at 2018-05-20 02:28:05+02:00)
2018-05-20 02:28:14,832 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO cancelling request for recent historical bars
2018-05-20 02:28:14,832 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: ['MarketData_CASH_EUR_AUD_IDEALPRO', 'MarketData_CASH_EUR_CAD_IDEALPRO', 'MarketData_CASH_EUR_CHF_IDEALPRO']
2018-05-20 02:28:14,833 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO re-initializing the ordered dict of bars
2018-05-20 02:28:14,833 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO renewing request for recent historical bars with new settings
2018-05-20 02:28:14,833 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:28:14,835 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:28:14,836 ib_insync.wrapper error ERROR Error 366, reqId 39: No historical data query found for ticker id:39
2018-05-20 02:28:14,837 trading.containerClass myErrorCallback INFO reqId: 39, errorCode: 366, errorString: No historical data query found for ticker id:39, localSymbol: None
2018-05-20 02:28:14,837 ib_insync.wrapper error ERROR Error 366, reqId 40: No historical data query found for ticker id:40
2018-05-20 02:28:14,837 trading.containerClass myErrorCallback INFO reqId: 40, errorCode: 366, errorString: No historical data query found for ticker id:40, localSymbol: None
2018-05-20 02:28:14,837 ib_insync.wrapper error ERROR Error 366, reqId 41: No historical data query found for ticker id:41
2018-05-20 02:28:14,837 trading.containerClass myErrorCallback INFO reqId: 41, errorCode: 366, errorString: No historical data query found for ticker id:41, localSymbol: None
2018-05-20 02:28:15,004 apscheduler.scheduler _process_jobs WARNING Execution of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='5-59/10'], next run at: 2018-05-20 02:28:15 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:28:15,233 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CAD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:28:15,441 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CHF. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:28:15,745 apscheduler.executors.default run_coroutine_job INFO Job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='5-59/10'], next run at: 2018-05-20 02:28:25 CEST)" executed successfully
2018-05-20 02:28:15,745 apscheduler.executors.default run_coroutine_job INFO Running job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='*/10'], next run at: 2018-05-20 02:28:20 CEST)" (scheduled at 2018-05-20 02:28:10+02:00)
2018-05-20 02:28:15,745 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO cancelling request for recent historical bars
2018-05-20 02:28:15,746 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: ['MarketData_CASH_EUR_AUD_IDEALPRO', 'MarketData_CASH_EUR_CAD_IDEALPRO', 'MarketData_CASH_EUR_CHF_IDEALPRO']
2018-05-20 02:28:15,746 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO re-initializing the ordered dict of bars
2018-05-20 02:28:15,746 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO renewing request for recent historical bars with new settings
2018-05-20 02:28:15,746 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 02:28:15,747 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 02:28:15,748 ib_insync.wrapper error ERROR Error 366, reqId 51: No historical data query found for ticker id:51
2018-05-20 02:28:15,748 trading.containerClass myErrorCallback INFO reqId: 51, errorCode: 366, errorString: No historical data query found for ticker id:51, localSymbol: None
2018-05-20 02:28:15,748 ib_insync.wrapper error ERROR Error 366, reqId 52: No historical data query found for ticker id:52
2018-05-20 02:28:15,749 trading.containerClass myErrorCallback INFO reqId: 52, errorCode: 366, errorString: No historical data query found for ticker id:52, localSymbol: None
2018-05-20 02:28:15,749 ib_insync.wrapper error ERROR Error 366, reqId 53: No historical data query found for ticker id:53
2018-05-20 02:28:15,749 trading.containerClass myErrorCallback INFO reqId: 53, errorCode: 366, errorString: No historical data query found for ticker id:53, localSymbol: None
2018-05-20 02:28:16,232 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CAD. settings: {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 02:28:16,657 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CHF. settings: {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 02:28:17,063 apscheduler.executors.default run_coroutine_job INFO Job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='*/10'], next run at: 2018-05-20 02:28:20 CEST)" executed successfully
2018-05-20 02:28:17,064 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:28:21 CEST)" (scheduled at 2018-05-20 02:28:14+02:00)
2018-05-20 02:28:21,006 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:28:21 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:28:28,006 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:28:28 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:28:30,004 apscheduler.executors.default run_coroutine_job INFO Running job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='30'], next run at: 2018-05-20 02:29:30 CEST)" (scheduled at 2018-05-20 02:28:30+02:00)
2018-05-20 02:28:30,004 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO cancelling request for recent historical bars
2018-05-20 02:28:30,004 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: []
2018-05-20 02:28:30,004 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO re-initializing the ordered dict of bars
2018-05-20 02:28:30,004 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO renewing request for recent historical bars with new settings
2018-05-20 02:28:30,004 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:28:30,005 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:28:30,005 asyncio write WARNING socket.send() raised exception.
2018-05-20 02:28:35,002 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:28:35 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:28:40,011 trading.marketDataIB getHistoricalDataBars WARNING Timeout while requesting historical bars for contract Contract(secType='CASH', conId=15016065, symbol='EUR', exchange='IDEALPRO', currency='AUD', localSymbol='EUR.AUD', tradingClass='EUR.AUD')
2018-05-20 02:28:40,012 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CAD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:28:40,013 asyncio write WARNING socket.send() raised exception.
2018-05-20 02:28:42,003 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:28:42 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:28:49,007 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:28:49 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:28:50,015 trading.marketDataIB getHistoricalDataBars WARNING Timeout while requesting historical bars for contract Contract(secType='CASH', conId=15016068, symbol='EUR', exchange='IDEALPRO', currency='CAD', localSymbol='EUR.CAD', tradingClass='EUR.CAD')
2018-05-20 02:28:50,015 apscheduler.executors.default run_coroutine_job INFO Job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='30'], next run at: 2018-05-20 02:29:30 CEST)" executed successfully
2018-05-20 02:28:56,007 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:28:56 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:29:00,005 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:29:00 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:29:00,006 apscheduler.scheduler _process_jobs WARNING Execution of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='0'], next run at: 2018-05-20 02:29:00 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:29:00,009 trading.marketDataIB getHistoricalDataBars WARNING Timeout while requesting historical bars for contract Contract(secType='CASH', conId=15016065, symbol='EUR', exchange='IDEALPRO', currency='AUD', localSymbol='EUR.AUD', tradingClass='EUR.AUD')
2018-05-20 02:29:00,010 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CAD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:29:00,011 asyncio write WARNING socket.send() raised exception.
2018-05-20 02:29:07,008 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:29:07 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:29:08,917 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, AUD; is going to be performed because earliestDateTime is given by IB: 2005-09-28 03:30:00
2018-05-20 02:29:08,918 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-17 22:01:46.396592
2018-05-20 02:29:08,919 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-18 22:01:46.396592
2018-05-20 02:29:08,919 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-17 22:01:46.396592; endDT: 2018-05-18 21:40:46.396592; durationString: 85140 S
2018-05-20 02:29:08,921 apscheduler.scheduler _process_jobs WARNING Execution of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='*/10'], next run at: 2018-05-20 02:28:20 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:29:08,923 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:28:21 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:29:08,925 apscheduler.executors.default run_coroutine_job INFO Running job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='5-59/10'], next run at: 2018-05-20 02:29:15 CEST)" (scheduled at 2018-05-20 02:29:05+02:00)
2018-05-20 02:29:08,925 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO cancelling request for recent historical bars
2018-05-20 02:29:08,925 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: ['MarketData_CASH_EUR_AUD_IDEALPRO', 'MarketData_CASH_EUR_CAD_IDEALPRO', 'MarketData_CASH_EUR_CHF_IDEALPRO']
2018-05-20 02:29:08,926 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO re-initializing the ordered dict of bars
2018-05-20 02:29:08,926 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO renewing request for recent historical bars with new settings
2018-05-20 02:29:08,926 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:29:08,928 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:29:08,929 ib_insync.wrapper error ERROR Error 366, reqId 54: No historical data query found for ticker id:54
2018-05-20 02:29:08,929 trading.containerClass myErrorCallback INFO reqId: 54, errorCode: 366, errorString: No historical data query found for ticker id:54, localSymbol: None
2018-05-20 02:29:08,930 ib_insync.wrapper error ERROR Error 366, reqId 55: No historical data query found for ticker id:55
2018-05-20 02:29:08,930 trading.containerClass myErrorCallback INFO reqId: 55, errorCode: 366, errorString: No historical data query found for ticker id:55, localSymbol: None
2018-05-20 02:29:08,930 ib_insync.wrapper error ERROR Error 366, reqId 56: No historical data query found for ticker id:56
2018-05-20 02:29:08,930 trading.containerClass myErrorCallback INFO reqId: 56, errorCode: 366, errorString: No historical data query found for ticker id:56, localSymbol: None
2018-05-20 02:29:09,519 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CAD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:29:09,720 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CHF. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:29:09,919 apscheduler.executors.default run_coroutine_job INFO Job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='5-59/10'], next run at: 2018-05-20 02:29:15 CEST)" executed successfully
2018-05-20 02:29:10,015 trading.marketDataIB getHistoricalDataBars WARNING Timeout while requesting historical bars for contract Contract(secType='CASH', conId=15016068, symbol='EUR', exchange='IDEALPRO', currency='CAD', localSymbol='EUR.CAD', tradingClass='EUR.CAD')
2018-05-20 02:29:10,015 apscheduler.executors.default run_coroutine_job INFO Job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='0'], next run at: 2018-05-20 02:30:00 CEST)" executed successfully
2018-05-20 02:29:10,380 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1419; elapsed time: 0:00:00.190342
2018-05-20 02:29:10,380 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1419; elapsed time: 0:00:00.461409
2018-05-20 02:29:10,496 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-17 22:01:46.396592; endDT: 2018-05-18 21:40:46.396592; durationString: 85140 S; elapsedTime: 0:00:01.576992; rows: 1419; rowsTotal: 4595359
2018-05-20 02:29:10,496 apscheduler.scheduler _process_jobs WARNING Execution of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='*/10'], next run at: 2018-05-20 02:29:10 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:29:10,508 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-18 21:40:46.396592
2018-05-20 02:29:10,508 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-19 21:19:46.396592
2018-05-20 02:29:10,508 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-18 21:40:46.396592; endDT: 2018-05-19 21:20:46.396592; durationString: 85200 S
2018-05-20 02:29:11,456 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1420; elapsed time: 0:00:00.128152
2018-05-20 02:29:11,456 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1420; elapsed time: 0:00:00.545926
2018-05-20 02:29:11,565 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-18 21:40:46.396592; endDT: 2018-05-19 21:20:46.396592; durationString: 85200 S; elapsedTime: 0:00:01.056579; rows: 1420; rowsTotal: 4595359
2018-05-20 02:29:11,576 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-19 21:20:46.396592
2018-05-20 02:29:11,576 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-20 21:00:46.396592
2018-05-20 02:29:11,576 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-19 21:20:46.396592; endDT: 2018-05-20 21:09:46.396592; durationString: 85740 S
2018-05-20 02:29:12,416 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1429; elapsed time: 0:00:00.135665
2018-05-20 02:29:12,416 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1429; elapsed time: 0:00:00.413524
2018-05-20 02:29:12,646 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-19 21:20:46.396592; endDT: 2018-05-20 21:09:46.396592; durationString: 85740 S; elapsedTime: 0:00:01.070256; rows: 1429; rowsTotal: 4595359
2018-05-20 02:29:12,658 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: EUR, AUD; elapsedTime: 0:00:03.741980
2018-05-20 02:29:14,007 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:29:14 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:29:18,364 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, CAD; is going to be performed because earliestDateTime is given by IB: 2005-03-09 04:30:00
2018-05-20 02:29:18,365 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-17 22:01:46.396592
2018-05-20 02:29:18,365 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-18 22:01:46.396592
2018-05-20 02:29:18,366 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-17 22:01:46.396592; endDT: 2018-05-18 21:43:46.396592; durationString: 85320 S
2018-05-20 02:29:18,367 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:29:14 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:29:18,368 apscheduler.scheduler _process_jobs WARNING Execution of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='5-59/10'], next run at: 2018-05-20 02:29:15 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:29:19,183 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1422; elapsed time: 0:00:00.094357
2018-05-20 02:29:19,183 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1422; elapsed time: 0:00:00.336122
2018-05-20 02:29:19,261 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-17 22:01:46.396592; endDT: 2018-05-18 21:43:46.396592; durationString: 85320 S; elapsedTime: 0:00:00.895703; rows: 1422; rowsTotal: 2099307
2018-05-20 02:29:19,272 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-18 21:43:46.396592
2018-05-20 02:29:19,273 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-19 21:25:46.396592
2018-05-20 02:29:19,273 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-18 21:43:46.396592; endDT: 2018-05-19 21:42:46.396592; durationString: 86340 S
2018-05-20 02:29:20,060 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1439; elapsed time: 0:00:00.122762
2018-05-20 02:29:20,060 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1439; elapsed time: 0:00:00.385154
2018-05-20 02:29:20,143 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-18 21:43:46.396592; endDT: 2018-05-19 21:42:46.396592; durationString: 86340 S; elapsedTime: 0:00:00.869734; rows: 1439; rowsTotal: 2099307
2018-05-20 02:29:20,143 apscheduler.scheduler _process_jobs WARNING Execution of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='*/10'], next run at: 2018-05-20 02:29:20 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:29:20,154 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-19 21:42:46.396592
2018-05-20 02:29:20,155 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-20 21:41:46.396592
2018-05-20 02:29:20,155 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-19 21:42:46.396592; endDT: 2018-05-20 21:24:46.396592; durationString: 85320 S
2018-05-20 02:29:20,893 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1413; elapsed time: 0:00:00.093542
2018-05-20 02:29:20,893 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1413; elapsed time: 0:00:00.316426
2018-05-20 02:29:21,004 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:29:21 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:29:21,097 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-19 21:42:46.396592; endDT: 2018-05-20 21:24:46.396592; durationString: 85320 S; elapsedTime: 0:00:00.941829; rows: 1413; rowsTotal: 2099307
2018-05-20 02:29:21,098 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:29:21 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:29:21,109 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: EUR, CAD; elapsedTime: 0:00:02.748155
2018-05-20 02:29:28,008 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:29:28 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:29:28,874 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, CHF; is going to be performed because earliestDateTime is given by IB: 2005-03-09 04:30:00
2018-05-20 02:29:28,876 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-19 00:29:28.875490
2018-05-20 02:29:28,876 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-20 00:29:28.875490
2018-05-20 02:29:28,876 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CHF; startDT: 2018-05-19 00:29:28.875490; endDT: 2018-05-20 00:25:28.875490; durationString: 86160 S
2018-05-20 02:29:28,877 apscheduler.scheduler _process_jobs WARNING Execution of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='5-59/10'], next run at: 2018-05-20 02:29:25 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:29:28,877 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:29:28 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:29:29,781 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CHF_IDEALPRO; nRows: 1436; elapsed time: 0:00:00.164817
2018-05-20 02:29:29,781 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CHF_IDEALPRO; nRows: 1436; elapsed time: 0:00:00.403075
2018-05-20 02:29:29,902 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CHF; startDT: 2018-05-19 00:29:28.875490; endDT: 2018-05-20 00:25:28.875490; durationString: 86160 S; elapsedTime: 0:00:01.026239; rows: 1436; rowsTotal: 4824410
2018-05-20 02:29:29,914 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-20 00:25:28.875490
2018-05-20 02:29:29,914 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-21 00:21:28.875490
2018-05-20 02:29:29,914 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CHF; startDT: 2018-05-20 00:25:28.875490; endDT: 2018-05-21 00:08:28.875490; durationString: 85380 S
2018-05-20 02:29:30,001 apscheduler.scheduler _process_jobs WARNING Execution of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='*/10'], next run at: 2018-05-20 02:29:30 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:29:30,002 apscheduler.executors.default run_coroutine_job INFO Running job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='30'], next run at: 2018-05-20 02:30:30 CEST)" (scheduled at 2018-05-20 02:29:30+02:00)
2018-05-20 02:29:30,002 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO cancelling request for recent historical bars
2018-05-20 02:29:30,003 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: ['MarketData_CASH_EUR_AUD_IDEALPRO', 'MarketData_CASH_EUR_CAD_IDEALPRO']
2018-05-20 02:29:30,003 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO re-initializing the ordered dict of bars
2018-05-20 02:29:30,003 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO renewing request for recent historical bars with new settings
2018-05-20 02:29:30,003 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:29:30,005 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:29:30,005 asyncio write WARNING socket.send() raised exception.
2018-05-20 02:29:30,774 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CHF_IDEALPRO; nRows: 1250; elapsed time: 0:00:00.156392
2018-05-20 02:29:30,774 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CHF_IDEALPRO; nRows: 1250; elapsed time: 0:00:00.464690
2018-05-20 02:29:31,203 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CHF; startDT: 2018-05-20 00:25:28.875490; endDT: 2018-05-21 00:08:28.875490; durationString: 85380 S; elapsedTime: 0:00:01.289106; rows: 1250; rowsTotal: 4824410
2018-05-20 02:29:31,214 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: EUR, CHF; elapsedTime: 0:00:02.341319
2018-05-20 02:29:35,006 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:29:35 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:29:36,416 apscheduler.executors.default run_coroutine_job INFO Job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:29:35 CEST)" executed successfully
2018-05-20 02:29:36,418 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:29:42 CEST)" (scheduled at 2018-05-20 02:29:35+02:00)
2018-05-20 02:29:40,011 trading.marketDataIB getHistoricalDataBars WARNING Timeout while requesting historical bars for contract Contract(secType='CASH', conId=15016065, symbol='EUR', exchange='IDEALPRO', currency='AUD', localSymbol='EUR.AUD', tradingClass='EUR.AUD')
2018-05-20 02:29:40,012 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CAD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:29:40,013 asyncio write WARNING socket.send() raised exception.
2018-05-20 02:29:42,003 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:29:42 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:29:43,629 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, AUD; is going to be performed because earliestDateTime is given by IB: 2005-09-28 03:30:00
2018-05-20 02:29:43,631 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-17 22:01:46.396592
2018-05-20 02:29:43,632 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-18 22:01:46.396592
2018-05-20 02:29:43,632 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-17 22:01:46.396592; endDT: 2018-05-18 21:50:46.396592; durationString: 85740 S
2018-05-20 02:29:43,634 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:29:42 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:29:43,635 apscheduler.executors.default run_coroutine_job INFO Running job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='*/10'], next run at: 2018-05-20 02:29:50 CEST)" (scheduled at 2018-05-20 02:29:40+02:00)
2018-05-20 02:29:43,635 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO cancelling request for recent historical bars
2018-05-20 02:29:43,636 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: ['MarketData_CASH_EUR_AUD_IDEALPRO', 'MarketData_CASH_EUR_CAD_IDEALPRO', 'MarketData_CASH_EUR_CHF_IDEALPRO']
2018-05-20 02:29:43,636 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO re-initializing the ordered dict of bars
2018-05-20 02:29:43,636 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO renewing request for recent historical bars with new settings
2018-05-20 02:29:43,636 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 02:29:43,638 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 02:29:43,639 ib_insync.wrapper error ERROR Error 366, reqId 58: No historical data query found for ticker id:58
2018-05-20 02:29:43,640 trading.containerClass myErrorCallback INFO reqId: 58, errorCode: 366, errorString: No historical data query found for ticker id:58, localSymbol: None
2018-05-20 02:29:43,640 ib_insync.wrapper error ERROR Error 366, reqId 59: No historical data query found for ticker id:59
2018-05-20 02:29:43,640 trading.containerClass myErrorCallback INFO reqId: 59, errorCode: 366, errorString: No historical data query found for ticker id:59, localSymbol: None
2018-05-20 02:29:43,640 ib_insync.wrapper error ERROR Error 366, reqId 60: No historical data query found for ticker id:60
2018-05-20 02:29:43,640 trading.containerClass myErrorCallback INFO reqId: 60, errorCode: 366, errorString: No historical data query found for ticker id:60, localSymbol: None
2018-05-20 02:29:44,259 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CAD. settings: {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 02:29:44,659 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CHF. settings: {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 02:29:45,062 apscheduler.scheduler _process_jobs WARNING Execution of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='5-59/10'], next run at: 2018-05-20 02:29:45 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:29:45,063 apscheduler.executors.default run_coroutine_job INFO Job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='*/10'], next run at: 2018-05-20 02:29:50 CEST)" executed successfully
2018-05-20 02:29:45,471 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1429; elapsed time: 0:00:00.162582
2018-05-20 02:29:45,471 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1429; elapsed time: 0:00:00.407836
2018-05-20 02:29:45,702 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-17 22:01:46.396592; endDT: 2018-05-18 21:50:46.396592; durationString: 85740 S; elapsedTime: 0:00:02.069771; rows: 1429; rowsTotal: 4595359
2018-05-20 02:29:45,713 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-18 21:50:46.396592
2018-05-20 02:29:45,713 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-19 21:39:46.396592
2018-05-20 02:29:45,714 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-18 21:50:46.396592; endDT: 2018-05-19 21:31:46.396592; durationString: 85260 S
2018-05-20 02:29:46,483 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1421; elapsed time: 0:00:00.119620
2018-05-20 02:29:46,483 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1421; elapsed time: 0:00:00.362771
2018-05-20 02:29:46,591 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-18 21:50:46.396592; endDT: 2018-05-19 21:31:46.396592; durationString: 85260 S; elapsedTime: 0:00:00.877340; rows: 1421; rowsTotal: 4595359
2018-05-20 02:29:46,605 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-19 21:31:46.396592
2018-05-20 02:29:46,606 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-20 21:12:46.396592
2018-05-20 02:29:46,607 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-19 21:31:46.396592; endDT: 2018-05-20 21:07:46.396592; durationString: 84960 S
2018-05-20 02:29:47,497 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1416; elapsed time: 0:00:00.141073
2018-05-20 02:29:47,497 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1416; elapsed time: 0:00:00.361382
2018-05-20 02:29:47,605 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-19 21:31:46.396592; endDT: 2018-05-20 21:07:46.396592; durationString: 84960 S; elapsedTime: 0:00:00.998242; rows: 1416; rowsTotal: 4595359
2018-05-20 02:29:47,620 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: EUR, AUD; elapsedTime: 0:00:03.992344
2018-05-20 02:29:49,007 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:29:49 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:29:50,015 trading.marketDataIB getHistoricalDataBars WARNING Timeout while requesting historical bars for contract Contract(secType='CASH', conId=15016068, symbol='EUR', exchange='IDEALPRO', currency='CAD', localSymbol='EUR.CAD', tradingClass='EUR.CAD')
2018-05-20 02:29:50,015 apscheduler.executors.default run_coroutine_job INFO Job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='30'], next run at: 2018-05-20 02:30:30 CEST)" executed successfully
2018-05-20 02:29:56,004 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:29:56 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:30:00,005 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:30:00 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:30:00,006 apscheduler.executors.default run_coroutine_job INFO Running job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='0'], next run at: 2018-05-20 02:31:00 CEST)" (scheduled at 2018-05-20 02:30:00+02:00)
2018-05-20 02:30:00,006 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO cancelling request for recent historical bars
2018-05-20 02:30:00,006 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: ['MarketData_CASH_EUR_AUD_IDEALPRO', 'MarketData_CASH_EUR_CAD_IDEALPRO']
2018-05-20 02:30:00,006 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO re-initializing the ordered dict of bars
2018-05-20 02:30:00,006 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO renewing request for recent historical bars with new settings
2018-05-20 02:30:00,006 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 02:30:00,008 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 02:30:00,008 asyncio write WARNING socket.send() raised exception.
2018-05-20 02:30:05,302 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, CAD; is going to be performed because earliestDateTime is given by IB: 2005-03-09 04:30:00
2018-05-20 02:30:05,303 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-17 22:01:46.396592
2018-05-20 02:30:05,303 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-18 22:01:46.396592
2018-05-20 02:30:05,303 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-17 22:01:46.396592; endDT: 2018-05-18 21:38:46.396592; durationString: 85020 S
2018-05-20 02:30:05,305 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:29:49 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:30:05,306 apscheduler.scheduler _process_jobs WARNING Execution of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='*/10'], next run at: 2018-05-20 02:29:50 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:30:05,308 apscheduler.scheduler _process_jobs WARNING Execution of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='5-59/10'], next run at: 2018-05-20 02:29:55 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:30:06,177 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1417; elapsed time: 0:00:00.094586
2018-05-20 02:30:06,177 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1417; elapsed time: 0:00:00.360696
2018-05-20 02:30:06,250 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-17 22:01:46.396592; endDT: 2018-05-18 21:38:46.396592; durationString: 85020 S; elapsedTime: 0:00:00.946519; rows: 1417; rowsTotal: 2099307
2018-05-20 02:30:06,261 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-18 21:38:46.396592
2018-05-20 02:30:06,261 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-19 21:15:46.396592
2018-05-20 02:30:06,262 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-18 21:38:46.396592; endDT: 2018-05-19 21:25:46.396592; durationString: 85620 S
2018-05-20 02:30:07,008 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:30:07 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:30:07,100 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1427; elapsed time: 0:00:00.093358
2018-05-20 02:30:07,100 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1427; elapsed time: 0:00:00.329159
2018-05-20 02:30:07,177 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-18 21:38:46.396592; endDT: 2018-05-19 21:25:46.396592; durationString: 85620 S; elapsedTime: 0:00:00.915780; rows: 1427; rowsTotal: 2099307
2018-05-20 02:30:07,178 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:30:07 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:30:07,189 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-19 21:25:46.396592
2018-05-20 02:30:07,190 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-20 21:12:46.396592
2018-05-20 02:30:07,190 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-19 21:25:46.396592; endDT: 2018-05-20 21:16:46.396592; durationString: 85860 S
2018-05-20 02:30:08,063 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1430; elapsed time: 0:00:00.102753
2018-05-20 02:30:08,063 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1430; elapsed time: 0:00:00.421119
2018-05-20 02:30:08,210 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-19 21:25:46.396592; endDT: 2018-05-20 21:16:46.396592; durationString: 85860 S; elapsedTime: 0:00:01.019848; rows: 1430; rowsTotal: 2099307
2018-05-20 02:30:08,221 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: EUR, CAD; elapsedTime: 0:00:02.920973
2018-05-20 02:30:12,694 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, CHF; is going to be performed because earliestDateTime is given by IB: 2005-03-09 04:30:00
2018-05-20 02:30:12,695 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-19 00:30:12.695084
2018-05-20 02:30:12,695 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-20 00:30:12.695084
2018-05-20 02:30:12,696 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CHF; startDT: 2018-05-19 00:30:12.695084; endDT: 2018-05-20 00:23:12.695084; durationString: 85980 S
2018-05-20 02:30:12,697 apscheduler.scheduler _process_jobs WARNING Execution of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='*/10'], next run at: 2018-05-20 02:30:10 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:30:13,570 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CHF_IDEALPRO; nRows: 1433; elapsed time: 0:00:00.121624
2018-05-20 02:30:13,570 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CHF_IDEALPRO; nRows: 1433; elapsed time: 0:00:00.410367
2018-05-20 02:30:13,747 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CHF; startDT: 2018-05-19 00:30:12.695084; endDT: 2018-05-20 00:23:12.695084; durationString: 85980 S; elapsedTime: 0:00:01.051194; rows: 1433; rowsTotal: 4824410
2018-05-20 02:30:13,758 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-20 00:23:12.695084
2018-05-20 02:30:13,758 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-21 00:16:12.695084
2018-05-20 02:30:13,758 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CHF; startDT: 2018-05-20 00:23:12.695084; endDT: 2018-05-20 23:55:12.695084; durationString: 84720 S
2018-05-20 02:30:14,001 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:30:14 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:30:14,002 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:30:14 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:30:14,598 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CHF_IDEALPRO; nRows: 1252; elapsed time: 0:00:00.142604
2018-05-20 02:30:14,598 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CHF_IDEALPRO; nRows: 1252; elapsed time: 0:00:00.441010
2018-05-20 02:30:14,707 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CHF; startDT: 2018-05-20 00:23:12.695084; endDT: 2018-05-20 23:55:12.695084; durationString: 84720 S; elapsedTime: 0:00:00.948837; rows: 1252; rowsTotal: 4824410
2018-05-20 02:30:14,719 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: EUR, CHF; elapsedTime: 0:00:02.026978
2018-05-20 02:30:21,007 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:30:21 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:30:22,562 apscheduler.executors.default run_coroutine_job INFO Job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:30:21 CEST)" executed successfully
2018-05-20 02:30:22,562 apscheduler.executors.default run_coroutine_job WARNING Run time of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='5-59/10'], next run at: 2018-05-20 02:30:15 CEST)" was missed by 0:00:47.562672
2018-05-20 02:30:22,564 apscheduler.executors.default run_coroutine_job INFO Running job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='5-59/10'], next run at: 2018-05-20 02:30:25 CEST)" (scheduled at 2018-05-20 02:30:15+02:00)
2018-05-20 02:30:22,564 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO cancelling request for recent historical bars
2018-05-20 02:30:22,564 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: ['MarketData_CASH_EUR_AUD_IDEALPRO', 'MarketData_CASH_EUR_CAD_IDEALPRO', 'MarketData_CASH_EUR_CHF_IDEALPRO']
2018-05-20 02:30:22,565 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO re-initializing the ordered dict of bars
2018-05-20 02:30:22,565 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO renewing request for recent historical bars with new settings
2018-05-20 02:30:22,565 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:30:22,567 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:30:22,568 ib_insync.wrapper error ERROR Error 366, reqId 69: No historical data query found for ticker id:69
2018-05-20 02:30:22,568 trading.containerClass myErrorCallback INFO reqId: 69, errorCode: 366, errorString: No historical data query found for ticker id:69, localSymbol: None
2018-05-20 02:30:22,569 ib_insync.wrapper error ERROR Error 366, reqId 70: No historical data query found for ticker id:70
2018-05-20 02:30:22,569 trading.containerClass myErrorCallback INFO reqId: 70, errorCode: 366, errorString: No historical data query found for ticker id:70, localSymbol: None
2018-05-20 02:30:22,569 ib_insync.wrapper error ERROR Error 366, reqId 71: No historical data query found for ticker id:71
2018-05-20 02:30:22,569 trading.containerClass myErrorCallback INFO reqId: 71, errorCode: 366, errorString: No historical data query found for ticker id:71, localSymbol: None
2018-05-20 02:30:22,774 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CAD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:30:23,033 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CHF. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:30:23,229 apscheduler.executors.default run_coroutine_job INFO Job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='5-59/10'], next run at: 2018-05-20 02:30:25 CEST)" executed successfully
2018-05-20 02:30:23,230 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:30:28 CEST)" (scheduled at 2018-05-20 02:30:21+02:00)
2018-05-20 02:30:28,007 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:30:28 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:30:30,004 apscheduler.executors.default run_coroutine_job INFO Running job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='30'], next run at: 2018-05-20 02:31:30 CEST)" (scheduled at 2018-05-20 02:30:30+02:00)
2018-05-20 02:30:30,004 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO cancelling request for recent historical bars
2018-05-20 02:30:30,004 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: []
2018-05-20 02:30:30,004 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO re-initializing the ordered dict of bars
2018-05-20 02:30:30,004 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO renewing request for recent historical bars with new settings
2018-05-20 02:30:30,004 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:30:30,006 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:30:30,006 asyncio write WARNING socket.send() raised exception.
2018-05-20 02:30:32,655 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, AUD; is going to be performed because earliestDateTime is given by IB: 2005-09-28 03:30:00
2018-05-20 02:30:32,656 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-17 22:01:46.396592
2018-05-20 02:30:32,657 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-18 22:01:46.396592
2018-05-20 02:30:32,657 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-17 22:01:46.396592; endDT: 2018-05-18 21:48:46.396592; durationString: 85620 S
2018-05-20 02:30:32,658 apscheduler.scheduler _process_jobs WARNING Execution of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='5-59/10'], next run at: 2018-05-20 02:30:25 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:30:32,659 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:30:28 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:30:32,659 apscheduler.scheduler _process_jobs WARNING Execution of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='*/10'], next run at: 2018-05-20 02:30:30 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:30:33,762 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1427; elapsed time: 0:00:00.156109
2018-05-20 02:30:33,762 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1427; elapsed time: 0:00:00.568471
2018-05-20 02:30:33,914 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-17 22:01:46.396592; endDT: 2018-05-18 21:48:46.396592; durationString: 85620 S; elapsedTime: 0:00:01.256590; rows: 1427; rowsTotal: 4595359
2018-05-20 02:30:33,925 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-18 21:48:46.396592
2018-05-20 02:30:33,925 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-19 21:35:46.396592
2018-05-20 02:30:33,925 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-18 21:48:46.396592; endDT: 2018-05-19 21:30:46.396592; durationString: 85320 S
2018-05-20 02:30:34,684 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1422; elapsed time: 0:00:00.113939
2018-05-20 02:30:34,684 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1422; elapsed time: 0:00:00.350261
2018-05-20 02:30:34,781 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-18 21:48:46.396592; endDT: 2018-05-19 21:30:46.396592; durationString: 85320 S; elapsedTime: 0:00:00.856039; rows: 1422; rowsTotal: 4595359
2018-05-20 02:30:34,792 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-19 21:30:46.396592
2018-05-20 02:30:34,792 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-20 21:12:46.396592
2018-05-20 02:30:34,792 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-19 21:30:46.396592; endDT: 2018-05-20 21:04:46.396592; durationString: 84840 S
2018-05-20 02:30:35,003 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:30:35 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:30:35,004 apscheduler.scheduler _process_jobs WARNING Execution of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='5-59/10'], next run at: 2018-05-20 02:30:35 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:30:35,006 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:30:35 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:30:35,537 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1414; elapsed time: 0:00:00.116335
2018-05-20 02:30:35,537 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1414; elapsed time: 0:00:00.334529
2018-05-20 02:30:35,647 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-19 21:30:46.396592; endDT: 2018-05-20 21:04:46.396592; durationString: 84840 S; elapsedTime: 0:00:00.854758; rows: 1414; rowsTotal: 4595359
2018-05-20 02:30:35,658 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: EUR, AUD; elapsedTime: 0:00:03.004878
2018-05-20 02:30:40,013 trading.marketDataIB getHistoricalDataBars WARNING Timeout while requesting historical bars for contract Contract(secType='CASH', conId=15016065, symbol='EUR', exchange='IDEALPRO', currency='AUD', localSymbol='EUR.AUD', tradingClass='EUR.AUD')
2018-05-20 02:30:40,014 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CAD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:30:40,015 asyncio write WARNING socket.send() raised exception.
2018-05-20 02:30:42,003 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:30:42 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:30:46,959 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, CAD; is going to be performed because earliestDateTime is given by IB: 2005-03-09 04:30:00
2018-05-20 02:30:46,960 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-17 22:01:46.396592
2018-05-20 02:30:46,960 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-18 22:01:46.396592
2018-05-20 02:30:46,961 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-17 22:01:46.396592; endDT: 2018-05-18 21:36:46.396592; durationString: 84900 S
2018-05-20 02:30:46,962 apscheduler.scheduler _process_jobs WARNING Execution of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='*/10'], next run at: 2018-05-20 02:30:40 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:30:46,963 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:30:42 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:30:46,964 apscheduler.scheduler _process_jobs WARNING Execution of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='5-59/10'], next run at: 2018-05-20 02:30:45 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:30:47,812 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1415; elapsed time: 0:00:00.094163
2018-05-20 02:30:47,812 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1415; elapsed time: 0:00:00.439161
2018-05-20 02:30:48,064 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-17 22:01:46.396592; endDT: 2018-05-18 21:36:46.396592; durationString: 84900 S; elapsedTime: 0:00:01.103517; rows: 1415; rowsTotal: 2099307
2018-05-20 02:30:48,075 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-18 21:36:46.396592
2018-05-20 02:30:48,076 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-19 21:11:46.396592
2018-05-20 02:30:48,076 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-18 21:36:46.396592; endDT: 2018-05-19 21:32:46.396592; durationString: 86160 S
2018-05-20 02:30:48,810 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1436; elapsed time: 0:00:00.095135
2018-05-20 02:30:48,811 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1436; elapsed time: 0:00:00.312575
2018-05-20 02:30:48,887 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-18 21:36:46.396592; endDT: 2018-05-19 21:32:46.396592; durationString: 86160 S; elapsedTime: 0:00:00.811134; rows: 1436; rowsTotal: 2099307
2018-05-20 02:30:48,901 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-19 21:32:46.396592
2018-05-20 02:30:48,902 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-20 21:28:46.396592
2018-05-20 02:30:48,903 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-19 21:32:46.396592; endDT: 2018-05-20 21:32:46.396592; durationString: 86400 S
2018-05-20 02:30:49,004 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:30:49 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:30:49,008 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:30:49 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:30:49,672 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1423; elapsed time: 0:00:00.114243
2018-05-20 02:30:49,672 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1423; elapsed time: 0:00:00.350597
2018-05-20 02:30:49,754 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-19 21:32:46.396592; endDT: 2018-05-20 21:32:46.396592; durationString: 86400 S; elapsedTime: 0:00:00.850675; rows: 1423; rowsTotal: 2099307
2018-05-20 02:30:49,768 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: EUR, CAD; elapsedTime: 0:00:02.811138
2018-05-20 02:30:50,018 trading.marketDataIB getHistoricalDataBars WARNING Timeout while requesting historical bars for contract Contract(secType='CASH', conId=15016068, symbol='EUR', exchange='IDEALPRO', currency='CAD', localSymbol='EUR.CAD', tradingClass='EUR.CAD')
2018-05-20 02:30:50,018 apscheduler.executors.default run_coroutine_job INFO Job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='30'], next run at: 2018-05-20 02:31:30 CEST)" executed successfully
2018-05-20 02:30:56,007 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:30:56 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:30:56,140 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, CHF; is going to be performed because earliestDateTime is given by IB: 2005-03-09 04:30:00
2018-05-20 02:30:56,141 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-19 00:30:56.140707
2018-05-20 02:30:56,142 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-20 00:30:56.140707
2018-05-20 02:30:56,142 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CHF; startDT: 2018-05-19 00:30:56.140707; endDT: 2018-05-20 00:25:56.140707; durationString: 86100 S
2018-05-20 02:30:56,143 apscheduler.scheduler _process_jobs WARNING Execution of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='*/10'], next run at: 2018-05-20 02:30:50 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:30:56,144 apscheduler.scheduler _process_jobs WARNING Execution of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='5-59/10'], next run at: 2018-05-20 02:30:55 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:30:56,144 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:30:56 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:30:57,190 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CHF_IDEALPRO; nRows: 1435; elapsed time: 0:00:00.121811
2018-05-20 02:30:57,190 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CHF_IDEALPRO; nRows: 1435; elapsed time: 0:00:00.626338
2018-05-20 02:30:57,612 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CHF; startDT: 2018-05-19 00:30:56.140707; endDT: 2018-05-20 00:25:56.140707; durationString: 86100 S; elapsedTime: 0:00:01.469108; rows: 1435; rowsTotal: 4824410
2018-05-20 02:30:57,624 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-20 00:25:56.140707
2018-05-20 02:30:57,625 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-21 00:20:56.140707
2018-05-20 02:30:57,626 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CHF; startDT: 2018-05-20 00:25:56.140707; endDT: 2018-05-21 00:12:56.140707; durationString: 85620 S
2018-05-20 02:30:58,354 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CHF_IDEALPRO; nRows: 1250; elapsed time: 0:00:00.127746
2018-05-20 02:30:58,354 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CHF_IDEALPRO; nRows: 1250; elapsed time: 0:00:00.331204
2018-05-20 02:30:58,462 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CHF; startDT: 2018-05-20 00:25:56.140707; endDT: 2018-05-21 00:12:56.140707; durationString: 85620 S; elapsedTime: 0:00:00.835729; rows: 1250; rowsTotal: 4824410
2018-05-20 02:30:58,476 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: EUR, CHF; elapsedTime: 0:00:02.337389
2018-05-20 02:30:58,477 apscheduler.executors.default run_coroutine_job INFO Job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:31:00 CEST)" executed successfully
2018-05-20 02:30:58,478 apscheduler.executors.default run_coroutine_job WARNING Run time of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='*/10'], next run at: 2018-05-20 02:31:00 CEST)" was missed by 0:00:38.477958
2018-05-20 02:31:00,003 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:31:00 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:31:00,004 apscheduler.scheduler _process_jobs WARNING Execution of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='0'], next run at: 2018-05-20 02:31:00 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:31:00,005 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:31:07 CEST)" (scheduled at 2018-05-20 02:31:00+02:00)
2018-05-20 02:31:00,010 trading.marketDataIB getHistoricalDataBars WARNING Timeout while requesting historical bars for contract Contract(secType='CASH', conId=15016065, symbol='EUR', exchange='IDEALPRO', currency='AUD', localSymbol='EUR.AUD', tradingClass='EUR.AUD')
2018-05-20 02:31:00,011 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CAD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:31:00,011 asyncio write WARNING socket.send() raised exception.
2018-05-20 02:31:07,003 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:31:07 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:31:07,843 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, AUD; is going to be performed because earliestDateTime is given by IB: 2005-09-28 03:30:00
2018-05-20 02:31:07,844 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-17 22:01:46.396592
2018-05-20 02:31:07,844 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-18 22:01:46.396592
2018-05-20 02:31:07,844 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-17 22:01:46.396592; endDT: 2018-05-18 21:39:46.396592; durationString: 85080 S
2018-05-20 02:31:07,846 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:31:07 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:31:07,847 apscheduler.executors.default run_coroutine_job INFO Running job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='5-59/10'], next run at: 2018-05-20 02:31:15 CEST)" (scheduled at 2018-05-20 02:31:05+02:00)
2018-05-20 02:31:07,847 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO cancelling request for recent historical bars
2018-05-20 02:31:07,847 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: ['MarketData_CASH_EUR_AUD_IDEALPRO', 'MarketData_CASH_EUR_CAD_IDEALPRO', 'MarketData_CASH_EUR_CHF_IDEALPRO']
2018-05-20 02:31:07,848 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO re-initializing the ordered dict of bars
2018-05-20 02:31:07,848 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO renewing request for recent historical bars with new settings
2018-05-20 02:31:07,848 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:31:07,849 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:31:07,850 ib_insync.wrapper error ERROR Error 366, reqId 79: No historical data query found for ticker id:79
2018-05-20 02:31:07,850 trading.containerClass myErrorCallback INFO reqId: 79, errorCode: 366, errorString: No historical data query found for ticker id:79, localSymbol: None
2018-05-20 02:31:07,850 ib_insync.wrapper error ERROR Error 366, reqId 80: No historical data query found for ticker id:80
2018-05-20 02:31:07,851 trading.containerClass myErrorCallback INFO reqId: 80, errorCode: 366, errorString: No historical data query found for ticker id:80, localSymbol: None
2018-05-20 02:31:07,851 ib_insync.wrapper error ERROR Error 366, reqId 81: No historical data query found for ticker id:81
2018-05-20 02:31:07,851 trading.containerClass myErrorCallback INFO reqId: 81, errorCode: 366, errorString: No historical data query found for ticker id:81, localSymbol: None
2018-05-20 02:31:08,270 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CAD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:31:08,477 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CHF. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:31:08,674 apscheduler.executors.default run_coroutine_job INFO Job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='5-59/10'], next run at: 2018-05-20 02:31:15 CEST)" executed successfully
2018-05-20 02:31:09,054 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1418; elapsed time: 0:00:00.142671
2018-05-20 02:31:09,054 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1418; elapsed time: 0:00:00.379552
2018-05-20 02:31:09,161 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-17 22:01:46.396592; endDT: 2018-05-18 21:39:46.396592; durationString: 85080 S; elapsedTime: 0:00:01.316802; rows: 1418; rowsTotal: 4595359
2018-05-20 02:31:09,172 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-18 21:39:46.396592
2018-05-20 02:31:09,173 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-19 21:17:46.396592
2018-05-20 02:31:09,173 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-18 21:39:46.396592; endDT: 2018-05-19 21:33:46.396592; durationString: 86040 S
2018-05-20 02:31:09,987 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1434; elapsed time: 0:00:00.126794
2018-05-20 02:31:09,987 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1434; elapsed time: 0:00:00.384683
2018-05-20 02:31:10,013 trading.marketDataIB getHistoricalDataBars WARNING Timeout while requesting historical bars for contract Contract(secType='CASH', conId=15016068, symbol='EUR', exchange='IDEALPRO', currency='CAD', localSymbol='EUR.CAD', tradingClass='EUR.CAD')
2018-05-20 02:31:10,013 apscheduler.executors.default run_coroutine_job INFO Job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='0'], next run at: 2018-05-20 02:32:00 CEST)" executed successfully
2018-05-20 02:31:10,179 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-18 21:39:46.396592; endDT: 2018-05-19 21:33:46.396592; durationString: 86040 S; elapsedTime: 0:00:01.005601; rows: 1434; rowsTotal: 4595359
2018-05-20 02:31:10,180 apscheduler.scheduler _process_jobs WARNING Execution of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='*/10'], next run at: 2018-05-20 02:31:10 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:31:10,191 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-19 21:33:46.396592
2018-05-20 02:31:10,191 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-20 21:27:46.396592
2018-05-20 02:31:10,191 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-19 21:33:46.396592; endDT: 2018-05-20 21:24:46.396592; durationString: 85860 S
2018-05-20 02:31:11,171 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1422; elapsed time: 0:00:00.131186
2018-05-20 02:31:11,171 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1422; elapsed time: 0:00:00.581594
2018-05-20 02:31:11,385 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-19 21:33:46.396592; endDT: 2018-05-20 21:24:46.396592; durationString: 85860 S; elapsedTime: 0:00:01.193648; rows: 1422; rowsTotal: 4595359
2018-05-20 02:31:11,399 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: EUR, AUD; elapsedTime: 0:00:03.557954
2018-05-20 02:31:14,004 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:31:14 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:31:21,007 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:31:21 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:31:28,007 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:31:28 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:31:30,004 apscheduler.executors.default run_coroutine_job INFO Running job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='30'], next run at: 2018-05-20 02:32:30 CEST)" (scheduled at 2018-05-20 02:31:30+02:00)
2018-05-20 02:31:30,004 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO cancelling request for recent historical bars
2018-05-20 02:31:30,004 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: ['MarketData_CASH_EUR_AUD_IDEALPRO', 'MarketData_CASH_EUR_CAD_IDEALPRO']
2018-05-20 02:31:30,004 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO re-initializing the ordered dict of bars
2018-05-20 02:31:30,004 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO renewing request for recent historical bars with new settings
2018-05-20 02:31:30,004 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:31:30,005 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:31:30,006 asyncio write WARNING socket.send() raised exception.
2018-05-20 02:31:35,003 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:31:35 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:31:40,012 trading.marketDataIB getHistoricalDataBars WARNING Timeout while requesting historical bars for contract Contract(secType='CASH', conId=15016065, symbol='EUR', exchange='IDEALPRO', currency='AUD', localSymbol='EUR.AUD', tradingClass='EUR.AUD')
2018-05-20 02:31:40,013 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CAD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:31:40,014 asyncio write WARNING socket.send() raised exception.
2018-05-20 02:31:42,003 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:31:42 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:31:49,006 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:31:49 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:31:50,015 trading.marketDataIB getHistoricalDataBars WARNING Timeout while requesting historical bars for contract Contract(secType='CASH', conId=15016068, symbol='EUR', exchange='IDEALPRO', currency='CAD', localSymbol='EUR.CAD', tradingClass='EUR.CAD')
2018-05-20 02:31:50,015 apscheduler.executors.default run_coroutine_job INFO Job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='30'], next run at: 2018-05-20 02:32:30 CEST)" executed successfully
2018-05-20 02:31:50,173 apscheduler.executors.default run_coroutine_job ERROR Job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:31:14 CEST)" raised an exception
Traceback (most recent call last):
  File "/home/bn/anaconda3/envs/trading/lib/python3.6/site-packages/apscheduler/executors/base_py3.py", line 29, in run_coroutine_job
    retval = await job.func(*job.args, **job.kwargs)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 418, in asyncioJobGetHistoricalData
    tStart1 = pd.datetime.now()
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 418, in asyncioJobGetHistoricalData
    tStart1 = pd.datetime.now()
  File "/snap/pycharm-professional/66/helpers/pydev/_pydevd_bundle/pydevd_frame.py", line 620, in trace_dispatch
    self.do_wait_suspend(thread, frame, event, arg)
  File "/snap/pycharm-professional/66/helpers/pydev/_pydevd_bundle/pydevd_frame.py", line 125, in do_wait_suspend
    self._args[0].do_wait_suspend(*args, **kwargs)
  File "/snap/pycharm-professional/66/helpers/pydev/pydevd.py", line 812, in do_wait_suspend
    time.sleep(0.01)
KeyboardInterrupt
2018-05-20 02:31:50,174 apscheduler.executors.default run_coroutine_job WARNING Run time of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='*/10'], next run at: 2018-05-20 02:31:20 CEST)" was missed by 0:00:50.174470
2018-05-20 02:31:50,177 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:31:56 CEST)" (scheduled at 2018-05-20 02:31:49+02:00)
2018-05-20 02:31:50,183 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, AUD; is going to be performed because earliestDateTime is given by IB: 2005-09-28 03:30:00
2018-05-20 02:31:50,184 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-19 00:31:50.183743
2018-05-20 02:31:50,184 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-20 00:31:50.183743
2018-05-20 02:31:50,184 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-19 00:31:50.183743; endDT: 2018-05-20 00:12:50.183743; durationString: 85260 S
2018-05-20 02:31:50,628 ib_insync.client _onSocketDisconnected ERROR Peer closed connection
2018-05-20 02:31:50,628 trading.containerClass myStoppingCallback INFO stopping watchdog callback: Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-20 02:31:50,628 ib_insync.Watchdog stop INFO Stopping
2018-05-20 02:31:50,628 ib_insync.ib disconnect INFO BN added disconnect in ib
2018-05-20 02:31:50,628 ib_insync.IBC terminateAsync INFO Terminating
2018-05-20 02:31:50,629 trading.containerClass myStoppedCallback INFO stopped watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-20 02:31:50,629 ib_insync.Watchdog scheduleRestart INFO Schedule restart in 2s
2018-05-20 02:31:50,629 trading.containerClass myDisconnectedCallback INFO disconnected callback
2018-05-20 02:31:50,629 trading.containerClass myDisconnectedCallback INFO removing jobs from the scheduler
2018-05-20 02:31:50,629 trading.containerClass myDisconnectedCallback INFO scheduler: removing job schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='5-59/10'], next run at: 2018-05-20 02:31:55 CEST)
2018-05-20 02:31:50,629 apscheduler.scheduler remove_job INFO Removed job schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001
2018-05-20 02:31:50,629 trading.containerClass myDisconnectedCallback INFO scheduler: removing job asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:31:56 CEST)
2018-05-20 02:31:50,629 apscheduler.scheduler remove_job INFO Removed job asyncioJobGetHistoricalData_000000
2018-05-20 02:31:50,629 trading.containerClass myDisconnectedCallback INFO scheduler: removing job schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='*/10'], next run at: 2018-05-20 02:32:00 CEST)
2018-05-20 02:31:50,629 apscheduler.scheduler remove_job INFO Removed job schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000
2018-05-20 02:31:50,629 trading.containerClass myDisconnectedCallback INFO removing requests for recent historical bars
2018-05-20 02:31:50,629 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: ['MarketData_CASH_EUR_AUD_IDEALPRO', 'MarketData_CASH_EUR_CAD_IDEALPRO', 'MarketData_CASH_EUR_CHF_IDEALPRO']
2018-05-20 02:31:52,630 trading.containerClass myStartingCallback INFO starting watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-20 02:31:52,630 ib_insync.Watchdog start INFO Starting
2018-05-20 02:31:52,631 ib_insync.IBC startAsync INFO Starting
2018-05-20 02:31:56,007 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:31:56 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:32:00,005 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 02:32:00 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 02:32:00,007 apscheduler.executors.default run_coroutine_job INFO Running job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='0'], next run at: 2018-05-20 02:33:00 CEST)" (scheduled at 2018-05-20 02:32:00+02:00)
2018-05-20 02:32:00,007 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO cancelling request for recent historical bars
2018-05-20 02:32:00,007 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: ['MarketData_CASH_EUR_AUD_IDEALPRO', 'MarketData_CASH_EUR_CAD_IDEALPRO']
2018-05-20 02:32:00,007 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO re-initializing the ordered dict of bars
2018-05-20 02:32:00,007 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO renewing request for recent historical bars with new settings
2018-05-20 02:32:00,008 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 02:32:00,010 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 02:32:00,011 asyncio write WARNING socket.send() raised exception.
2018-05-20 02:32:07,643 ib_insync.client connectAsync INFO Connecting to 127.0.0.1:4002 with clientId 24...
2018-05-20 02:32:07,644 ib_insync.client _onSocketConnected INFO Connected
2018-05-20 02:32:07,672 ib_insync.client _onSocketHasData INFO Logged on to server version 141
2018-05-20 02:32:07,675 ib_insync.client connectAsync INFO API connection ready
2018-05-20 02:32:07,723 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17709995, marketValue=218940.59, averageCost=1.2182257, unrealizedPNL=-7649.39, realizedPNL=0.0, account='DU946735')
2018-05-20 02:32:07,724 ib_insync.wrapper position INFO position: Position(account='DU946735', contract=Contract(secType='CASH', conId=12087792, symbol='EUR', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, avgCost=1.2182257)
2018-05-20 02:32:07,755 ib_insync.ib connectAsync INFO Synchronization complete
2018-05-20 02:32:07,755 trading.containerClass myConnectedCallback INFO connected callback
2018-05-20 02:32:07,755 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:32:07,756 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:32:09,385 ib_insync.wrapper error INFO Warning 2106, reqId -1: HMDS data farm connection is OK:cashhmds
2018-05-20 02:32:09,385 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2106, errorString: HMDS data farm connection is OK:cashhmds, localSymbol: None
2018-05-20 02:32:09,536 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CAD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:32:09,742 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CHF. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:32:09,972 trading.containerClass myConnectedCallback INFO 0: about to add job asyncioJobGetHistoricalData to the scheduler: <apscheduler.schedulers.asyncio.AsyncIOScheduler object at 0x7fa5a9e33cc0>
2018-05-20 02:32:09,973 trading.containerClass addJobToScheduler INFO addJobToScheduler: jobName=asyncioJobGetHistoricalData_000001; args=([<IB connected to 127.0.0.1:4002 clientId=24>, <trading.database.tradingDB object at 0x7fa5ae1c3df0>, [Contract(secType='CASH', conId=15016065, symbol='EUR', exchange='IDEALPRO', currency='AUD', localSymbol='EUR.AUD', tradingClass='EUR.AUD'), Contract(secType='CASH', conId=15016068, symbol='EUR', exchange='IDEALPRO', currency='CAD', localSymbol='EUR.CAD', tradingClass='EUR.CAD'), Contract(secType='CASH', conId=12087817, symbol='EUR', exchange='IDEALPRO', currency='CHF', localSymbol='EUR.CHF', tradingClass='EUR.CHF')], {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'earliestDateTimeUTCNaive': Timestamp('2018-05-17 22:01:46.396592'), 'timeOutTimeHistoricalBars': 1800}], None), kwargs={}
2018-05-20 02:32:09,974 apscheduler.scheduler _real_add_job INFO Added job "asyncioJobGetHistoricalData_000001" to job store "default"
2018-05-20 02:32:09,974 trading.containerClass myConnectedCallback INFO added job asyncioJobGetHistoricalData_000001 to the scheduler: <apscheduler.schedulers.asyncio.AsyncIOScheduler object at 0x7fa5a9e33cc0>
2018-05-20 02:32:09,974 trading.containerClass myConnectedCallback INFO 1: about to add job schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther to the scheduler: <apscheduler.schedulers.asyncio.AsyncIOScheduler object at 0x7fa5a9e33cc0>
2018-05-20 02:32:09,974 trading.containerClass addJobToScheduler INFO addJobToScheduler: jobName=schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001; args=([], None), kwargs={'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 02:32:09,975 apscheduler.scheduler _real_add_job INFO Added job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001" to job store "default"
2018-05-20 02:32:09,975 trading.containerClass myConnectedCallback INFO added job schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 to the scheduler: <apscheduler.schedulers.asyncio.AsyncIOScheduler object at 0x7fa5a9e33cc0>
2018-05-20 02:32:09,975 trading.containerClass myConnectedCallback INFO 2: about to add job schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther to the scheduler: <apscheduler.schedulers.asyncio.AsyncIOScheduler object at 0x7fa5a9e33cc0>
2018-05-20 02:32:09,975 trading.containerClass addJobToScheduler INFO addJobToScheduler: jobName=schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000002; args=([], None), kwargs={'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 02:32:09,976 apscheduler.scheduler _real_add_job INFO Added job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000002" to job store "default"
2018-05-20 02:32:09,976 trading.containerClass myConnectedCallback INFO added job schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000002 to the scheduler: <apscheduler.schedulers.asyncio.AsyncIOScheduler object at 0x7fa5a9e33cc0>
2018-05-20 02:32:09,976 trading.containerClass myStartedCallback INFO started watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB connected to 127.0.0.1:4002 clientId=24>, port=4002, clientId='24', appStartupTime=15)
2018-05-20 02:32:10,000 apscheduler.scheduler _process_jobs WARNING Execution of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='*/10'], next run at: 2018-05-20 02:32:10 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 03:23:43,404 ib_insync.Watchdog start INFO Starting
2018-05-20 03:23:43,406 quamash <module> INFO Using Qt Implementation: PyQt5
2018-05-20 03:23:43,446 ib_insync.IBC startAsync INFO Starting
2018-05-20 03:23:58,456 ib_insync.client connectAsync INFO Connecting to 127.0.0.1:4002 with clientId 24...
2018-05-20 03:23:58,458 ib_insync.client _onSocketConnected INFO Connected
2018-05-20 03:23:58,486 ib_insync.client _onSocketHasData INFO Logged on to server version 141
2018-05-20 03:23:58,535 ib_insync.client connectAsync INFO API connection ready
2018-05-20 03:23:58,604 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17709995, marketValue=218940.59, averageCost=1.2182257, unrealizedPNL=-7649.39, realizedPNL=0.0, account='DU946735')
2018-05-20 03:23:58,604 ib_insync.wrapper position INFO position: Position(account='DU946735', contract=Contract(secType='CASH', conId=12087792, symbol='EUR', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, avgCost=1.2182257)
2018-05-20 03:23:58,632 ib_insync.ib connectAsync INFO Synchronization complete
2018-05-20 03:23:58,756 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() started
2018-05-20 03:23:58,758 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop datetime
2018-05-20 03:23:58,758 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 03:23:58,758 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop close
2018-05-20 03:23:58,759 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() complete
2018-05-20 03:23:58,759 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() started
2018-05-20 03:23:58,759 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop datetime
2018-05-20 03:23:58,759 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 03:23:58,760 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop close
2018-05-20 03:23:58,760 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() complete
2018-05-20 03:23:58,760 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() started
2018-05-20 03:23:58,760 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop datetime
2018-05-20 03:23:58,760 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 03:23:58,761 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop close
2018-05-20 03:23:58,761 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() complete
2018-05-20 03:23:58,761 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() started
2018-05-20 03:23:58,761 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop datetime
2018-05-20 03:23:58,762 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 03:23:58,762 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop close
2018-05-20 03:23:58,762 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() complete
2018-05-20 03:23:58,763 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() started
2018-05-20 03:23:58,763 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop datetime
2018-05-20 03:23:58,763 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 03:23:58,763 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop close
2018-05-20 03:23:58,764 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() complete
2018-05-20 03:23:58,764 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() started
2018-05-20 03:23:58,764 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop datetime
2018-05-20 03:23:58,764 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 03:23:58,765 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop close
2018-05-20 03:23:58,765 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() complete
2018-05-20 03:23:58,765 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() started
2018-05-20 03:23:58,765 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop datetime
2018-05-20 03:23:58,765 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 03:23:58,766 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop close
2018-05-20 03:23:58,766 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() complete
2018-05-20 03:23:58,766 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() started
2018-05-20 03:23:58,766 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop datetime
2018-05-20 03:23:58,767 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 03:23:58,767 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop close
2018-05-20 03:23:58,767 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() complete
2018-05-20 03:23:58,767 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() started
2018-05-20 03:23:58,768 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop datetime
2018-05-20 03:23:58,768 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop diffToNextRowInMinutes
2018-05-20 03:23:58,768 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop close
2018-05-20 03:23:58,769 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() complete
2018-05-20 03:23:58,769 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() started
2018-05-20 03:23:58,769 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop datetime
2018-05-20 03:23:58,769 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop diffToNextRowInMinutes
2018-05-20 03:23:58,770 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop close
2018-05-20 03:23:58,770 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() complete
2018-05-20 03:23:58,770 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() started
2018-05-20 03:23:58,770 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop datetime
2018-05-20 03:23:58,770 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop diffToNextRowInMinutes
2018-05-20 03:23:58,771 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop close
2018-05-20 03:23:58,771 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() complete
2018-05-20 03:23:58,771 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() started
2018-05-20 03:23:58,771 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop datetime
2018-05-20 03:23:58,772 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop diffToNextRowInMinutes
2018-05-20 03:23:58,772 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop close
2018-05-20 03:23:58,772 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() complete
2018-05-20 03:23:58,772 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() started
2018-05-20 03:23:58,773 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop datetime
2018-05-20 03:23:58,773 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop diffToNextRowInMinutes
2018-05-20 03:23:58,773 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop close
2018-05-20 03:23:58,774 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() complete
2018-05-20 03:23:58,774 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() started
2018-05-20 03:23:58,774 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop datetime
2018-05-20 03:23:58,774 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop diffToNextRowInMinutes
2018-05-20 03:23:58,775 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop close
2018-05-20 03:23:58,775 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() complete
2018-05-20 03:23:58,776 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-20 03:23:58,777 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-20 03:23:58,777 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 03:24:01,967 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-20 03:24:01,968 sqlalchemy.engine.base.Engine _execute_context INFO PRAGMA table_info("MarketDataInfoTable")
2018-05-20 03:24:01,968 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 03:24:01,971 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-20 03:24:01,972 sqlalchemy.engine.base.Engine _execute_context INFO SELECT count(*) AS count_1 
FROM (SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable") AS anon_1
2018-05-20 03:24:01,972 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 03:24:01,975 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName", "MarketDataInfoTable".description, "MarketDataInfoTable"."conId", "MarketDataInfoTable".symbol, "MarketDataInfoTable".currency, "MarketDataInfoTable".exchange, "MarketDataInfoTable".category, "MarketDataInfoTable"."secType", "MarketDataInfoTable"."earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-20 03:24:01,975 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 03:24:01,978 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-20 03:24:01,978 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 03:24:02,601 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-20 03:24:02,624 apscheduler.scheduler start INFO Scheduler started
2018-05-20 03:24:02,625 root runProg INFO Now updating the settings for the request of recent historical bars
2018-05-20 03:24:02,625 root runProg INFO Now requesting initial recent historical bars
2018-05-20 03:24:02,625 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 03:24:02,627 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 03:24:04,290 ib_insync.wrapper error INFO Warning 2106, reqId -1: HMDS data farm connection is OK:cashhmds
2018-05-20 03:24:04,290 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2106, errorString: HMDS data farm connection is OK:cashhmds, localSymbol: None
2018-05-20 03:24:04,435 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CAD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 03:24:04,653 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CHF. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 03:24:04,873 trading.containerClass addJobToScheduler INFO addJobToScheduler: jobName=asyncioJobGetHistoricalData_000000; args=([<IB connected to 127.0.0.1:4002 clientId=24>, <trading.database.tradingDB object at 0x7f4ce16acd58>, [Contract(secType='CASH', conId=15016065, symbol='EUR', exchange='IDEALPRO', currency='AUD', localSymbol='EUR.AUD', tradingClass='EUR.AUD'), Contract(secType='CASH', conId=15016068, symbol='EUR', exchange='IDEALPRO', currency='CAD', localSymbol='EUR.CAD', tradingClass='EUR.CAD'), Contract(secType='CASH', conId=12087817, symbol='EUR', exchange='IDEALPRO', currency='CHF', localSymbol='EUR.CHF', tradingClass='EUR.CHF')], {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'earliestDateTimeUTCNaive': Timestamp('2018-05-15 03:48:04.871039'), 'timeOutTimeHistoricalBars': 1800}], None), kwargs={}
2018-05-20 03:24:04,952 apscheduler.scheduler _real_add_job INFO Added job "asyncioJobGetHistoricalData_000000" to job store "default"
2018-05-20 03:24:04,952 trading.containerClass addJobToScheduler INFO addJobToScheduler: jobName=schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000; args=([], None), kwargs={'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 03:24:04,953 apscheduler.scheduler _real_add_job INFO Added job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000" to job store "default"
2018-05-20 03:24:04,953 trading.containerClass addJobToScheduler INFO addJobToScheduler: jobName=schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001; args=([], None), kwargs={'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 03:24:04,953 apscheduler.scheduler _real_add_job INFO Added job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001" to job store "default"
2018-05-20 03:24:05,001 apscheduler.executors.default run_coroutine_job INFO Running job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='5-59/10'], next run at: 2018-05-20 03:24:15 CEST)" (scheduled at 2018-05-20 03:24:05+02:00)
2018-05-20 03:24:05,001 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO cancelling request for recent historical bars
2018-05-20 03:24:05,001 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: ['MarketData_CASH_EUR_AUD_IDEALPRO', 'MarketData_CASH_EUR_CAD_IDEALPRO', 'MarketData_CASH_EUR_CHF_IDEALPRO']
2018-05-20 03:24:05,001 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO re-initializing the ordered dict of bars
2018-05-20 03:24:05,001 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO renewing request for recent historical bars with new settings
2018-05-20 03:24:05,002 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 03:24:05,003 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 03:24:05,013 ib_insync.wrapper error ERROR Error 366, reqId 31: No historical data query found for ticker id:31
2018-05-20 03:24:05,014 trading.containerClass myErrorCallback INFO reqId: 31, errorCode: 366, errorString: No historical data query found for ticker id:31, localSymbol: None
2018-05-20 03:24:05,014 ib_insync.wrapper error ERROR Error 366, reqId 32: No historical data query found for ticker id:32
2018-05-20 03:24:05,014 trading.containerClass myErrorCallback INFO reqId: 32, errorCode: 366, errorString: No historical data query found for ticker id:32, localSymbol: None
2018-05-20 03:24:05,014 ib_insync.wrapper error ERROR Error 366, reqId 33: No historical data query found for ticker id:33
2018-05-20 03:24:05,014 trading.containerClass myErrorCallback INFO reqId: 33, errorCode: 366, errorString: No historical data query found for ticker id:33, localSymbol: None
2018-05-20 03:24:05,221 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CAD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 03:24:05,428 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CHF. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 03:24:05,633 apscheduler.executors.default run_coroutine_job INFO Job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='5-59/10'], next run at: 2018-05-20 03:24:15 CEST)" executed successfully
2018-05-20 03:24:07,004 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 03:24:14 CEST)" (scheduled at 2018-05-20 03:24:07+02:00)
2018-05-20 03:24:40,679 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, AUD; is going to be performed because earliestDateTime is given by IB: 2005-09-28 03:30:00
2018-05-20 03:24:55,376 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-18 03:19:10.938845
2018-05-20 03:25:27,983 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-19 03:19:10.938845
2018-05-20 03:25:27,984 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-18 03:19:10.938845; endDT: 2018-05-19 03:18:10.938845; durationString: 86340 S
2018-05-20 03:25:27,985 trading.containerClass myTimeoutCallback INFO timeout callback 82.359172
2018-05-20 03:25:27,989 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 03:24:14 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 03:25:27,992 trading.containerClass mySoftTimeoutCallback INFO soft time out watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB connected to 127.0.0.1:4002 clientId=24>, port=4002, clientId='24', appStartupTime=15)
2018-05-20 03:25:27,992 apscheduler.executors.default run_coroutine_job INFO Running job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='*/10'], next run at: 2018-05-20 03:25:30 CEST)" (scheduled at 2018-05-20 03:25:20+02:00)
2018-05-20 03:25:27,992 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO cancelling request for recent historical bars
2018-05-20 03:25:27,992 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: ['MarketData_CASH_EUR_AUD_IDEALPRO', 'MarketData_CASH_EUR_CAD_IDEALPRO', 'MarketData_CASH_EUR_CHF_IDEALPRO']
2018-05-20 03:25:27,993 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO re-initializing the ordered dict of bars
2018-05-20 03:25:27,993 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO renewing request for recent historical bars with new settings
2018-05-20 03:25:27,993 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 03:25:27,994 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 03:25:27,995 ib_insync.wrapper error ERROR Error 366, reqId 34: No historical data query found for ticker id:34
2018-05-20 03:25:27,995 trading.containerClass myErrorCallback INFO reqId: 34, errorCode: 366, errorString: No historical data query found for ticker id:34, localSymbol: None
2018-05-20 03:25:27,995 ib_insync.wrapper error ERROR Error 366, reqId 35: No historical data query found for ticker id:35
2018-05-20 03:25:27,996 trading.containerClass myErrorCallback INFO reqId: 35, errorCode: 366, errorString: No historical data query found for ticker id:35, localSymbol: None
2018-05-20 03:25:27,996 ib_insync.wrapper error ERROR Error 366, reqId 36: No historical data query found for ticker id:36
2018-05-20 03:25:27,996 trading.containerClass myErrorCallback INFO reqId: 36, errorCode: 366, errorString: No historical data query found for ticker id:36, localSymbol: None
2018-05-20 03:25:28,008 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 03:25:28 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 03:25:28,659 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CAD. settings: {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 03:25:29,094 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CHF. settings: {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 60, 'maximumBarsLengthFactor': 2}
2018-05-20 03:25:29,540 apscheduler.executors.default run_coroutine_job INFO Job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='*/10'], next run at: 2018-05-20 03:25:30 CEST)" executed successfully
2018-05-20 03:25:29,540 apscheduler.executors.default run_coroutine_job INFO Running job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='5-59/10'], next run at: 2018-05-20 03:25:35 CEST)" (scheduled at 2018-05-20 03:25:25+02:00)
2018-05-20 03:25:29,541 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO cancelling request for recent historical bars
2018-05-20 03:25:29,541 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: ['MarketData_CASH_EUR_AUD_IDEALPRO', 'MarketData_CASH_EUR_CAD_IDEALPRO', 'MarketData_CASH_EUR_CHF_IDEALPRO']
2018-05-20 03:25:29,541 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO re-initializing the ordered dict of bars
2018-05-20 03:25:29,542 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO renewing request for recent historical bars with new settings
2018-05-20 03:25:29,542 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 03:25:29,544 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 03:25:29,544 ib_insync.wrapper error ERROR Error 366, reqId 39: No historical data query found for ticker id:39
2018-05-20 03:25:29,545 trading.containerClass myErrorCallback INFO reqId: 39, errorCode: 366, errorString: No historical data query found for ticker id:39, localSymbol: None
2018-05-20 03:25:29,545 ib_insync.wrapper error ERROR Error 366, reqId 40: No historical data query found for ticker id:40
2018-05-20 03:25:29,545 trading.containerClass myErrorCallback INFO reqId: 40, errorCode: 366, errorString: No historical data query found for ticker id:40, localSymbol: None
2018-05-20 03:25:29,545 ib_insync.wrapper error ERROR Error 366, reqId 41: No historical data query found for ticker id:41
2018-05-20 03:25:29,545 trading.containerClass myErrorCallback INFO reqId: 41, errorCode: 366, errorString: No historical data query found for ticker id:41, localSymbol: None
2018-05-20 03:25:29,743 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CAD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 03:25:29,944 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CHF. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 03:25:30,005 apscheduler.scheduler _process_jobs WARNING Execution of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='*/10'], next run at: 2018-05-20 03:25:30 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 03:25:30,144 apscheduler.executors.default run_coroutine_job INFO Job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='5-59/10'], next run at: 2018-05-20 03:25:35 CEST)" executed successfully
2018-05-20 03:25:30,739 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1439; elapsed time: 0:00:00.120924
2018-05-20 03:25:30,739 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1439; elapsed time: 0:00:00.594907
2018-05-20 03:25:30,861 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-18 03:19:10.938845; endDT: 2018-05-19 03:18:10.938845; durationString: 86340 S; elapsedTime: 0:00:02.877440; rows: 1439; rowsTotal: 4595359
2018-05-20 03:25:30,873 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-19 03:18:10.938845
2018-05-20 03:25:30,873 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-20 03:17:10.938845
2018-05-20 03:25:30,873 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-19 03:18:10.938845; endDT: 2018-05-20 02:55:10.938845; durationString: 85020 S
2018-05-20 03:25:31,674 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1417; elapsed time: 0:00:00.121190
2018-05-20 03:25:31,674 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1417; elapsed time: 0:00:00.349088
2018-05-20 03:25:31,879 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-19 03:18:10.938845; endDT: 2018-05-20 02:55:10.938845; durationString: 85020 S; elapsedTime: 0:00:01.005813; rows: 1417; rowsTotal: 4595359
2018-05-20 03:25:31,890 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: EUR, AUD; elapsedTime: 0:01:13.336390
2018-05-20 03:25:36,816 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, CAD; is going to be performed because earliestDateTime is given by IB: 2005-03-09 04:30:00
2018-05-20 03:25:36,817 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-15 03:48:04.871039
2018-05-20 03:25:36,818 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-16 03:48:04.871039
2018-05-20 03:25:36,818 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-15 03:48:04.871039; endDT: 2018-05-16 03:28:04.871039; durationString: 85200 S
2018-05-20 03:25:36,819 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 03:25:35 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 03:25:36,820 apscheduler.scheduler _process_jobs WARNING Execution of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='5-59/10'], next run at: 2018-05-20 03:25:35 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 03:25:37,607 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1421; elapsed time: 0:00:00.127866
2018-05-20 03:25:37,607 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1421; elapsed time: 0:00:00.366638
2018-05-20 03:25:37,680 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-15 03:48:04.871039; endDT: 2018-05-16 03:28:04.871039; durationString: 85200 S; elapsedTime: 0:00:00.862664; rows: 1421; rowsTotal: 2099307
2018-05-20 03:25:37,692 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-16 03:28:04.871039
2018-05-20 03:25:37,692 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-17 03:08:04.871039
2018-05-20 03:25:37,692 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-16 03:28:04.871039; endDT: 2018-05-17 03:17:04.871039; durationString: 85740 S
2018-05-20 03:25:38,455 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1430; elapsed time: 0:00:00.118992
2018-05-20 03:25:38,455 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1430; elapsed time: 0:00:00.339901
2018-05-20 03:25:38,540 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-16 03:28:04.871039; endDT: 2018-05-17 03:17:04.871039; durationString: 85740 S; elapsedTime: 0:00:00.848269; rows: 1430; rowsTotal: 2099307
2018-05-20 03:25:38,551 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-17 03:17:04.871039
2018-05-20 03:25:38,552 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-18 03:06:04.871039
2018-05-20 03:25:38,552 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-17 03:17:04.871039; endDT: 2018-05-18 03:02:04.871039; durationString: 85500 S
2018-05-20 03:25:39,302 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1426; elapsed time: 0:00:00.118021
2018-05-20 03:25:39,302 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1426; elapsed time: 0:00:00.336234
2018-05-20 03:25:39,376 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-17 03:17:04.871039; endDT: 2018-05-18 03:02:04.871039; durationString: 85500 S; elapsedTime: 0:00:00.823941; rows: 1426; rowsTotal: 2099307
2018-05-20 03:25:39,387 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-18 03:02:04.871039
2018-05-20 03:25:39,387 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-19 02:47:04.871039
2018-05-20 03:25:39,387 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-18 03:02:04.871039; endDT: 2018-05-19 02:53:04.871039; durationString: 85860 S
2018-05-20 03:25:40,219 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1431; elapsed time: 0:00:00.093444
2018-05-20 03:25:40,219 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1431; elapsed time: 0:00:00.351142
2018-05-20 03:25:40,328 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-18 03:02:04.871039; endDT: 2018-05-19 02:53:04.871039; durationString: 85860 S; elapsedTime: 0:00:00.940324; rows: 1431; rowsTotal: 2099307
2018-05-20 03:25:40,328 apscheduler.scheduler _process_jobs WARNING Execution of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='*/10'], next run at: 2018-05-20 03:25:40 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 03:25:40,340 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-19 02:53:04.871039
2018-05-20 03:25:40,340 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-20 02:44:04.871039
2018-05-20 03:25:40,340 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CAD; startDT: 2018-05-19 02:53:04.871039; endDT: 2018-05-20 02:47:04.871039; durationString: 86040 S
2018-05-20 03:25:41,157 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1434; elapsed time: 0:00:00.094337
2018-05-20 03:25:41,157 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CAD_IDEALPRO; nRows: 1434; elapsed time: 0:00:00.389027
2018-05-20 03:25:41,411 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CAD; startDT: 2018-05-19 02:53:04.871039; endDT: 2018-05-20 02:47:04.871039; durationString: 86040 S; elapsedTime: 0:00:01.070664; rows: 1434; rowsTotal: 2099307
2018-05-20 03:25:41,423 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: EUR, CAD; elapsedTime: 0:00:04.608523
2018-05-20 03:25:45,774 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, CHF; is going to be performed because earliestDateTime is given by IB: 2005-03-09 04:30:00
2018-05-20 03:25:45,775 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-15 03:48:04.871039
2018-05-20 03:25:45,775 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-16 03:48:04.871039
2018-05-20 03:25:45,776 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CHF; startDT: 2018-05-15 03:48:04.871039; endDT: 2018-05-16 03:42:04.871039; durationString: 86040 S
2018-05-20 03:25:45,777 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 03:25:42 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 03:25:45,777 apscheduler.scheduler _process_jobs WARNING Execution of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='5-59/10'], next run at: 2018-05-20 03:25:45 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 03:25:46,766 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CHF_IDEALPRO; nRows: 1435; elapsed time: 0:00:00.291193
2018-05-20 03:25:46,766 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CHF_IDEALPRO; nRows: 1435; elapsed time: 0:00:00.574441
2018-05-20 03:25:46,939 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CHF; startDT: 2018-05-15 03:48:04.871039; endDT: 2018-05-16 03:42:04.871039; durationString: 86040 S; elapsedTime: 0:00:01.163009; rows: 1435; rowsTotal: 4824410
2018-05-20 03:25:46,950 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-16 03:42:04.871039
2018-05-20 03:25:46,950 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-17 03:36:04.871039
2018-05-20 03:25:46,950 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CHF; startDT: 2018-05-16 03:42:04.871039; endDT: 2018-05-17 03:32:04.871039; durationString: 85800 S
2018-05-20 03:25:47,768 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CHF_IDEALPRO; nRows: 1431; elapsed time: 0:00:00.143173
2018-05-20 03:25:47,768 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CHF_IDEALPRO; nRows: 1431; elapsed time: 0:00:00.402022
2018-05-20 03:25:47,864 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CHF; startDT: 2018-05-16 03:42:04.871039; endDT: 2018-05-17 03:32:04.871039; durationString: 85800 S; elapsedTime: 0:00:00.913679; rows: 1431; rowsTotal: 4824410
2018-05-20 03:25:47,875 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-17 03:32:04.871039
2018-05-20 03:25:47,875 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-18 03:22:04.871039
2018-05-20 03:25:47,875 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CHF; startDT: 2018-05-17 03:32:04.871039; endDT: 2018-05-18 03:20:04.871039; durationString: 85680 S
2018-05-20 03:25:48,742 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CHF_IDEALPRO; nRows: 1429; elapsed time: 0:00:00.137733
2018-05-20 03:25:48,742 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CHF_IDEALPRO; nRows: 1429; elapsed time: 0:00:00.430950
2018-05-20 03:25:48,865 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CHF; startDT: 2018-05-17 03:32:04.871039; endDT: 2018-05-18 03:20:04.871039; durationString: 85680 S; elapsedTime: 0:00:00.989221; rows: 1429; rowsTotal: 4824410
2018-05-20 03:25:48,876 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-18 03:20:04.871039
2018-05-20 03:25:48,876 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-19 03:08:04.871039
2018-05-20 03:25:48,876 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CHF; startDT: 2018-05-18 03:20:04.871039; endDT: 2018-05-19 03:12:04.871039; durationString: 85920 S
2018-05-20 03:25:49,001 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 03:25:49 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 03:25:49,752 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CHF_IDEALPRO; nRows: 1432; elapsed time: 0:00:00.176202
2018-05-20 03:25:49,752 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CHF_IDEALPRO; nRows: 1432; elapsed time: 0:00:00.426401
2018-05-20 03:25:49,988 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CHF; startDT: 2018-05-18 03:20:04.871039; endDT: 2018-05-19 03:12:04.871039; durationString: 85920 S; elapsedTime: 0:00:01.111385; rows: 1432; rowsTotal: 4824410
2018-05-20 03:25:49,999 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-19 03:12:04.871039
2018-05-20 03:25:49,999 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-20 03:04:04.871039
2018-05-20 03:25:49,999 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, CHF; startDT: 2018-05-19 03:12:04.871039; endDT: 2018-05-20 02:44:04.871039; durationString: 84720 S
2018-05-20 03:25:50,001 apscheduler.scheduler _process_jobs WARNING Execution of job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='*/10'], next run at: 2018-05-20 03:25:50 CEST)" skipped: maximum number of running instances reached (1)
2018-05-20 03:25:51,095 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_CHF_IDEALPRO; nRows: 1412; elapsed time: 0:00:00.166668
2018-05-20 03:25:51,095 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_CHF_IDEALPRO; nRows: 1412; elapsed time: 0:00:00.640575
2018-05-20 03:25:51,287 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, CHF; startDT: 2018-05-19 03:12:04.871039; endDT: 2018-05-20 02:44:04.871039; durationString: 84720 S; elapsedTime: 0:00:01.287805; rows: 1412; rowsTotal: 4824410
2018-05-20 03:25:51,298 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: EUR, CHF; elapsedTime: 0:00:05.526164
2018-05-20 03:25:51,299 apscheduler.executors.default run_coroutine_job INFO Job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 03:25:56 CEST)" executed successfully
2018-05-20 03:25:55,005 apscheduler.executors.default run_coroutine_job INFO Running job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='5-59/10'], next run at: 2018-05-20 03:26:05 CEST)" (scheduled at 2018-05-20 03:25:55+02:00)
2018-05-20 03:25:55,005 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO cancelling request for recent historical bars
2018-05-20 03:25:55,005 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: ['MarketData_CASH_EUR_AUD_IDEALPRO', 'MarketData_CASH_EUR_CAD_IDEALPRO', 'MarketData_CASH_EUR_CHF_IDEALPRO']
2018-05-20 03:25:55,006 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO re-initializing the ordered dict of bars
2018-05-20 03:25:55,006 trading.containerClass schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther INFO renewing request for recent historical bars with new settings
2018-05-20 03:25:55,006 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 03:25:55,007 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 03:25:55,008 ib_insync.wrapper error ERROR Error 366, reqId 42: No historical data query found for ticker id:42
2018-05-20 03:25:55,008 trading.containerClass myErrorCallback INFO reqId: 42, errorCode: 366, errorString: No historical data query found for ticker id:42, localSymbol: None
2018-05-20 03:25:55,008 ib_insync.wrapper error ERROR Error 366, reqId 43: No historical data query found for ticker id:43
2018-05-20 03:25:55,008 trading.containerClass myErrorCallback INFO reqId: 43, errorCode: 366, errorString: No historical data query found for ticker id:43, localSymbol: None
2018-05-20 03:25:55,009 ib_insync.wrapper error ERROR Error 366, reqId 44: No historical data query found for ticker id:44
2018-05-20 03:25:55,009 trading.containerClass myErrorCallback INFO reqId: 44, errorCode: 366, errorString: No historical data query found for ticker id:44, localSymbol: None
2018-05-20 03:25:55,217 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CAD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 03:25:55,431 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CHF. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 03:25:55,630 apscheduler.executors.default run_coroutine_job INFO Job "schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='5-59/10'], next run at: 2018-05-20 03:26:05 CEST)" executed successfully
2018-05-20 03:25:56,002 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 03:26:00 CEST)" (scheduled at 2018-05-20 03:25:56+02:00)
2018-05-20 03:28:10,650 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, AUD; is going to be performed because earliestDateTime is given by IB: 2005-09-28 03:30:00
2018-05-20 03:28:45,779 apscheduler.executors.default run_coroutine_job ERROR Job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 03:26:00 CEST)" raised an exception
Traceback (most recent call last):
  File "/home/bn/anaconda3/envs/trading/lib/python3.6/site-packages/apscheduler/executors/base_py3.py", line 29, in run_coroutine_job
    retval = await job.func(*job.args, **job.kwargs)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 467, in asyncioJobGetHistoricalData
    if not pd.isnull(startDateTimeOnDiskUTCNaiveFloor):
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 467, in asyncioJobGetHistoricalData
    if not pd.isnull(startDateTimeOnDiskUTCNaiveFloor):
  File "/snap/pycharm-professional/66/helpers/pydev/_pydevd_bundle/pydevd_frame.py", line 714, in trace_dispatch
    self.do_wait_suspend(thread, frame, event, arg)
  File "/snap/pycharm-professional/66/helpers/pydev/_pydevd_bundle/pydevd_frame.py", line 125, in do_wait_suspend
    self._args[0].do_wait_suspend(*args, **kwargs)
  File "/snap/pycharm-professional/66/helpers/pydev/pydevd.py", line 812, in do_wait_suspend
    time.sleep(0.01)
KeyboardInterrupt
2018-05-20 03:28:45,790 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 03:28:49 CEST)" (scheduled at 2018-05-20 03:28:42+02:00)
2018-05-20 03:28:45,797 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, AUD; is going to be performed because earliestDateTime is given by IB: 2005-09-28 03:30:00
2018-05-20 03:28:45,798 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-15 03:48:04.871039
2018-05-20 03:28:45,799 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-16 03:48:04.871039
2018-05-20 03:28:45,799 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-15 03:48:04.871039; endDT: 2018-05-16 03:33:04.871039; durationString: 85500 S
2018-05-20 03:28:46,176 ib_insync.client _onSocketDisconnected ERROR Peer closed connection
2018-05-20 03:28:46,177 trading.containerClass myStoppingCallback INFO stopping watchdog callback: Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-20 03:28:46,177 ib_insync.Watchdog stop INFO Stopping
2018-05-20 03:28:46,177 ib_insync.ib disconnect INFO BN added disconnect in ib
2018-05-20 03:28:46,177 ib_insync.IBC terminateAsync INFO Terminating
2018-05-20 03:28:46,177 trading.containerClass myStoppedCallback INFO stopped watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-20 03:28:46,177 ib_insync.Watchdog scheduleRestart INFO Schedule restart in 2s
2018-05-20 03:28:46,177 trading.containerClass myDisconnectedCallback INFO disconnected callback
2018-05-20 03:28:46,178 trading.containerClass myDisconnectedCallback INFO removing jobs from the scheduler
2018-05-20 03:28:46,178 trading.containerClass myDisconnectedCallback INFO scheduler: removing job asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/7'], next run at: 2018-05-20 03:28:49 CEST)
2018-05-20 03:28:46,178 apscheduler.scheduler remove_job INFO Removed job asyncioJobGetHistoricalData_000000
2018-05-20 03:28:46,178 trading.containerClass myDisconnectedCallback INFO scheduler: removing job schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000 (trigger: cron[hour='*', minute='*', second='*/10'], next run at: 2018-05-20 03:28:50 CEST)
2018-05-20 03:28:46,178 apscheduler.scheduler remove_job INFO Removed job schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000000
2018-05-20 03:28:46,178 trading.containerClass myDisconnectedCallback INFO scheduler: removing job schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001 (trigger: cron[hour='*', minute='*', second='5-59/10'], next run at: 2018-05-20 03:28:55 CEST)
2018-05-20 03:28:46,178 apscheduler.scheduler remove_job INFO Removed job schedulerJobSwitchRequestForRecentHistoricalDataFromOneSettingToOther_000001
2018-05-20 03:28:46,178 trading.containerClass myDisconnectedCallback INFO removing requests for recent historical bars
2018-05-20 03:28:46,178 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: ['MarketData_CASH_EUR_AUD_IDEALPRO', 'MarketData_CASH_EUR_CAD_IDEALPRO', 'MarketData_CASH_EUR_CHF_IDEALPRO']
2018-05-20 03:28:48,180 trading.containerClass myStartingCallback INFO starting watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-20 03:28:48,180 ib_insync.Watchdog start INFO Starting
2018-05-20 03:28:48,180 ib_insync.IBC startAsync INFO Starting
2018-05-20 03:51:24,943 ib_insync.Watchdog start INFO Starting
2018-05-20 03:51:24,944 quamash <module> INFO Using Qt Implementation: PyQt5
2018-05-20 03:51:24,968 ib_insync.IBC startAsync INFO Starting
2018-05-20 03:51:39,981 ib_insync.client connectAsync INFO Connecting to 127.0.0.1:4002 with clientId 24...
2018-05-20 03:51:39,983 ib_insync.client _onSocketConnected INFO Connected
2018-05-20 03:51:40,017 ib_insync.client _onSocketHasData INFO Logged on to server version 141
2018-05-20 03:51:40,063 ib_insync.client connectAsync INFO API connection ready
2018-05-20 03:51:40,123 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17709995, marketValue=218940.59, averageCost=1.2182257, unrealizedPNL=-7649.39, realizedPNL=0.0, account='DU946735')
2018-05-20 03:51:40,123 ib_insync.wrapper position INFO position: Position(account='DU946735', contract=Contract(secType='CASH', conId=12087792, symbol='EUR', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, avgCost=1.2182257)
2018-05-20 03:51:40,138 ib_insync.ib connectAsync INFO Synchronization complete
2018-05-20 03:51:40,214 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() started
2018-05-20 03:51:40,215 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop datetime
2018-05-20 03:51:40,215 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 03:51:40,215 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop close
2018-05-20 03:51:40,215 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() complete
2018-05-20 03:51:40,215 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() started
2018-05-20 03:51:40,215 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop datetime
2018-05-20 03:51:40,216 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 03:51:40,216 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop close
2018-05-20 03:51:40,216 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() complete
2018-05-20 03:51:40,216 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() started
2018-05-20 03:51:40,216 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop datetime
2018-05-20 03:51:40,216 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 03:51:40,217 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop close
2018-05-20 03:51:40,217 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() complete
2018-05-20 03:51:40,217 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() started
2018-05-20 03:51:40,217 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop datetime
2018-05-20 03:51:40,217 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 03:51:40,217 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop close
2018-05-20 03:51:40,218 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() complete
2018-05-20 03:51:40,218 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() started
2018-05-20 03:51:40,218 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop datetime
2018-05-20 03:51:40,218 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 03:51:40,218 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop close
2018-05-20 03:51:40,218 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() complete
2018-05-20 03:51:40,218 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() started
2018-05-20 03:51:40,218 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop datetime
2018-05-20 03:51:40,219 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 03:51:40,219 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop close
2018-05-20 03:51:40,219 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() complete
2018-05-20 03:51:40,219 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() started
2018-05-20 03:51:40,219 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop datetime
2018-05-20 03:51:40,219 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 03:51:40,220 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop close
2018-05-20 03:51:40,220 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() complete
2018-05-20 03:51:40,220 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() started
2018-05-20 03:51:40,220 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop datetime
2018-05-20 03:51:40,220 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 03:51:40,220 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop close
2018-05-20 03:51:40,220 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() complete
2018-05-20 03:51:40,221 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() started
2018-05-20 03:51:40,221 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop datetime
2018-05-20 03:51:40,221 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop diffToNextRowInMinutes
2018-05-20 03:51:40,221 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop close
2018-05-20 03:51:40,221 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() complete
2018-05-20 03:51:40,221 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() started
2018-05-20 03:51:40,221 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop datetime
2018-05-20 03:51:40,222 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop diffToNextRowInMinutes
2018-05-20 03:51:40,222 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop close
2018-05-20 03:51:40,222 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() complete
2018-05-20 03:51:40,222 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() started
2018-05-20 03:51:40,222 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop datetime
2018-05-20 03:51:40,222 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop diffToNextRowInMinutes
2018-05-20 03:51:40,223 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop close
2018-05-20 03:51:40,223 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() complete
2018-05-20 03:51:40,223 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() started
2018-05-20 03:51:40,223 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop datetime
2018-05-20 03:51:40,223 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop diffToNextRowInMinutes
2018-05-20 03:51:40,223 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop close
2018-05-20 03:51:40,224 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() complete
2018-05-20 03:51:40,224 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() started
2018-05-20 03:51:40,224 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop datetime
2018-05-20 03:51:40,224 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop diffToNextRowInMinutes
2018-05-20 03:51:40,224 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop close
2018-05-20 03:51:40,224 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() complete
2018-05-20 03:51:40,224 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() started
2018-05-20 03:51:40,225 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop datetime
2018-05-20 03:51:40,225 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop diffToNextRowInMinutes
2018-05-20 03:51:40,225 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop close
2018-05-20 03:51:40,225 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() complete
2018-05-20 03:51:40,226 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-20 03:51:40,226 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-20 03:51:40,226 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 03:51:43,405 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-20 03:51:43,407 sqlalchemy.engine.base.Engine _execute_context INFO PRAGMA table_info("MarketDataInfoTable")
2018-05-20 03:51:43,407 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 03:51:43,423 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-20 03:51:43,427 sqlalchemy.engine.base.Engine _execute_context INFO SELECT count(*) AS count_1 
FROM (SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable") AS anon_1
2018-05-20 03:51:43,427 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 03:51:43,433 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName", "MarketDataInfoTable".description, "MarketDataInfoTable"."conId", "MarketDataInfoTable".symbol, "MarketDataInfoTable".currency, "MarketDataInfoTable".exchange, "MarketDataInfoTable".category, "MarketDataInfoTable"."secType", "MarketDataInfoTable"."earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-20 03:51:43,433 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 03:51:43,441 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-20 03:51:43,441 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 03:51:44,033 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-20 03:51:44,056 apscheduler.scheduler start INFO Scheduler started
2018-05-20 03:51:44,057 root runProg INFO Now updating the settings for the request of recent historical bars
2018-05-20 03:51:44,057 root runProg INFO Now requesting initial recent historical bars
2018-05-20 03:51:44,057 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 03:51:44,058 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 03:51:45,874 ib_insync.wrapper error INFO Warning 2106, reqId -1: HMDS data farm connection is OK:cashhmds
2018-05-20 03:51:45,874 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2106, errorString: HMDS data farm connection is OK:cashhmds, localSymbol: None
2018-05-20 03:51:46,040 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CAD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 03:51:46,301 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CHF. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-20 03:58:25,010 ib_insync.Watchdog start INFO Starting
2018-05-20 03:58:25,012 quamash <module> INFO Using Qt Implementation: PyQt5
2018-05-20 03:58:25,042 ib_insync.IBC startAsync INFO Starting
2018-05-20 03:58:40,059 ib_insync.client connectAsync INFO Connecting to 127.0.0.1:4002 with clientId 24...
2018-05-20 03:58:40,061 ib_insync.client _onSocketConnected INFO Connected
2018-05-20 03:58:40,103 ib_insync.client _onSocketHasData INFO Logged on to server version 141
2018-05-20 03:58:40,151 ib_insync.client connectAsync INFO API connection ready
2018-05-20 03:58:40,210 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17709995, marketValue=218940.59, averageCost=1.2182257, unrealizedPNL=-7649.39, realizedPNL=0.0, account='DU946735')
2018-05-20 03:58:40,211 ib_insync.wrapper position INFO position: Position(account='DU946735', contract=Contract(secType='CASH', conId=12087792, symbol='EUR', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, avgCost=1.2182257)
2018-05-20 03:58:40,226 ib_insync.ib connectAsync INFO Synchronization complete
2018-05-20 03:58:40,301 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() started
2018-05-20 03:58:40,301 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop datetime
2018-05-20 03:58:40,302 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 03:58:40,302 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop close
2018-05-20 03:58:40,302 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() complete
2018-05-20 03:58:40,302 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() started
2018-05-20 03:58:40,302 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop datetime
2018-05-20 03:58:40,302 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 03:58:40,303 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop close
2018-05-20 03:58:40,303 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() complete
2018-05-20 03:58:40,303 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() started
2018-05-20 03:58:40,303 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop datetime
2018-05-20 03:58:40,303 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 03:58:40,303 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop close
2018-05-20 03:58:40,304 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() complete
2018-05-20 03:58:40,304 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() started
2018-05-20 03:58:40,304 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop datetime
2018-05-20 03:58:40,304 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 03:58:40,304 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop close
2018-05-20 03:58:40,304 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() complete
2018-05-20 03:58:40,304 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() started
2018-05-20 03:58:40,305 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop datetime
2018-05-20 03:58:40,305 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 03:58:40,305 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop close
2018-05-20 03:58:40,305 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() complete
2018-05-20 03:58:40,305 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() started
2018-05-20 03:58:40,305 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop datetime
2018-05-20 03:58:40,306 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 03:58:40,306 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop close
2018-05-20 03:58:40,306 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() complete
2018-05-20 03:58:40,306 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() started
2018-05-20 03:58:40,306 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop datetime
2018-05-20 03:58:40,306 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 03:58:40,306 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop close
2018-05-20 03:58:40,307 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() complete
2018-05-20 03:58:40,307 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() started
2018-05-20 03:58:40,307 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop datetime
2018-05-20 03:58:40,307 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 03:58:40,307 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop close
2018-05-20 03:58:40,307 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() complete
2018-05-20 03:58:40,308 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() started
2018-05-20 03:58:40,308 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop datetime
2018-05-20 03:58:40,308 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop diffToNextRowInMinutes
2018-05-20 03:58:40,308 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop close
2018-05-20 03:58:40,308 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() complete
2018-05-20 03:58:40,308 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() started
2018-05-20 03:58:40,308 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop datetime
2018-05-20 03:58:40,309 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop diffToNextRowInMinutes
2018-05-20 03:58:40,309 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop close
2018-05-20 03:58:40,309 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() complete
2018-05-20 03:58:40,309 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() started
2018-05-20 03:58:40,309 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop datetime
2018-05-20 03:58:40,309 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop diffToNextRowInMinutes
2018-05-20 03:58:40,310 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop close
2018-05-20 03:58:40,310 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() complete
2018-05-20 03:58:40,310 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() started
2018-05-20 03:58:40,310 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop datetime
2018-05-20 03:58:40,310 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop diffToNextRowInMinutes
2018-05-20 03:58:40,310 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop close
2018-05-20 03:58:40,311 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() complete
2018-05-20 03:58:40,311 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() started
2018-05-20 03:58:40,311 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop datetime
2018-05-20 03:58:40,311 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop diffToNextRowInMinutes
2018-05-20 03:58:40,311 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop close
2018-05-20 03:58:40,311 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() complete
2018-05-20 03:58:40,311 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() started
2018-05-20 03:58:40,312 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop datetime
2018-05-20 03:58:40,312 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop diffToNextRowInMinutes
2018-05-20 03:58:40,312 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop close
2018-05-20 03:58:40,312 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() complete
2018-05-20 03:58:40,313 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-20 03:58:40,313 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-20 03:58:40,313 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 03:58:43,715 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-20 03:58:43,716 sqlalchemy.engine.base.Engine _execute_context INFO PRAGMA table_info("MarketDataInfoTable")
2018-05-20 03:58:43,716 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 03:58:43,719 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-20 03:58:43,720 sqlalchemy.engine.base.Engine _execute_context INFO SELECT count(*) AS count_1 
FROM (SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable") AS anon_1
2018-05-20 03:58:43,720 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 03:58:43,722 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName", "MarketDataInfoTable".description, "MarketDataInfoTable"."conId", "MarketDataInfoTable".symbol, "MarketDataInfoTable".currency, "MarketDataInfoTable".exchange, "MarketDataInfoTable".category, "MarketDataInfoTable"."secType", "MarketDataInfoTable"."earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-20 03:58:43,723 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 03:58:43,726 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-20 03:58:43,726 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 03:58:44,345 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-20 03:58:44,367 apscheduler.scheduler start INFO Scheduler started
2018-05-20 03:59:02,123 ib_insync.Watchdog start INFO Starting
2018-05-20 03:59:02,124 quamash <module> INFO Using Qt Implementation: PyQt5
2018-05-20 03:59:02,149 ib_insync.IBC startAsync INFO Starting
2018-05-20 03:59:09,692 ib_insync.Watchdog start INFO Starting
2018-05-20 03:59:09,693 quamash <module> INFO Using Qt Implementation: PyQt5
2018-05-20 03:59:09,720 ib_insync.IBC startAsync INFO Starting
2018-05-20 03:59:24,733 ib_insync.client connectAsync INFO Connecting to 127.0.0.1:4002 with clientId 24...
2018-05-20 03:59:24,735 ib_insync.client _onSocketConnected INFO Connected
2018-05-20 03:59:24,763 ib_insync.client _onSocketHasData INFO Logged on to server version 141
2018-05-20 03:59:24,807 ib_insync.client connectAsync INFO API connection ready
2018-05-20 03:59:24,872 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17709995, marketValue=218940.59, averageCost=1.2182257, unrealizedPNL=-7649.39, realizedPNL=0.0, account='DU946735')
2018-05-20 03:59:24,873 ib_insync.wrapper position INFO position: Position(account='DU946735', contract=Contract(secType='CASH', conId=12087792, symbol='EUR', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, avgCost=1.2182257)
2018-05-20 03:59:24,899 ib_insync.ib connectAsync INFO Synchronization complete
2018-05-20 03:59:24,987 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() started
2018-05-20 03:59:24,987 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop datetime
2018-05-20 03:59:24,988 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 03:59:24,988 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop close
2018-05-20 03:59:24,988 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() complete
2018-05-20 03:59:24,988 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() started
2018-05-20 03:59:24,988 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop datetime
2018-05-20 03:59:24,989 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 03:59:24,989 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop close
2018-05-20 03:59:24,989 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() complete
2018-05-20 03:59:24,989 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() started
2018-05-20 03:59:24,989 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop datetime
2018-05-20 03:59:24,989 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 03:59:24,990 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop close
2018-05-20 03:59:24,990 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() complete
2018-05-20 03:59:24,990 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() started
2018-05-20 03:59:24,990 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop datetime
2018-05-20 03:59:24,990 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 03:59:24,991 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop close
2018-05-20 03:59:24,991 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() complete
2018-05-20 03:59:24,991 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() started
2018-05-20 03:59:24,991 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop datetime
2018-05-20 03:59:24,991 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 03:59:24,991 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop close
2018-05-20 03:59:24,992 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() complete
2018-05-20 03:59:24,992 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() started
2018-05-20 03:59:24,992 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop datetime
2018-05-20 03:59:24,992 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 03:59:24,992 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop close
2018-05-20 03:59:24,992 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() complete
2018-05-20 03:59:24,992 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() started
2018-05-20 03:59:24,993 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop datetime
2018-05-20 03:59:24,993 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 03:59:24,993 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop close
2018-05-20 03:59:24,993 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() complete
2018-05-20 03:59:24,993 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() started
2018-05-20 03:59:24,993 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop datetime
2018-05-20 03:59:24,994 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 03:59:24,994 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop close
2018-05-20 03:59:24,994 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() complete
2018-05-20 03:59:24,994 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() started
2018-05-20 03:59:24,994 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop datetime
2018-05-20 03:59:24,994 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop diffToNextRowInMinutes
2018-05-20 03:59:24,994 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop close
2018-05-20 03:59:24,995 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() complete
2018-05-20 03:59:24,995 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() started
2018-05-20 03:59:24,995 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop datetime
2018-05-20 03:59:24,995 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop diffToNextRowInMinutes
2018-05-20 03:59:24,995 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop close
2018-05-20 03:59:24,995 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() complete
2018-05-20 03:59:24,996 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() started
2018-05-20 03:59:24,996 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop datetime
2018-05-20 03:59:24,996 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop diffToNextRowInMinutes
2018-05-20 03:59:24,996 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop close
2018-05-20 03:59:24,996 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() complete
2018-05-20 03:59:24,996 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() started
2018-05-20 03:59:24,996 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop datetime
2018-05-20 03:59:24,997 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop diffToNextRowInMinutes
2018-05-20 03:59:24,997 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop close
2018-05-20 03:59:24,997 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() complete
2018-05-20 03:59:24,997 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() started
2018-05-20 03:59:24,997 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop datetime
2018-05-20 03:59:24,998 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop diffToNextRowInMinutes
2018-05-20 03:59:24,998 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop close
2018-05-20 03:59:24,998 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() complete
2018-05-20 03:59:24,998 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() started
2018-05-20 03:59:24,998 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop datetime
2018-05-20 03:59:24,998 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop diffToNextRowInMinutes
2018-05-20 03:59:24,999 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop close
2018-05-20 03:59:24,999 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() complete
2018-05-20 03:59:24,999 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-20 03:59:25,000 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-20 03:59:25,000 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 03:59:28,211 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-20 03:59:28,212 sqlalchemy.engine.base.Engine _execute_context INFO PRAGMA table_info("MarketDataInfoTable")
2018-05-20 03:59:28,212 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 03:59:28,215 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-20 03:59:28,216 sqlalchemy.engine.base.Engine _execute_context INFO SELECT count(*) AS count_1 
FROM (SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable") AS anon_1
2018-05-20 03:59:28,216 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 03:59:28,218 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName", "MarketDataInfoTable".description, "MarketDataInfoTable"."conId", "MarketDataInfoTable".symbol, "MarketDataInfoTable".currency, "MarketDataInfoTable".exchange, "MarketDataInfoTable".category, "MarketDataInfoTable"."secType", "MarketDataInfoTable"."earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-20 03:59:28,218 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 03:59:28,222 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-20 03:59:28,222 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 03:59:28,845 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-20 03:59:28,865 apscheduler.scheduler start INFO Scheduler started
2018-05-20 04:03:56,305 ib_insync.Watchdog start INFO Starting
2018-05-20 04:03:56,306 quamash <module> INFO Using Qt Implementation: PyQt5
2018-05-20 04:03:56,332 ib_insync.IBC startAsync INFO Starting
2018-05-20 04:04:11,346 ib_insync.client connectAsync INFO Connecting to 127.0.0.1:4002 with clientId 24...
2018-05-20 04:04:11,348 ib_insync.client _onSocketConnected INFO Connected
2018-05-20 04:04:11,376 ib_insync.client _onSocketHasData INFO Logged on to server version 141
2018-05-20 04:04:11,381 ib_insync.client connectAsync INFO API connection ready
2018-05-20 04:04:11,448 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17709995, marketValue=218940.59, averageCost=1.2182257, unrealizedPNL=-7649.39, realizedPNL=0.0, account='DU946735')
2018-05-20 04:04:11,448 ib_insync.wrapper position INFO position: Position(account='DU946735', contract=Contract(secType='CASH', conId=12087792, symbol='EUR', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, avgCost=1.2182257)
2018-05-20 04:04:11,472 ib_insync.ib connectAsync INFO Synchronization complete
2018-05-20 04:04:11,548 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() started
2018-05-20 04:04:11,549 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop datetime
2018-05-20 04:04:11,549 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 04:04:11,549 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop close
2018-05-20 04:04:11,549 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() complete
2018-05-20 04:04:11,549 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() started
2018-05-20 04:04:11,550 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop datetime
2018-05-20 04:04:11,550 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 04:04:11,550 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop close
2018-05-20 04:04:11,550 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() complete
2018-05-20 04:04:11,550 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() started
2018-05-20 04:04:11,550 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop datetime
2018-05-20 04:04:11,551 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 04:04:11,551 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop close
2018-05-20 04:04:11,551 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() complete
2018-05-20 04:04:11,551 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() started
2018-05-20 04:04:11,551 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop datetime
2018-05-20 04:04:11,551 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 04:04:11,552 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop close
2018-05-20 04:04:11,552 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() complete
2018-05-20 04:04:11,552 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() started
2018-05-20 04:04:11,552 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop datetime
2018-05-20 04:04:11,552 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 04:04:11,552 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop close
2018-05-20 04:04:11,552 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() complete
2018-05-20 04:04:11,553 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() started
2018-05-20 04:04:11,553 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop datetime
2018-05-20 04:04:11,553 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 04:04:11,553 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop close
2018-05-20 04:04:11,553 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() complete
2018-05-20 04:04:11,553 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() started
2018-05-20 04:04:11,553 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop datetime
2018-05-20 04:04:11,554 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 04:04:11,554 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop close
2018-05-20 04:04:11,554 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() complete
2018-05-20 04:04:11,554 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() started
2018-05-20 04:04:11,554 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop datetime
2018-05-20 04:04:11,554 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 04:04:11,555 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop close
2018-05-20 04:04:11,555 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() complete
2018-05-20 04:04:11,555 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() started
2018-05-20 04:04:11,555 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop datetime
2018-05-20 04:04:11,555 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop diffToNextRowInMinutes
2018-05-20 04:04:11,555 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop close
2018-05-20 04:04:11,556 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() complete
2018-05-20 04:04:11,556 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() started
2018-05-20 04:04:11,556 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop datetime
2018-05-20 04:04:11,556 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop diffToNextRowInMinutes
2018-05-20 04:04:11,556 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop close
2018-05-20 04:04:11,556 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() complete
2018-05-20 04:04:11,556 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() started
2018-05-20 04:04:11,557 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop datetime
2018-05-20 04:04:11,557 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop diffToNextRowInMinutes
2018-05-20 04:04:11,557 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop close
2018-05-20 04:04:11,557 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() complete
2018-05-20 04:04:11,557 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() started
2018-05-20 04:04:11,557 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop datetime
2018-05-20 04:04:11,558 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop diffToNextRowInMinutes
2018-05-20 04:04:11,558 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop close
2018-05-20 04:04:11,558 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() complete
2018-05-20 04:04:11,558 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() started
2018-05-20 04:04:11,558 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop datetime
2018-05-20 04:04:11,558 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop diffToNextRowInMinutes
2018-05-20 04:04:11,559 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop close
2018-05-20 04:04:11,559 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() complete
2018-05-20 04:04:11,559 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() started
2018-05-20 04:04:11,559 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop datetime
2018-05-20 04:04:11,559 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop diffToNextRowInMinutes
2018-05-20 04:04:11,559 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop close
2018-05-20 04:04:11,560 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() complete
2018-05-20 04:04:11,560 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-20 04:04:11,561 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-20 04:04:11,561 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 04:04:14,895 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-20 04:04:14,896 sqlalchemy.engine.base.Engine _execute_context INFO PRAGMA table_info("MarketDataInfoTable")
2018-05-20 04:04:14,896 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 04:04:14,899 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-20 04:04:14,900 sqlalchemy.engine.base.Engine _execute_context INFO SELECT count(*) AS count_1 
FROM (SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable") AS anon_1
2018-05-20 04:04:14,900 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 04:04:14,902 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName", "MarketDataInfoTable".description, "MarketDataInfoTable"."conId", "MarketDataInfoTable".symbol, "MarketDataInfoTable".currency, "MarketDataInfoTable".exchange, "MarketDataInfoTable".category, "MarketDataInfoTable"."secType", "MarketDataInfoTable"."earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-20 04:04:14,902 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 04:04:14,906 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-20 04:04:14,906 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 04:04:15,529 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-20 04:04:15,550 apscheduler.scheduler start INFO Scheduler started
2018-05-20 04:04:43,940 ib_insync.Watchdog start INFO Starting
2018-05-20 04:04:43,941 quamash <module> INFO Using Qt Implementation: PyQt5
2018-05-20 04:04:43,965 ib_insync.IBC startAsync INFO Starting
2018-05-20 04:04:51,601 ib_insync.Watchdog start INFO Starting
2018-05-20 04:04:51,602 quamash <module> INFO Using Qt Implementation: PyQt5
2018-05-20 04:04:51,628 ib_insync.IBC startAsync INFO Starting
2018-05-20 04:05:06,643 ib_insync.client connectAsync INFO Connecting to 127.0.0.1:4002 with clientId 24...
2018-05-20 04:05:06,645 ib_insync.client _onSocketConnected INFO Connected
2018-05-20 04:05:06,681 ib_insync.client _onSocketHasData INFO Logged on to server version 141
2018-05-20 04:05:06,727 ib_insync.client connectAsync INFO API connection ready
2018-05-20 04:05:06,796 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17709995, marketValue=218940.59, averageCost=1.2182257, unrealizedPNL=-7649.39, realizedPNL=0.0, account='DU946735')
2018-05-20 04:05:06,797 ib_insync.wrapper position INFO position: Position(account='DU946735', contract=Contract(secType='CASH', conId=12087792, symbol='EUR', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, avgCost=1.2182257)
2018-05-20 04:05:06,825 ib_insync.ib connectAsync INFO Synchronization complete
2018-05-20 04:05:06,955 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() started
2018-05-20 04:05:06,956 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop datetime
2018-05-20 04:05:06,956 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 04:05:06,957 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop close
2018-05-20 04:05:06,957 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() complete
2018-05-20 04:05:06,957 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() started
2018-05-20 04:05:06,957 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop datetime
2018-05-20 04:05:06,958 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 04:05:06,958 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop close
2018-05-20 04:05:06,958 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() complete
2018-05-20 04:05:06,958 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() started
2018-05-20 04:05:06,959 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop datetime
2018-05-20 04:05:06,959 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 04:05:06,959 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop close
2018-05-20 04:05:06,960 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() complete
2018-05-20 04:05:06,960 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() started
2018-05-20 04:05:06,960 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop datetime
2018-05-20 04:05:06,960 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 04:05:06,960 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop close
2018-05-20 04:05:06,961 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() complete
2018-05-20 04:05:06,961 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() started
2018-05-20 04:05:06,961 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop datetime
2018-05-20 04:05:06,961 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 04:05:06,962 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop close
2018-05-20 04:05:06,962 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() complete
2018-05-20 04:05:06,962 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() started
2018-05-20 04:05:06,962 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop datetime
2018-05-20 04:05:06,963 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 04:05:06,963 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop close
2018-05-20 04:05:06,963 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() complete
2018-05-20 04:05:06,963 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() started
2018-05-20 04:05:06,964 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop datetime
2018-05-20 04:05:06,964 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 04:05:06,964 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop close
2018-05-20 04:05:06,964 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() complete
2018-05-20 04:05:06,965 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() started
2018-05-20 04:05:06,965 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop datetime
2018-05-20 04:05:06,965 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-20 04:05:06,965 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop close
2018-05-20 04:05:06,966 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() complete
2018-05-20 04:05:06,966 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() started
2018-05-20 04:05:06,966 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop datetime
2018-05-20 04:05:06,966 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop diffToNextRowInMinutes
2018-05-20 04:05:06,967 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop close
2018-05-20 04:05:06,967 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() complete
2018-05-20 04:05:06,967 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() started
2018-05-20 04:05:06,967 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop datetime
2018-05-20 04:05:06,968 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop diffToNextRowInMinutes
2018-05-20 04:05:06,968 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop close
2018-05-20 04:05:06,968 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() complete
2018-05-20 04:05:06,968 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() started
2018-05-20 04:05:06,969 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop datetime
2018-05-20 04:05:06,969 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop diffToNextRowInMinutes
2018-05-20 04:05:06,969 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop close
2018-05-20 04:05:06,969 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() complete
2018-05-20 04:05:06,970 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() started
2018-05-20 04:05:06,970 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop datetime
2018-05-20 04:05:06,970 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop diffToNextRowInMinutes
2018-05-20 04:05:06,970 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop close
2018-05-20 04:05:06,971 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() complete
2018-05-20 04:05:06,971 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() started
2018-05-20 04:05:06,971 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop datetime
2018-05-20 04:05:06,971 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop diffToNextRowInMinutes
2018-05-20 04:05:06,972 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop close
2018-05-20 04:05:06,972 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() complete
2018-05-20 04:05:06,972 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() started
2018-05-20 04:05:06,972 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop datetime
2018-05-20 04:05:06,973 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop diffToNextRowInMinutes
2018-05-20 04:05:06,973 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop close
2018-05-20 04:05:06,973 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() complete
2018-05-20 04:05:06,974 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-20 04:05:06,975 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-20 04:05:06,975 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 04:05:10,151 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-20 04:05:10,152 sqlalchemy.engine.base.Engine _execute_context INFO PRAGMA table_info("MarketDataInfoTable")
2018-05-20 04:05:10,152 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 04:05:10,156 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-20 04:05:10,156 sqlalchemy.engine.base.Engine _execute_context INFO SELECT count(*) AS count_1 
FROM (SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable") AS anon_1
2018-05-20 04:05:10,157 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 04:05:10,159 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName", "MarketDataInfoTable".description, "MarketDataInfoTable"."conId", "MarketDataInfoTable".symbol, "MarketDataInfoTable".currency, "MarketDataInfoTable".exchange, "MarketDataInfoTable".category, "MarketDataInfoTable"."secType", "MarketDataInfoTable"."earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-20 04:05:10,159 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 04:05:10,162 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-20 04:05:10,162 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-20 04:05:10,590 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-20 04:05:10,640 apscheduler.scheduler start INFO Scheduler started
2018-05-21 01:32:57,219 ib_insync.Watchdog start INFO Starting
2018-05-21 01:32:57,220 quamash <module> INFO Using Qt Implementation: PyQt5
2018-05-21 01:32:57,251 ib_insync.IBC startAsync INFO Starting
2018-05-21 01:33:12,263 ib_insync.client connectAsync INFO Connecting to 127.0.0.1:4002 with clientId 24...
2018-05-21 01:33:12,265 ib_insync.client _onSocketConnected INFO Connected
2018-05-21 01:33:12,320 ib_insync.client _onSocketHasData INFO Logged on to server version 141
2018-05-21 01:33:12,367 ib_insync.client connectAsync INFO API connection ready
2018-05-21 01:33:12,441 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17619, marketValue=218771.34, averageCost=1.2182257, unrealizedPNL=-7818.64, realizedPNL=0.0, account='DU946735')
2018-05-21 01:33:12,442 ib_insync.wrapper position INFO position: Position(account='DU946735', contract=Contract(secType='CASH', conId=12087792, symbol='EUR', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, avgCost=1.2182257)
2018-05-21 01:33:12,467 ib_insync.ib connectAsync INFO Synchronization complete
2018-05-21 01:33:12,543 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() started
2018-05-21 01:33:12,543 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop datetime
2018-05-21 01:33:12,544 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 01:33:12,544 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop close
2018-05-21 01:33:12,544 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() complete
2018-05-21 01:33:12,544 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() started
2018-05-21 01:33:12,544 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop datetime
2018-05-21 01:33:12,544 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 01:33:12,545 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop close
2018-05-21 01:33:12,545 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() complete
2018-05-21 01:33:12,545 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() started
2018-05-21 01:33:12,545 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop datetime
2018-05-21 01:33:12,545 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 01:33:12,545 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop close
2018-05-21 01:33:12,546 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() complete
2018-05-21 01:33:12,546 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() started
2018-05-21 01:33:12,546 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop datetime
2018-05-21 01:33:12,546 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 01:33:12,546 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop close
2018-05-21 01:33:12,546 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() complete
2018-05-21 01:33:12,547 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() started
2018-05-21 01:33:12,547 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop datetime
2018-05-21 01:33:12,547 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 01:33:12,547 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop close
2018-05-21 01:33:12,547 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() complete
2018-05-21 01:33:12,547 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() started
2018-05-21 01:33:12,547 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop datetime
2018-05-21 01:33:12,548 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 01:33:12,548 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop close
2018-05-21 01:33:12,548 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() complete
2018-05-21 01:33:12,548 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() started
2018-05-21 01:33:12,548 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop datetime
2018-05-21 01:33:12,548 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 01:33:12,549 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop close
2018-05-21 01:33:12,549 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() complete
2018-05-21 01:33:12,549 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() started
2018-05-21 01:33:12,549 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop datetime
2018-05-21 01:33:12,549 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 01:33:12,549 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop close
2018-05-21 01:33:12,549 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() complete
2018-05-21 01:33:12,550 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() started
2018-05-21 01:33:12,550 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop datetime
2018-05-21 01:33:12,550 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop diffToNextRowInMinutes
2018-05-21 01:33:12,550 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop close
2018-05-21 01:33:12,550 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() complete
2018-05-21 01:33:12,550 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() started
2018-05-21 01:33:12,550 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop datetime
2018-05-21 01:33:12,551 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop diffToNextRowInMinutes
2018-05-21 01:33:12,551 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop close
2018-05-21 01:33:12,551 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() complete
2018-05-21 01:33:12,551 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() started
2018-05-21 01:33:12,551 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop datetime
2018-05-21 01:33:12,551 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop diffToNextRowInMinutes
2018-05-21 01:33:12,552 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop close
2018-05-21 01:33:12,552 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() complete
2018-05-21 01:33:12,552 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() started
2018-05-21 01:33:12,552 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop datetime
2018-05-21 01:33:12,552 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop diffToNextRowInMinutes
2018-05-21 01:33:12,552 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop close
2018-05-21 01:33:12,553 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() complete
2018-05-21 01:33:12,553 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() started
2018-05-21 01:33:12,553 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop datetime
2018-05-21 01:33:12,553 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop diffToNextRowInMinutes
2018-05-21 01:33:12,553 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop close
2018-05-21 01:33:12,553 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() complete
2018-05-21 01:33:12,554 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() started
2018-05-21 01:33:12,554 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop datetime
2018-05-21 01:33:12,554 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop diffToNextRowInMinutes
2018-05-21 01:33:12,554 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop close
2018-05-21 01:33:12,554 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() complete
2018-05-21 01:33:12,555 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-21 01:33:12,555 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-21 01:33:12,556 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 01:33:15,815 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-21 01:33:15,816 sqlalchemy.engine.base.Engine _execute_context INFO PRAGMA table_info("MarketDataInfoTable")
2018-05-21 01:33:15,816 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 01:33:15,819 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-21 01:33:15,820 sqlalchemy.engine.base.Engine _execute_context INFO SELECT count(*) AS count_1 
FROM (SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable") AS anon_1
2018-05-21 01:33:15,820 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 01:33:15,822 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName", "MarketDataInfoTable".description, "MarketDataInfoTable"."conId", "MarketDataInfoTable".symbol, "MarketDataInfoTable".currency, "MarketDataInfoTable".exchange, "MarketDataInfoTable".category, "MarketDataInfoTable"."secType", "MarketDataInfoTable"."earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-21 01:33:15,823 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 01:33:15,827 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-21 01:33:15,827 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 01:33:16,450 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-21 01:33:16,485 apscheduler.scheduler start INFO Scheduler started
2018-05-21 01:33:16,486 root runProg INFO Now updating the settings for the request of recent historical bars
2018-05-21 01:33:16,486 root runProg INFO Now requesting initial recent historical bars
2018-05-21 01:33:16,486 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 01:33:16,489 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 01:33:18,511 ib_insync.wrapper error INFO Warning 2106, reqId -1: HMDS data farm connection is OK:cashhmds
2018-05-21 01:33:18,511 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2106, errorString: HMDS data farm connection is OK:cashhmds, localSymbol: None
2018-05-21 01:33:18,642 ib_insync.wrapper error INFO Warning 2119, reqId -1: Market data farm is connecting:cashfarm
2018-05-21 01:33:18,643 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2119, errorString: Market data farm is connecting:cashfarm, localSymbol: None
2018-05-21 01:33:18,740 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for SPX. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 01:33:19,142 ib_insync.wrapper error INFO Warning 2119, reqId -1: Market data farm is connecting:usfarm.us
2018-05-21 01:33:19,143 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2119, errorString: Market data farm is connecting:usfarm.us, localSymbol: None
2018-05-21 01:33:19,438 ib_insync.wrapper error INFO Warning 2104, reqId -1: Market data farm connection is OK:cashfarm
2018-05-21 01:33:19,438 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2104, errorString: Market data farm connection is OK:cashfarm, localSymbol: None
2018-05-21 01:33:19,716 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: EUR.AUD; 2018-05-20 22:33:00+00:00; 2018-05-20 23:32:00+00:00 60; 2018-05-20 23:23:00; 2018-05-20 23:33:00; False
2018-05-21 01:48:56,908 ib_insync.wrapper handleEvent ERROR Event barUpdateEvent(([BarData(date=datetime.datetime(2018, 5, 20, 22, 33, tzinfo=datetime.timezone.utc), open=1.56434, high=1.56436, low=1.564325, close=1.56436, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 22, 34, tzinfo=datetime.timezone.utc), open=1.56436, high=1.564415, low=1.56436, close=1.56441, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 22, 35, tzinfo=datetime.timezone.utc), open=1.56441, high=1.564575, low=1.5644, close=1.564435, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 22, 36, tzinfo=datetime.timezone.utc), open=1.564435, high=1.564485, low=1.56443, close=1.564485, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 22, 37, tzinfo=datetime.timezone.utc), open=1.564485, high=1.564655, low=1.564435, close=1.564625, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 22, 38, tzinfo=datetime.timezone.utc), open=1.564625, high=1.564695, low=1.56453, close=1.56459, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 22, 39, tzinfo=datetime.timezone.utc), open=1.56459, high=1.5646, low=1.564545, close=1.56457, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 22, 40, tzinfo=datetime.timezone.utc), open=1.56457, high=1.564785, low=1.56457, close=1.56475, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 22, 41, tzinfo=datetime.timezone.utc), open=1.56475, high=1.56475, low=1.56467, close=1.5647, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 22, 42, tzinfo=datetime.timezone.utc), open=1.5647, high=1.5647, low=1.564495, close=1.5645, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 22, 43, tzinfo=datetime.timezone.utc), open=1.5645, high=1.56457, low=1.56449, close=1.5645, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 22, 44, tzinfo=datetime.timezone.utc), open=1.5645, high=1.564645, low=1.56444, close=1.56452, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 22, 45, tzinfo=datetime.timezone.utc), open=1.56452, high=1.5648, low=1.564495, close=1.564495, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 22, 46, tzinfo=datetime.timezone.utc), open=1.564495, high=1.5649, low=1.5644, close=1.56475, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 22, 47, tzinfo=datetime.timezone.utc), open=1.56475, high=1.5649, low=1.564615, close=1.564815, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 22, 48, tzinfo=datetime.timezone.utc), open=1.564815, high=1.56486, low=1.56478, close=1.56479, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 22, 49, tzinfo=datetime.timezone.utc), open=1.56479, high=1.56482, low=1.564775, close=1.56482, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 22, 50, tzinfo=datetime.timezone.utc), open=1.56482, high=1.5649, low=1.564625, close=1.564625, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 22, 51, tzinfo=datetime.timezone.utc), open=1.564625, high=1.56467, low=1.56461, close=1.564655, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 22, 52, tzinfo=datetime.timezone.utc), open=1.564655, high=1.564685, low=1.56447, close=1.56454, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 22, 53, tzinfo=datetime.timezone.utc), open=1.56454, high=1.564545, low=1.56444, close=1.56444, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 22, 54, tzinfo=datetime.timezone.utc), open=1.56444, high=1.564445, low=1.564405, close=1.564435, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 22, 55, tzinfo=datetime.timezone.utc), open=1.564435, high=1.564435, low=1.56424, close=1.56424, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 22, 56, tzinfo=datetime.timezone.utc), open=1.56424, high=1.564255, low=1.56419, close=1.564225, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 22, 57, tzinfo=datetime.timezone.utc), open=1.56423, high=1.564255, low=1.56416, close=1.564255, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 22, 58, tzinfo=datetime.timezone.utc), open=1.564255, high=1.564255, low=1.564055, close=1.564075, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 22, 59, tzinfo=datetime.timezone.utc), open=1.564075, high=1.564115, low=1.56399, close=1.564005, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 23, 0, tzinfo=datetime.timezone.utc), open=1.564005, high=1.56405, low=1.56384, close=1.563865, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 23, 1, tzinfo=datetime.timezone.utc), open=1.563865, high=1.56411, low=1.563835, close=1.564, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 23, 2, tzinfo=datetime.timezone.utc), open=1.564, high=1.56412, low=1.56399, close=1.564065, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 23, 3, tzinfo=datetime.timezone.utc), open=1.564065, high=1.56408, low=1.563925, close=1.56399, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 23, 4, tzinfo=datetime.timezone.utc), open=1.56399, high=1.56414, low=1.563955, close=1.56407, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 23, 5, tzinfo=datetime.timezone.utc), open=1.56407, high=1.56415, low=1.56398, close=1.56405, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 23, 6, tzinfo=datetime.timezone.utc), open=1.56405, high=1.564155, low=1.563985, close=1.564125, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 23, 7, tzinfo=datetime.timezone.utc), open=1.564125, high=1.564125, low=1.56402, close=1.564075, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 23, 8, tzinfo=datetime.timezone.utc), open=1.564075, high=1.564075, low=1.56382, close=1.56388, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 23, 9, tzinfo=datetime.timezone.utc), open=1.56388, high=1.564035, low=1.56386, close=1.563975, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 23, 10, tzinfo=datetime.timezone.utc), open=1.563975, high=1.564035, low=1.56393, close=1.56393, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 23, 11, tzinfo=datetime.timezone.utc), open=1.56393, high=1.56399, low=1.563895, close=1.56393, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 23, 12, tzinfo=datetime.timezone.utc), open=1.56393, high=1.564185, low=1.56389, close=1.56416, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 23, 13, tzinfo=datetime.timezone.utc), open=1.56416, high=1.56429, low=1.564045, close=1.56406, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 23, 14, tzinfo=datetime.timezone.utc), open=1.56406, high=1.564215, low=1.56396, close=1.564125, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 23, 15, tzinfo=datetime.timezone.utc), open=1.564125, high=1.5643, low=1.56407, close=1.56426, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 23, 16, tzinfo=datetime.timezone.utc), open=1.56426, high=1.564435, low=1.56422, close=1.56442, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 23, 17, tzinfo=datetime.timezone.utc), open=1.56442, high=1.564525, low=1.564395, close=1.564515, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 23, 18, tzinfo=datetime.timezone.utc), open=1.564515, high=1.564515, low=1.563915, close=1.56431, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 23, 19, tzinfo=datetime.timezone.utc), open=1.56431, high=1.56435, low=1.56418, close=1.56418, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 23, 20, tzinfo=datetime.timezone.utc), open=1.56418, high=1.56418, low=1.564015, close=1.56411, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 23, 21, tzinfo=datetime.timezone.utc), open=1.56411, high=1.564395, low=1.56411, close=1.564395, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 23, 22, tzinfo=datetime.timezone.utc), open=1.564395, high=1.564465, low=1.564345, close=1.56437, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 23, 23, tzinfo=datetime.timezone.utc), open=1.56437, high=1.564465, low=1.56437, close=1.564405, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 23, 24, tzinfo=datetime.timezone.utc), open=1.564405, high=1.56445, low=1.564345, close=1.56442, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 23, 25, tzinfo=datetime.timezone.utc), open=1.56442, high=1.56446, low=1.564395, close=1.564415, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 23, 26, tzinfo=datetime.timezone.utc), open=1.564415, high=1.564455, low=1.564405, close=1.564425, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 23, 27, tzinfo=datetime.timezone.utc), open=1.564425, high=1.56445, low=1.564385, close=1.56444, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 23, 28, tzinfo=datetime.timezone.utc), open=1.56444, high=1.5645, low=1.56439, close=1.564475, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 23, 29, tzinfo=datetime.timezone.utc), open=1.564475, high=1.564475, low=1.564215, close=1.564265, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 23, 30, tzinfo=datetime.timezone.utc), open=1.564265, high=1.56437, low=1.56421, close=1.56422, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 23, 31, tzinfo=datetime.timezone.utc), open=1.56422, high=1.56424, low=1.56414, close=1.564215, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 23, 32, tzinfo=datetime.timezone.utc), open=1.564215, high=1.56426, low=1.564125, close=1.56422, volume=-1, barCount=-1, average=-1.0), BarData(date=datetime.datetime(2018, 5, 20, 23, 33, tzinfo=datetime.timezone.utc), open=1.56422, high=1.564285, low=1.56422, close=1.564255, volume=-1, barCount=-1, average=-1.0)], False))
Traceback (most recent call last):
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/wrapper.py", line 143, in handleEvent
    event.emit(*args)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/event.py", line 76, in emit
    func(obj, *args, **kwargs)
  File "/home/bn/PycharmProjects/trading/trading/containerClass.py", line 286, in myBarUpdateCallback
    doCorrection=True)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 156, in persistMarketDataBarsOnDisk
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 156, in persistMarketDataBarsOnDisk
  File "/snap/pycharm-professional/66/helpers/pydev/_pydevd_bundle/pydevd_frame.py", line 620, in trace_dispatch
    self.do_wait_suspend(thread, frame, event, arg)
  File "/snap/pycharm-professional/66/helpers/pydev/_pydevd_bundle/pydevd_frame.py", line 125, in do_wait_suspend
    self._args[0].do_wait_suspend(*args, **kwargs)
  File "/snap/pycharm-professional/66/helpers/pydev/pydevd.py", line 812, in do_wait_suspend
    time.sleep(0.01)
KeyboardInterrupt
2018-05-21 01:48:56,912 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 01:49:06,918 trading.marketDataIB getHistoricalDataBars WARNING Timeout while requesting historical bars for contract Contract(secType='CASH', conId=15016065, symbol='EUR', exchange='IDEALPRO', currency='AUD', localSymbol='EUR.AUD', tradingClass='EUR.AUD')
2018-05-21 01:49:06,919 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_CASH_EUR_AUD_IDEALPRO
2018-05-21 01:49:06,919 ib_insync.wrapper error INFO Warning 2104, reqId -1: Market data farm connection is OK:usfarm.us
2018-05-21 01:49:06,920 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2104, errorString: Market data farm connection is OK:usfarm.us, localSymbol: None
2018-05-21 01:49:06,939 ib_insync.wrapper error INFO Warning 2108, reqId -1: Market data farm connection is inactive but should be available upon demand.usfarm.us
2018-05-21 01:49:06,939 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2108, errorString: Market data farm connection is inactive but should be available upon demand.usfarm.us, localSymbol: None
2018-05-21 01:49:06,939 ib_insync.wrapper error INFO Warning 2108, reqId -1: Market data farm connection is inactive but should be available upon demand.usfarm.us
2018-05-21 01:49:06,940 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2108, errorString: Market data farm connection is inactive but should be available upon demand.usfarm.us, localSymbol: None
2018-05-21 01:49:06,950 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17624495, marketValue=218781.57, averageCost=1.2182257, unrealizedPNL=-7808.41, realizedPNL=0.0, account='DU946735')
2018-05-21 01:49:06,969 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17628, marketValue=218788.08, averageCost=1.2182257, unrealizedPNL=-7801.9, realizedPNL=0.0, account='DU946735')
2018-05-21 01:49:06,976 ib_insync.wrapper error INFO Warning 2104, reqId -1: Market data farm connection is OK:usfarm.us
2018-05-21 01:49:06,976 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2104, errorString: Market data farm connection is OK:usfarm.us, localSymbol: None
2018-05-21 01:49:06,979 ib_insync.wrapper error INFO Warning 2108, reqId -1: Market data farm connection is inactive but should be available upon demand.usfarm.us
2018-05-21 01:49:06,979 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2108, errorString: Market data farm connection is inactive but should be available upon demand.usfarm.us, localSymbol: None
2018-05-21 01:49:06,979 ib_insync.wrapper error INFO Warning 2108, reqId -1: Market data farm connection is inactive but should be available upon demand.usfarm.us
2018-05-21 01:49:06,979 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2108, errorString: Market data farm connection is inactive but should be available upon demand.usfarm.us, localSymbol: None
2018-05-21 01:49:06,982 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17631495, marketValue=218794.58, averageCost=1.2182257, unrealizedPNL=-7795.4, realizedPNL=0.0, account='DU946735')
2018-05-21 01:49:06,993 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17663, marketValue=218853.18, averageCost=1.2182257, unrealizedPNL=-7736.8, realizedPNL=0.0, account='DU946735')
2018-05-21 01:49:07,003 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17646005, marketValue=218821.57, averageCost=1.2182257, unrealizedPNL=-7768.41, realizedPNL=0.0, account='DU946735')
2018-05-21 01:49:07,004 ib_insync.client _onSocketHasError ERROR Broken pipe
2018-05-21 01:49:07,004 trading.marketDataIB getHistoricalDataBars WARNING Timeout while requesting historical bars for contract Contract(secType='IND', conId=416904, symbol='SPX', exchange='CBOE', currency='USD', localSymbol='SPX')
2018-05-21 01:49:07,005 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.CAD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:04:30,476 ib_insync.Watchdog start INFO Starting
2018-05-21 02:04:30,477 quamash <module> INFO Using Qt Implementation: PyQt5
2018-05-21 02:04:30,501 ib_insync.IBC startAsync INFO Starting
2018-05-21 02:04:45,512 ib_insync.client connectAsync INFO Connecting to 127.0.0.1:4002 with clientId 24...
2018-05-21 02:04:45,514 ib_insync.client _onSocketConnected INFO Connected
2018-05-21 02:04:45,631 ib_insync.client _onSocketHasData INFO Logged on to server version 141
2018-05-21 02:04:45,635 ib_insync.client connectAsync INFO API connection ready
2018-05-21 02:04:45,705 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.176525, marketValue=218833.65, averageCost=1.2182257, unrealizedPNL=-7756.33, realizedPNL=0.0, account='DU946735')
2018-05-21 02:04:45,706 ib_insync.wrapper position INFO position: Position(account='DU946735', contract=Contract(secType='CASH', conId=12087792, symbol='EUR', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, avgCost=1.2182257)
2018-05-21 02:04:45,756 ib_insync.ib connectAsync INFO Synchronization complete
2018-05-21 02:04:45,838 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() started
2018-05-21 02:04:45,839 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop datetime
2018-05-21 02:04:45,840 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:04:45,840 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop close
2018-05-21 02:04:45,840 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:04:45,840 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() started
2018-05-21 02:04:45,840 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop datetime
2018-05-21 02:04:45,840 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:04:45,841 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop close
2018-05-21 02:04:45,841 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:04:45,841 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() started
2018-05-21 02:04:45,841 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop datetime
2018-05-21 02:04:45,841 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:04:45,841 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop close
2018-05-21 02:04:45,842 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:04:45,842 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() started
2018-05-21 02:04:45,842 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop datetime
2018-05-21 02:04:45,842 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:04:45,842 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop close
2018-05-21 02:04:45,842 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:04:45,842 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() started
2018-05-21 02:04:45,843 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop datetime
2018-05-21 02:04:45,843 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:04:45,843 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop close
2018-05-21 02:04:45,843 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:04:45,843 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() started
2018-05-21 02:04:45,843 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop datetime
2018-05-21 02:04:45,844 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:04:45,844 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop close
2018-05-21 02:04:45,844 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:04:45,844 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() started
2018-05-21 02:04:45,844 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop datetime
2018-05-21 02:04:45,844 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:04:45,844 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop close
2018-05-21 02:04:45,845 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:04:45,845 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() started
2018-05-21 02:04:45,845 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop datetime
2018-05-21 02:04:45,845 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:04:45,845 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop close
2018-05-21 02:04:45,845 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:04:45,846 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() started
2018-05-21 02:04:45,846 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop datetime
2018-05-21 02:04:45,846 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop diffToNextRowInMinutes
2018-05-21 02:04:45,846 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop close
2018-05-21 02:04:45,846 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() complete
2018-05-21 02:04:45,846 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() started
2018-05-21 02:04:45,846 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop datetime
2018-05-21 02:04:45,847 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop diffToNextRowInMinutes
2018-05-21 02:04:45,847 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop close
2018-05-21 02:04:45,847 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() complete
2018-05-21 02:04:45,847 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() started
2018-05-21 02:04:45,847 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop datetime
2018-05-21 02:04:45,847 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop diffToNextRowInMinutes
2018-05-21 02:04:45,848 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop close
2018-05-21 02:04:45,848 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() complete
2018-05-21 02:04:45,848 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() started
2018-05-21 02:04:45,848 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop datetime
2018-05-21 02:04:45,848 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop diffToNextRowInMinutes
2018-05-21 02:04:45,848 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop close
2018-05-21 02:04:45,849 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() complete
2018-05-21 02:04:45,849 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() started
2018-05-21 02:04:45,849 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop datetime
2018-05-21 02:04:45,849 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop diffToNextRowInMinutes
2018-05-21 02:04:45,849 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop close
2018-05-21 02:04:45,849 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() complete
2018-05-21 02:04:45,849 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() started
2018-05-21 02:04:45,850 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop datetime
2018-05-21 02:04:45,850 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop diffToNextRowInMinutes
2018-05-21 02:04:45,850 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop close
2018-05-21 02:04:45,850 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() complete
2018-05-21 02:04:45,851 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-21 02:04:45,851 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-21 02:04:45,851 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 02:04:49,047 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-21 02:04:49,048 sqlalchemy.engine.base.Engine _execute_context INFO PRAGMA table_info("MarketDataInfoTable")
2018-05-21 02:04:49,048 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 02:04:49,052 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-21 02:04:49,053 sqlalchemy.engine.base.Engine _execute_context INFO SELECT count(*) AS count_1 
FROM (SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable") AS anon_1
2018-05-21 02:04:49,053 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 02:04:49,055 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName", "MarketDataInfoTable".description, "MarketDataInfoTable"."conId", "MarketDataInfoTable".symbol, "MarketDataInfoTable".currency, "MarketDataInfoTable".exchange, "MarketDataInfoTable".category, "MarketDataInfoTable"."secType", "MarketDataInfoTable"."earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-21 02:04:49,055 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 02:04:49,059 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-21 02:04:49,059 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 02:04:49,529 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-21 02:04:49,582 apscheduler.scheduler start INFO Scheduler started
2018-05-21 02:04:49,712 apscheduler.scheduler _real_add_job INFO Added job "asyncioJobGetHistoricalData_000000" to job store "default"
2018-05-21 02:04:50,002 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='0/5'], next run at: 2018-05-21 02:04:55 CEST)" (scheduled at 2018-05-21 02:04:50+02:00)
2018-05-21 02:05:16,059 trading.containerClass myTimeoutCallback INFO timeout callback 26.532765
2018-05-21 02:05:16,062 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='0/5'], next run at: 2018-05-21 02:04:55 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 02:05:16,063 trading.containerClass mySoftTimeoutCallback INFO soft time out watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB connected to 127.0.0.1:4002 clientId=24>, port=4002, clientId='24', appStartupTime=15)
2018-05-21 02:05:17,036 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17659495, marketValue=218846.66, averageCost=1.2182257, unrealizedPNL=-7743.32, realizedPNL=0.0, account='DU946735')
2018-05-21 02:05:17,056 ib_insync.wrapper error INFO Warning 2106, reqId -1: HMDS data farm connection is OK:cashhmds
2018-05-21 02:05:17,057 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2106, errorString: HMDS data farm connection is OK:cashhmds, localSymbol: None
2018-05-21 02:05:29,852 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, AUD; is going to be performed because earliestDateTime as queried directly from IB is: 2005-09-28 03:30:00
2018-05-21 02:08:06,504 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-20 00:04:00
2018-05-21 02:08:08,159 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-21 00:04:00
2018-05-21 02:08:19,292 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-20 00:04:00; endDT: 2018-05-21 00:01:00; durationString: 86220 S; timeout: 1800
2018-05-21 02:08:22,178 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.176455, marketValue=218820.63, averageCost=1.2182257, unrealizedPNL=-7769.35, realizedPNL=0.0, account='DU946735')
2018-05-21 02:08:22,203 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='0/5'], next run at: 2018-05-21 02:05:20 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 02:08:31,861 apscheduler.executors.default run_coroutine_job ERROR Job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='0/5'], next run at: 2018-05-21 02:08:25 CEST)" raised an exception
Traceback (most recent call last):
  File "/home/bn/anaconda3/envs/trading/lib/python3.6/site-packages/apscheduler/executors/base_py3.py", line 29, in run_coroutine_job
    retval = await job.func(*job.args, **job.kwargs)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 634, in asyncioJobGetHistoricalData
    df.drop(df[df.datetime == pd.to_datetime('2018-05-20 23:32:00')].index, inplace=True)
NameError: name 'df' is not defined
2018-05-21 02:08:34,854 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='0/5'], next run at: 2018-05-21 02:08:35 CEST)" (scheduled at 2018-05-21 02:08:30+02:00)
2018-05-21 02:09:14,150 trading.containerClass myTimeoutCallback INFO timeout callback 51.567781
2018-05-21 02:09:14,151 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='0/5'], next run at: 2018-05-21 02:08:35 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 02:09:14,152 trading.containerClass mySoftTimeoutCallback INFO soft time out watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB connected to 127.0.0.1:4002 clientId=24>, port=4002, clientId='24', appStartupTime=15)
2018-05-21 02:09:14,293 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, AUD; is going to be performed because earliestDateTime as queried directly from IB is: 2005-09-28 03:30:00
2018-05-21 02:09:14,294 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-20 00:04:00
2018-05-21 02:09:14,294 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-21 00:04:00
2018-05-21 02:09:14,294 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-20 00:04:00; endDT: 2018-05-20 23:53:00; durationString: 85740 S; timeout: 1800
2018-05-21 02:09:14,797 apscheduler.executors.default run_coroutine_job ERROR Job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='0/5'], next run at: 2018-05-21 02:09:15 CEST)" raised an exception
Traceback (most recent call last):
  File "/home/bn/anaconda3/envs/trading/lib/python3.6/site-packages/apscheduler/executors/base_py3.py", line 29, in run_coroutine_job
    retval = await job.func(*job.args, **job.kwargs)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 634, in asyncioJobGetHistoricalData
    df.drop(df[df.datetime == pd.to_datetime('2018-05-20 23:32:00')].index, inplace=True)
NameError: name 'df' is not defined
2018-05-21 02:09:15,003 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='0/5'], next run at: 2018-05-21 02:09:20 CEST)" (scheduled at 2018-05-21 02:09:15+02:00)
2018-05-21 02:09:16,532 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, AUD; is going to be performed because earliestDateTime as queried directly from IB is: 2005-09-28 03:30:00
2018-05-21 02:09:16,533 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-20 00:04:00
2018-05-21 02:09:16,533 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-21 00:04:00
2018-05-21 02:09:16,533 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-20 00:04:00; endDT: 2018-05-20 23:46:00; durationString: 85320 S; timeout: 1800
2018-05-21 02:09:17,075 apscheduler.executors.default run_coroutine_job ERROR Job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='0/5'], next run at: 2018-05-21 02:09:20 CEST)" raised an exception
Traceback (most recent call last):
  File "/home/bn/anaconda3/envs/trading/lib/python3.6/site-packages/apscheduler/executors/base_py3.py", line 29, in run_coroutine_job
    retval = await job.func(*job.args, **job.kwargs)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 634, in asyncioJobGetHistoricalData
    df.drop(df[df.datetime == pd.to_datetime('2018-05-20 23:32:00')].index, inplace=True)
NameError: name 'df' is not defined
2018-05-21 02:09:20,005 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='0/5'], next run at: 2018-05-21 02:09:25 CEST)" (scheduled at 2018-05-21 02:09:20+02:00)
2018-05-21 02:09:21,234 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, AUD; is going to be performed because earliestDateTime as queried directly from IB is: 2005-09-28 03:30:00
2018-05-21 02:09:21,235 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-20 00:04:00
2018-05-21 02:09:21,235 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-21 00:04:00
2018-05-21 02:09:21,236 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-20 00:04:00; endDT: 2018-05-20 23:55:00; durationString: 85860 S; timeout: 1800
2018-05-21 02:09:21,786 apscheduler.executors.default run_coroutine_job ERROR Job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='0/5'], next run at: 2018-05-21 02:09:25 CEST)" raised an exception
Traceback (most recent call last):
  File "/home/bn/anaconda3/envs/trading/lib/python3.6/site-packages/apscheduler/executors/base_py3.py", line 29, in run_coroutine_job
    retval = await job.func(*job.args, **job.kwargs)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 634, in asyncioJobGetHistoricalData
    df.drop(df[df.datetime == pd.to_datetime('2018-05-20 23:32:00')].index, inplace=True)
NameError: name 'df' is not defined
2018-05-21 02:09:25,004 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='0/5'], next run at: 2018-05-21 02:09:30 CEST)" (scheduled at 2018-05-21 02:09:25+02:00)
2018-05-21 02:09:32,225 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='0/5'], next run at: 2018-05-21 02:09:30 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 02:09:32,324 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, AUD; is going to be performed because earliestDateTime as queried directly from IB is: 2005-09-28 03:30:00
2018-05-21 02:09:47,136 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-20 00:04:00
2018-05-21 02:09:47,137 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-21 00:04:00
2018-05-21 02:09:47,137 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-20 00:04:00; endDT: 2018-05-20 23:37:00; durationString: 84780 S; timeout: 1800
2018-05-21 02:09:47,139 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='0/5'], next run at: 2018-05-21 02:09:35 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 02:09:54,041 apscheduler.executors.default run_coroutine_job ERROR Job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='0/5'], next run at: 2018-05-21 02:09:50 CEST)" raised an exception
Traceback (most recent call last):
  File "/home/bn/anaconda3/envs/trading/lib/python3.6/site-packages/apscheduler/executors/base_py3.py", line 29, in run_coroutine_job
    retval = await job.func(*job.args, **job.kwargs)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 634, in asyncioJobGetHistoricalData
    df.drop(df[df.datetime == pd.to_datetime('2018-05-20 23:32:00')].index, inplace=True)
NameError: name 'df' is not defined
2018-05-21 02:09:54,042 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='0/5'], next run at: 2018-05-21 02:09:55 CEST)" (scheduled at 2018-05-21 02:09:50+02:00)
2018-05-21 02:09:56,463 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='0/5'], next run at: 2018-05-21 02:09:55 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 02:09:56,564 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, AUD; is going to be performed because earliestDateTime as queried directly from IB is: 2005-09-28 03:30:00
2018-05-21 02:09:58,056 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-20 00:04:00
2018-05-21 02:09:58,057 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-21 00:04:00
2018-05-21 02:09:58,057 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-20 00:04:00; endDT: 2018-05-21 00:00:00; durationString: 86160 S; timeout: 1800
2018-05-21 02:10:31,982 apscheduler.executors.default run_coroutine_job ERROR Job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='0/5'], next run at: 2018-05-21 02:10:00 CEST)" raised an exception
Traceback (most recent call last):
  File "/home/bn/anaconda3/envs/trading/lib/python3.6/site-packages/apscheduler/executors/base_py3.py", line 29, in run_coroutine_job
    retval = await job.func(*job.args, **job.kwargs)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 634, in asyncioJobGetHistoricalData
    df.drop(df[df.datetime == pd.to_datetime('2018-05-20 23:32:00')].index, inplace=True)
NameError: name 'df' is not defined
2018-05-21 02:10:31,983 trading.containerClass myTimeoutCallback INFO timeout callback 33.603283
2018-05-21 02:10:31,986 trading.containerClass mySoftTimeoutCallback INFO soft time out watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB connected to 127.0.0.1:4002 clientId=24>, port=4002, clientId='24', appStartupTime=15)
2018-05-21 02:10:31,986 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='0/5'], next run at: 2018-05-21 02:10:35 CEST)" (scheduled at 2018-05-21 02:10:30+02:00)
2018-05-21 02:10:34,010 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, AUD; is going to be performed because earliestDateTime as queried directly from IB is: 2005-09-28 03:30:00
2018-05-21 02:10:34,692 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-20 00:04:00
2018-05-21 02:10:34,692 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-21 00:04:00
2018-05-21 02:10:34,692 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-20 00:04:00; endDT: 2018-05-20 23:40:00; durationString: 84960 S; timeout: 1800
2018-05-21 02:10:35,002 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='0/5'], next run at: 2018-05-21 02:10:35 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 02:10:38,701 apscheduler.executors.default run_coroutine_job ERROR Job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='0/5'], next run at: 2018-05-21 02:10:40 CEST)" raised an exception
Traceback (most recent call last):
  File "/home/bn/anaconda3/envs/trading/lib/python3.6/site-packages/apscheduler/executors/base_py3.py", line 29, in run_coroutine_job
    retval = await job.func(*job.args, **job.kwargs)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 616, in asyncioJobGetHistoricalData
    if timeOutOccured is not None and timeOutOccured:
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 616, in asyncioJobGetHistoricalData
    if timeOutOccured is not None and timeOutOccured:
  File "/snap/pycharm-professional/66/helpers/pydev/_pydevd_bundle/pydevd_frame.py", line 620, in trace_dispatch
    self.do_wait_suspend(thread, frame, event, arg)
  File "/snap/pycharm-professional/66/helpers/pydev/_pydevd_bundle/pydevd_frame.py", line 125, in do_wait_suspend
    self._args[0].do_wait_suspend(*args, **kwargs)
  File "/snap/pycharm-professional/66/helpers/pydev/pydevd.py", line 812, in do_wait_suspend
    time.sleep(0.01)
KeyboardInterrupt
2018-05-21 02:10:39,062 ib_insync.client _onSocketDisconnected ERROR Peer closed connection
2018-05-21 02:10:39,062 trading.containerClass myStoppingCallback INFO stopping watchdog callback: Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-21 02:10:39,062 ib_insync.Watchdog stop INFO Stopping
2018-05-21 02:10:39,062 ib_insync.ib disconnect INFO BN added disconnect in ib
2018-05-21 02:10:39,062 ib_insync.IBC terminateAsync INFO Terminating
2018-05-21 02:10:39,063 trading.containerClass myStoppedCallback INFO stopped watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-21 02:10:39,063 ib_insync.Watchdog scheduleRestart INFO Schedule restart in 2s
2018-05-21 02:10:39,063 trading.containerClass myDisconnectedCallback INFO disconnected callback
2018-05-21 02:10:39,063 trading.containerClass myDisconnectedCallback INFO removing jobs from the scheduler
2018-05-21 02:10:39,063 trading.containerClass myDisconnectedCallback INFO scheduler: removing job asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='0/5'], next run at: 2018-05-21 02:10:40 CEST)
2018-05-21 02:10:39,063 apscheduler.scheduler remove_job INFO Removed job asyncioJobGetHistoricalData_000000
2018-05-21 02:10:39,063 trading.containerClass myDisconnectedCallback INFO removing requests for recent historical bars
2018-05-21 02:10:39,063 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: []
2018-05-21 02:10:41,064 trading.containerClass myStartingCallback INFO starting watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-21 02:10:41,064 ib_insync.Watchdog start INFO Starting
2018-05-21 02:10:41,064 ib_insync.IBC startAsync INFO Starting
2018-05-21 02:10:44,633 ib_insync.Watchdog start INFO Starting
2018-05-21 02:10:44,635 quamash <module> INFO Using Qt Implementation: PyQt5
2018-05-21 02:10:44,683 ib_insync.IBC startAsync INFO Starting
2018-05-21 02:10:56,071 ib_insync.client connectAsync INFO Connecting to 127.0.0.1:4002 with clientId 24...
2018-05-21 02:10:56,072 ib_insync.client _onSocketConnected INFO Connected
2018-05-21 02:10:56,102 ib_insync.client _onSocketHasData INFO Logged on to server version 141
2018-05-21 02:10:56,147 ib_insync.client connectAsync INFO API connection ready
2018-05-21 02:10:56,203 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.176455, marketValue=218820.63, averageCost=1.2182257, unrealizedPNL=-7769.35, realizedPNL=0.0, account='DU946735')
2018-05-21 02:10:56,203 ib_insync.wrapper position INFO position: Position(account='DU946735', contract=Contract(secType='CASH', conId=12087792, symbol='EUR', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, avgCost=1.2182257)
2018-05-21 02:10:56,209 ib_insync.ib connectAsync INFO Synchronization complete
2018-05-21 02:10:56,209 trading.containerClass myConnectedCallback INFO connected callback
2018-05-21 02:10:56,209 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:10:56,211 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('1 days 00:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:10:56,339 ib_insync.client _onSocketDisconnected ERROR Peer closed connection
2018-05-21 02:10:56,339 trading.containerClass myStoppingCallback INFO stopping watchdog callback: Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-21 02:10:56,339 ib_insync.Watchdog stop INFO Stopping
2018-05-21 02:10:56,339 ib_insync.ib disconnect INFO BN added disconnect in ib
2018-05-21 02:10:56,339 ib_insync.IBC terminateAsync INFO Terminating
2018-05-21 02:10:56,732 trading.containerClass myStoppedCallback INFO stopped watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-21 02:10:56,732 ib_insync.Watchdog scheduleRestart INFO Schedule restart in 2s
2018-05-21 02:10:56,732 trading.containerClass myDisconnectedCallback INFO disconnected callback
2018-05-21 02:10:56,732 trading.containerClass myDisconnectedCallback INFO removing jobs from the scheduler
2018-05-21 02:10:56,732 trading.containerClass myDisconnectedCallback INFO removing requests for recent historical bars
2018-05-21 02:10:56,732 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: []
2018-05-21 02:10:58,734 trading.containerClass myStartingCallback INFO starting watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-21 02:10:58,734 ib_insync.Watchdog start INFO Starting
2018-05-21 02:10:58,734 ib_insync.IBC startAsync INFO Starting
2018-05-21 02:11:14,639 ib_insync.Watchdog start INFO Starting
2018-05-21 02:11:14,640 quamash <module> INFO Using Qt Implementation: PyQt5
2018-05-21 02:11:14,665 ib_insync.IBC startAsync INFO Starting
2018-05-21 02:11:29,675 ib_insync.client connectAsync INFO Connecting to 127.0.0.1:4002 with clientId 24...
2018-05-21 02:11:29,677 ib_insync.client _onSocketConnected INFO Connected
2018-05-21 02:11:29,723 ib_insync.client _onSocketHasData INFO Logged on to server version 141
2018-05-21 02:11:29,767 ib_insync.client connectAsync INFO API connection ready
2018-05-21 02:11:29,822 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17631995, marketValue=218795.51, averageCost=1.2182257, unrealizedPNL=-7794.47, realizedPNL=0.0, account='DU946735')
2018-05-21 02:11:29,823 ib_insync.wrapper position INFO position: Position(account='DU946735', contract=Contract(secType='CASH', conId=12087792, symbol='EUR', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, avgCost=1.2182257)
2018-05-21 02:11:29,838 ib_insync.ib connectAsync INFO Synchronization complete
2018-05-21 02:11:29,913 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() started
2018-05-21 02:11:29,914 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop datetime
2018-05-21 02:11:29,914 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:11:29,914 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop close
2018-05-21 02:11:29,914 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:11:29,915 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() started
2018-05-21 02:11:29,915 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop datetime
2018-05-21 02:11:29,915 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:11:29,915 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop close
2018-05-21 02:11:29,915 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:11:29,915 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() started
2018-05-21 02:11:29,916 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop datetime
2018-05-21 02:11:29,916 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:11:29,916 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop close
2018-05-21 02:11:29,916 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:11:29,916 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() started
2018-05-21 02:11:29,916 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop datetime
2018-05-21 02:11:29,917 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:11:29,917 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop close
2018-05-21 02:11:29,917 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:11:29,917 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() started
2018-05-21 02:11:29,917 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop datetime
2018-05-21 02:11:29,917 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:11:29,918 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop close
2018-05-21 02:11:29,918 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:11:29,918 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() started
2018-05-21 02:11:29,918 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop datetime
2018-05-21 02:11:29,918 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:11:29,918 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop close
2018-05-21 02:11:29,919 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:11:29,919 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() started
2018-05-21 02:11:29,919 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop datetime
2018-05-21 02:11:29,919 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:11:29,919 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop close
2018-05-21 02:11:29,919 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:11:29,919 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() started
2018-05-21 02:11:29,920 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop datetime
2018-05-21 02:11:29,920 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:11:29,920 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop close
2018-05-21 02:11:29,920 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:11:29,920 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() started
2018-05-21 02:11:29,920 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop datetime
2018-05-21 02:11:29,921 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop diffToNextRowInMinutes
2018-05-21 02:11:29,921 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop close
2018-05-21 02:11:29,921 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() complete
2018-05-21 02:11:29,921 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() started
2018-05-21 02:11:29,921 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop datetime
2018-05-21 02:11:29,921 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop diffToNextRowInMinutes
2018-05-21 02:11:29,921 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop close
2018-05-21 02:11:29,922 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() complete
2018-05-21 02:11:29,922 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() started
2018-05-21 02:11:29,922 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop datetime
2018-05-21 02:11:29,922 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop diffToNextRowInMinutes
2018-05-21 02:11:29,922 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop close
2018-05-21 02:11:29,922 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() complete
2018-05-21 02:11:29,923 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() started
2018-05-21 02:11:29,923 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop datetime
2018-05-21 02:11:29,923 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop diffToNextRowInMinutes
2018-05-21 02:11:29,923 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop close
2018-05-21 02:11:29,923 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() complete
2018-05-21 02:11:29,923 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() started
2018-05-21 02:11:29,923 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop datetime
2018-05-21 02:11:29,924 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop diffToNextRowInMinutes
2018-05-21 02:11:29,924 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop close
2018-05-21 02:11:29,924 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() complete
2018-05-21 02:11:29,924 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() started
2018-05-21 02:11:29,924 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop datetime
2018-05-21 02:11:29,924 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop diffToNextRowInMinutes
2018-05-21 02:11:29,925 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop close
2018-05-21 02:11:29,925 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() complete
2018-05-21 02:11:29,925 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-21 02:11:29,926 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-21 02:11:29,926 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 02:11:33,199 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-21 02:11:33,200 sqlalchemy.engine.base.Engine _execute_context INFO PRAGMA table_info("MarketDataInfoTable")
2018-05-21 02:11:33,200 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 02:11:33,203 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-21 02:11:33,204 sqlalchemy.engine.base.Engine _execute_context INFO SELECT count(*) AS count_1 
FROM (SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable") AS anon_1
2018-05-21 02:11:33,204 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 02:11:33,206 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName", "MarketDataInfoTable".description, "MarketDataInfoTable"."conId", "MarketDataInfoTable".symbol, "MarketDataInfoTable".currency, "MarketDataInfoTable".exchange, "MarketDataInfoTable".category, "MarketDataInfoTable"."secType", "MarketDataInfoTable"."earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-21 02:11:33,206 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 02:11:33,210 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-21 02:11:33,210 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 02:11:33,829 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-21 02:11:33,850 apscheduler.scheduler start INFO Scheduler started
2018-05-21 02:11:33,928 apscheduler.scheduler _real_add_job INFO Added job "asyncioJobGetHistoricalData_000000" to job store "default"
2018-05-21 02:11:35,003 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='0/5'], next run at: 2018-05-21 02:11:40 CEST)" (scheduled at 2018-05-21 02:11:35+02:00)
2018-05-21 02:11:49,269 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='0/5'], next run at: 2018-05-21 02:11:40 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 02:11:50,002 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='0/5'], next run at: 2018-05-21 02:11:50 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 02:11:50,220 ib_insync.wrapper error INFO Warning 2106, reqId -1: HMDS data farm connection is OK:cashhmds
2018-05-21 02:11:50,221 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2106, errorString: HMDS data farm connection is OK:cashhmds, localSymbol: None
2018-05-21 02:11:50,432 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: EUR, AUD; is going to be performed because earliestDateTime as queried directly from IB is: 2005-09-28 03:30:00
2018-05-21 02:11:56,265 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-20 00:11:00
2018-05-21 02:11:56,266 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-21 00:11:00
2018-05-21 02:11:56,266 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: EUR, AUD; startDT: 2018-05-20 00:11:00; endDT: 2018-05-21 00:10:00; durationString: 86340 S; timeout: 1800
2018-05-21 02:11:56,268 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='0/5'], next run at: 2018-05-21 02:11:55 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 02:12:10,031 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1439; elapsed time: 0:00:00.182047
2018-05-21 02:12:10,031 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 1439; elapsed time: 0:00:00.707368
2018-05-21 02:12:21,475 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: EUR, AUD; startDT: 2018-05-20 00:11:00; endDT: 2018-05-21 00:10:00; durationString: 86340 S; elapsedTime: 0:00:25.208614; rows: 1439; rowsTotal: 4637014
2018-05-21 02:12:21,477 trading.containerClass myTimeoutCallback INFO timeout callback 24.133258
2018-05-21 02:12:21,482 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='0/5'], next run at: 2018-05-21 02:12:00 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 02:12:21,485 trading.containerClass mySoftTimeoutCallback INFO soft time out watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB connected to 127.0.0.1:4002 clientId=24>, port=4002, clientId='24', appStartupTime=15)
2018-05-21 02:12:40,843 apscheduler.executors.default run_coroutine_job ERROR Job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='0/5'], next run at: 2018-05-21 02:12:25 CEST)" raised an exception
Traceback (most recent call last):
  File "/home/bn/anaconda3/envs/trading/lib/python3.6/site-packages/apscheduler/executors/base_py3.py", line 29, in run_coroutine_job
    retval = await job.func(*job.args, **job.kwargs)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 518, in asyncioJobGetHistoricalData
    _logger.info(a)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 518, in asyncioJobGetHistoricalData
    _logger.info(a)
  File "/snap/pycharm-professional/66/helpers/pydev/_pydevd_bundle/pydevd_frame.py", line 714, in trace_dispatch
    self.do_wait_suspend(thread, frame, event, arg)
  File "/snap/pycharm-professional/66/helpers/pydev/_pydevd_bundle/pydevd_frame.py", line 125, in do_wait_suspend
    self._args[0].do_wait_suspend(*args, **kwargs)
  File "/snap/pycharm-professional/66/helpers/pydev/pydevd.py", line 812, in do_wait_suspend
    time.sleep(0.01)
KeyboardInterrupt
2018-05-21 02:12:40,846 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='0/5'], next run at: 2018-05-21 02:12:45 CEST)" (scheduled at 2018-05-21 02:12:40+02:00)
2018-05-21 02:12:41,225 ib_insync.client _onSocketDisconnected ERROR Peer closed connection
2018-05-21 02:12:41,225 trading.containerClass myStoppingCallback INFO stopping watchdog callback: Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-21 02:12:41,225 ib_insync.Watchdog stop INFO Stopping
2018-05-21 02:12:41,225 ib_insync.ib disconnect INFO BN added disconnect in ib
2018-05-21 02:12:41,225 ib_insync.IBC terminateAsync INFO Terminating
2018-05-21 02:12:41,226 trading.containerClass myStoppedCallback INFO stopped watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-21 02:12:41,226 ib_insync.Watchdog scheduleRestart INFO Schedule restart in 2s
2018-05-21 02:12:41,226 trading.containerClass myDisconnectedCallback INFO disconnected callback
2018-05-21 02:12:41,226 trading.containerClass myDisconnectedCallback INFO removing jobs from the scheduler
2018-05-21 02:12:41,226 trading.containerClass myDisconnectedCallback INFO scheduler: removing job asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='0/5'], next run at: 2018-05-21 02:12:45 CEST)
2018-05-21 02:12:41,226 apscheduler.scheduler remove_job INFO Removed job asyncioJobGetHistoricalData_000000
2018-05-21 02:12:41,226 trading.containerClass myDisconnectedCallback INFO removing requests for recent historical bars
2018-05-21 02:12:41,226 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: []
2018-05-21 02:12:43,227 trading.containerClass myStartingCallback INFO starting watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-21 02:12:43,227 ib_insync.Watchdog start INFO Starting
2018-05-21 02:12:43,227 ib_insync.IBC startAsync INFO Starting
2018-05-21 02:42:09,600 ib_insync.Watchdog start INFO Starting
2018-05-21 02:42:09,601 quamash <module> INFO Using Qt Implementation: PyQt5
2018-05-21 02:42:09,629 ib_insync.IBC startAsync INFO Starting
2018-05-21 02:42:24,643 ib_insync.client connectAsync INFO Connecting to 127.0.0.1:4002 with clientId 24...
2018-05-21 02:42:24,645 ib_insync.client _onSocketConnected INFO Connected
2018-05-21 02:42:24,695 ib_insync.client _onSocketHasData INFO Logged on to server version 141
2018-05-21 02:42:24,699 ib_insync.client connectAsync INFO API connection ready
2018-05-21 02:42:24,779 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17540505, marketValue=218625.33, averageCost=1.2182257, unrealizedPNL=-7964.65, realizedPNL=0.0, account='DU946735')
2018-05-21 02:42:24,780 ib_insync.wrapper position INFO position: Position(account='DU946735', contract=Contract(secType='CASH', conId=12087792, symbol='EUR', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, avgCost=1.2182257)
2018-05-21 02:42:24,807 ib_insync.ib connectAsync INFO Synchronization complete
2018-05-21 02:42:24,919 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() started
2018-05-21 02:42:24,920 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop datetime
2018-05-21 02:42:24,920 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:42:24,921 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop close
2018-05-21 02:42:24,921 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:42:24,921 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() started
2018-05-21 02:42:24,921 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop datetime
2018-05-21 02:42:24,921 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:42:24,921 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop close
2018-05-21 02:42:24,922 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:42:24,922 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() started
2018-05-21 02:42:24,922 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop datetime
2018-05-21 02:42:24,922 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:42:24,922 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop close
2018-05-21 02:42:24,922 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:42:24,923 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() started
2018-05-21 02:42:24,923 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop datetime
2018-05-21 02:42:24,923 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:42:24,923 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop close
2018-05-21 02:42:24,923 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:42:24,923 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() started
2018-05-21 02:42:24,924 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop datetime
2018-05-21 02:42:24,924 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:42:24,924 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop close
2018-05-21 02:42:24,924 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:42:24,924 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() started
2018-05-21 02:42:24,924 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop datetime
2018-05-21 02:42:24,925 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:42:24,925 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop close
2018-05-21 02:42:24,925 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:42:24,925 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() started
2018-05-21 02:42:24,925 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop datetime
2018-05-21 02:42:24,925 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:42:24,926 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop close
2018-05-21 02:42:24,926 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:42:24,926 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() started
2018-05-21 02:42:24,926 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop datetime
2018-05-21 02:42:24,926 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:42:24,926 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop close
2018-05-21 02:42:24,927 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:42:24,927 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() started
2018-05-21 02:42:24,927 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop datetime
2018-05-21 02:42:24,927 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop diffToNextRowInMinutes
2018-05-21 02:42:24,927 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop close
2018-05-21 02:42:24,927 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() complete
2018-05-21 02:42:24,928 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() started
2018-05-21 02:42:24,928 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop datetime
2018-05-21 02:42:24,928 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop diffToNextRowInMinutes
2018-05-21 02:42:24,928 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop close
2018-05-21 02:42:24,928 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() complete
2018-05-21 02:42:24,928 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() started
2018-05-21 02:42:24,929 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop datetime
2018-05-21 02:42:24,929 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop diffToNextRowInMinutes
2018-05-21 02:42:24,929 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop close
2018-05-21 02:42:24,929 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() complete
2018-05-21 02:42:24,929 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() started
2018-05-21 02:42:24,929 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop datetime
2018-05-21 02:42:24,930 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop diffToNextRowInMinutes
2018-05-21 02:42:24,930 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop close
2018-05-21 02:42:24,930 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() complete
2018-05-21 02:42:24,930 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() started
2018-05-21 02:42:24,930 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop datetime
2018-05-21 02:42:24,930 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop diffToNextRowInMinutes
2018-05-21 02:42:24,930 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop close
2018-05-21 02:42:24,931 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() complete
2018-05-21 02:42:24,931 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() started
2018-05-21 02:42:24,931 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop datetime
2018-05-21 02:42:24,931 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop diffToNextRowInMinutes
2018-05-21 02:42:24,931 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop close
2018-05-21 02:42:24,932 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() complete
2018-05-21 02:42:24,932 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-21 02:42:24,933 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-21 02:42:24,933 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 02:42:28,183 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-21 02:42:28,184 sqlalchemy.engine.base.Engine _execute_context INFO PRAGMA table_info("MarketDataInfoTable")
2018-05-21 02:42:28,184 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 02:42:28,188 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-21 02:42:28,188 sqlalchemy.engine.base.Engine _execute_context INFO SELECT count(*) AS count_1 
FROM (SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable") AS anon_1
2018-05-21 02:42:28,188 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 02:42:28,190 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName", "MarketDataInfoTable".description, "MarketDataInfoTable"."conId", "MarketDataInfoTable".symbol, "MarketDataInfoTable".currency, "MarketDataInfoTable".exchange, "MarketDataInfoTable".category, "MarketDataInfoTable"."secType", "MarketDataInfoTable"."earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-21 02:42:28,191 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 02:42:28,194 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-21 02:42:28,194 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 02:42:28,813 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-21 02:42:28,834 apscheduler.scheduler start INFO Scheduler started
2018-05-21 02:42:28,834 root runProg INFO Now updating the settings for the request of recent historical bars
2018-05-21 02:42:28,834 root runProg INFO Now requesting initial recent historical bars
2018-05-21 02:42:28,835 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:42:28,836 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:42:30,369 ib_insync.wrapper error INFO Warning 2106, reqId -1: HMDS data farm connection is OK:cashhmds
2018-05-21 02:42:30,369 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2106, errorString: HMDS data farm connection is OK:cashhmds, localSymbol: None
2018-05-21 02:42:30,501 ib_insync.wrapper error INFO Warning 2119, reqId -1: Market data farm is connecting:cashfarm
2018-05-21 02:42:30,501 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2119, errorString: Market data farm is connecting:cashfarm, localSymbol: None
2018-05-21 02:42:30,629 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:42:31,001 ib_insync.wrapper error INFO Warning 2119, reqId -1: Market data farm is connecting:jfarm
2018-05-21 02:42:31,001 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2119, errorString: Market data farm is connecting:jfarm, localSymbol: None
2018-05-21 02:42:31,300 ib_insync.wrapper error INFO Warning 2104, reqId -1: Market data farm connection is OK:cashfarm
2018-05-21 02:42:31,301 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2104, errorString: Market data farm connection is OK:cashfarm, localSymbol: None
2018-05-21 02:42:31,563 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: EUR.AUD; 2018-05-20 23:42:00+00:00; 2018-05-21 00:41:00+00:00 60; 2018-05-21 00:34:00; 2018-05-21 00:42:00; False
2018-05-21 02:42:31,695 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.063160
2018-05-21 02:42:31,695 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.131716
2018-05-21 02:42:33,411 ib_insync.wrapper error INFO Warning 2104, reqId -1: Market data farm connection is OK:jfarm
2018-05-21 02:42:33,411 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2104, errorString: Market data farm connection is OK:jfarm, localSymbol: None
2018-05-21 02:42:36,732 ib_insync.wrapper error INFO Warning 2106, reqId -1: HMDS data farm connection is OK:hkhmds
2018-05-21 02:42:36,732 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2106, errorString: HMDS data farm connection is OK:hkhmds, localSymbol: None
2018-05-21 02:42:37,767 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for SPX. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:42:37,867 ib_insync.wrapper error INFO Warning 2119, reqId -1: Market data farm is connecting:usfarm.us
2018-05-21 02:42:37,867 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2119, errorString: Market data farm is connecting:usfarm.us, localSymbol: None
2018-05-21 02:42:39,274 ib_insync.wrapper error INFO Warning 2104, reqId -1: Market data farm connection is OK:usfarm.us
2018-05-21 02:42:39,274 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2104, errorString: Market data farm connection is OK:usfarm.us, localSymbol: None
2018-05-21 02:42:40,675 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: N225; 2018-05-21 00:00:00+00:00; 2018-05-21 00:41:00+00:00 42; 2018-05-21 00:39:00; 2018-05-21 00:42:00; False
2018-05-21 02:42:40,749 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 42; elapsed time: 0:00:00.025078
2018-05-21 02:42:40,749 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 42; elapsed time: 0:00:00.073057
2018-05-21 02:42:40,749 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:42:40,761 ib_insync.wrapper error ERROR Error 162, reqId 32: Historical Market Data Service error message:API historical data query cancelled: 32
2018-05-21 02:42:40,761 trading.containerClass myErrorCallback INFO reqId: 32, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 32, localSymbol: None
2018-05-21 02:42:41,725 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:42:41,726 ib_insync.wrapper error ERROR Error 162, reqId 34: Historical Market Data Service error message:API historical data query cancelled: 34
2018-05-21 02:42:41,726 trading.containerClass myErrorCallback INFO reqId: 34, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 34, localSymbol: None
2018-05-21 02:42:42,758 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:42:42,758 ib_insync.wrapper error ERROR Error 162, reqId 35: Historical Market Data Service error message:API historical data query cancelled: 35
2018-05-21 02:42:42,759 trading.containerClass myErrorCallback INFO reqId: 35, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 35, localSymbol: None
2018-05-21 02:42:42,896 ib_insync.wrapper error INFO Warning 2108, reqId -1: Market data farm connection is inactive but should be available upon demand.usfarm.us
2018-05-21 02:42:42,896 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2108, errorString: Market data farm connection is inactive but should be available upon demand.usfarm.us, localSymbol: None
2018-05-21 02:42:42,897 ib_insync.wrapper error INFO Warning 2108, reqId -1: Market data farm connection is inactive but should be available upon demand.usfarm.us
2018-05-21 02:42:42,897 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2108, errorString: Market data farm connection is inactive but should be available upon demand.usfarm.us, localSymbol: None
2018-05-21 02:42:43,797 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:42:43,803 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:42:43,804 ib_insync.wrapper error ERROR Error 162, reqId 36: Historical Market Data Service error message:API historical data query cancelled: 36
2018-05-21 02:42:43,804 trading.containerClass myErrorCallback INFO reqId: 36, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 36, localSymbol: None
2018-05-21 02:42:44,845 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:42:44,846 ib_insync.wrapper error ERROR Error 162, reqId 37: Historical Market Data Service error message:API historical data query cancelled: 37
2018-05-21 02:42:44,846 trading.containerClass myErrorCallback INFO reqId: 37, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 37, localSymbol: None
2018-05-21 02:42:45,940 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:42:45,941 ib_insync.wrapper error ERROR Error 162, reqId 38: Historical Market Data Service error message:API historical data query cancelled: 38
2018-05-21 02:42:45,941 trading.containerClass myErrorCallback INFO reqId: 38, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 38, localSymbol: None
2018-05-21 02:42:46,943 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:42:46,944 ib_insync.wrapper error ERROR Error 162, reqId 39: Historical Market Data Service error message:API historical data query cancelled: 39
2018-05-21 02:42:46,945 trading.containerClass myErrorCallback INFO reqId: 39, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 39, localSymbol: None
2018-05-21 02:42:47,769 ib_insync.wrapper handleEvent ERROR Event barUpdateEvent(([BarData(date=datetime.datetime(2018, 5, 18, 5, 42, tzinfo=datetime.timezone.utc), open=22906.58, high=22907.14, low=22903.92, close=22903.92, barCount=10), BarData(date=datetime.datetime(2018, 5, 18, 5, 43, tzinfo=datetime.timezone.utc), open=22903.92, high=22904.43, low=22901.81, close=22902.84, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 44, tzinfo=datetime.timezone.utc), open=22902.84, high=22904.81, low=22902.84, close=22904.25, barCount=10), BarData(date=datetime.datetime(2018, 5, 18, 5, 45, tzinfo=datetime.timezone.utc), open=22904.25, high=22910.75, low=22903.47, close=22910.75, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 46, tzinfo=datetime.timezone.utc), open=22910.75, high=22912.26, low=22910.75, close=22912.26, barCount=8), BarData(date=datetime.datetime(2018, 5, 18, 5, 47, tzinfo=datetime.timezone.utc), open=22912.26, high=22913.25, low=22910.45, close=22911.33, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 48, tzinfo=datetime.timezone.utc), open=22911.33, high=22914.03, low=22910.86, close=22914.03, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 49, tzinfo=datetime.timezone.utc), open=22914.03, high=22939.73, low=22914.03, close=22928.64, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 50, tzinfo=datetime.timezone.utc), open=22928.64, high=22928.95, low=22925.15, close=22927.39, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 51, tzinfo=datetime.timezone.utc), open=22927.39, high=22928.06, low=22925.08, close=22927.47, barCount=7), BarData(date=datetime.datetime(2018, 5, 18, 5, 52, tzinfo=datetime.timezone.utc), open=22927.47, high=22927.92, low=22924.7, close=22925.83, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 53, tzinfo=datetime.timezone.utc), open=22925.83, high=22925.83, low=22923.51, close=22923.79, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 54, tzinfo=datetime.timezone.utc), open=22923.79, high=22923.79, low=22921.19, close=22923.65, barCount=6), BarData(date=datetime.datetime(2018, 5, 18, 5, 55, tzinfo=datetime.timezone.utc), open=22923.65, high=22924.99, low=22920.89, close=22924.99, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 56, tzinfo=datetime.timezone.utc), open=22924.99, high=22929.09, low=22924.99, close=22928.19, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 57, tzinfo=datetime.timezone.utc), open=22928.19, high=22928.19, low=22913.05, close=22916.27, barCount=12), BarData(date=datetime.datetime(2018, 5, 18, 5, 58, tzinfo=datetime.timezone.utc), open=22916.27, high=22916.27, low=22909.84, close=22909.84, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 59, tzinfo=datetime.timezone.utc), open=22909.84, high=22934.37, low=22908.97, close=22934.37, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 0, tzinfo=datetime.timezone.utc), open=22937.58, high=22951.89, low=22937.58, close=22950.9, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 1, tzinfo=datetime.timezone.utc), open=22950.9, high=22951.27, low=22948.75, close=22948.75, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 2, tzinfo=datetime.timezone.utc), open=22948.75, high=22960.5, low=22948.75, close=22960.5, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 3, tzinfo=datetime.timezone.utc), open=22960.5, high=22968.04, low=22955.68, close=22967.65, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 4, tzinfo=datetime.timezone.utc), open=22967.65, high=22967.65, low=22958.76, close=22959.71, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 5, tzinfo=datetime.timezone.utc), open=22959.71, high=22962.2, low=22951.61, close=22951.62, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 6, tzinfo=datetime.timezone.utc), open=22951.62, high=22951.62, low=22946.81, close=22946.81, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 7, tzinfo=datetime.timezone.utc), open=22946.81, high=22948.57, low=22945.93, close=22947.74, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 8, tzinfo=datetime.timezone.utc), open=22947.74, high=22948.83, low=22943.07, close=22947.13, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 9, tzinfo=datetime.timezone.utc), open=22947.13, high=22951.73, low=22947.13, close=22948.89, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 10, tzinfo=datetime.timezone.utc), open=22948.89, high=22950.67, low=22946.22, close=22947.42, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 11, tzinfo=datetime.timezone.utc), open=22947.42, high=22949.61, low=22940.77, close=22942.13, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 12, tzinfo=datetime.timezone.utc), open=22942.13, high=22957.73, low=22941.85, close=22957.73, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 13, tzinfo=datetime.timezone.utc), open=22957.73, high=22961.32, low=22957.73, close=22960.25, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 14, tzinfo=datetime.timezone.utc), open=22960.25, high=22965.53, low=22959.55, close=22965.53, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 15, tzinfo=datetime.timezone.utc), open=22965.52, high=22969.97, low=22965.28, close=22965.36, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 16, tzinfo=datetime.timezone.utc), open=22965.37, high=22968.17, low=22963.81, close=22968.17, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 17, tzinfo=datetime.timezone.utc), open=22968.17, high=22970.78, low=22966.13, close=22967.44, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 18, tzinfo=datetime.timezone.utc), open=22967.43, high=22968.07, low=22962.98, close=22962.98, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 19, tzinfo=datetime.timezone.utc), open=22962.98, high=22963.28, low=22958.97, close=22959.53, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 20, tzinfo=datetime.timezone.utc), open=22959.54, high=22960.67, low=22949.33, close=22949.9, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 21, tzinfo=datetime.timezone.utc), open=22949.9, high=22952.0, low=22944.55, close=22944.55, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 22, tzinfo=datetime.timezone.utc), open=22944.55, high=22947.26, low=22943.14, close=22945.87, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 23, tzinfo=datetime.timezone.utc), open=22945.86, high=22948.65, low=22945.86, close=22948.64, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 24, tzinfo=datetime.timezone.utc), open=22948.64, high=22948.65, low=22943.35, close=22944.15, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 25, tzinfo=datetime.timezone.utc), open=22944.15, high=22947.33, low=22941.88, close=22942.42, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 26, tzinfo=datetime.timezone.utc), open=22942.42, high=22943.86, low=22937.88, close=22937.88, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 27, tzinfo=datetime.timezone.utc), open=22937.88, high=22939.09, low=22936.99, close=22939.09, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 28, tzinfo=datetime.timezone.utc), open=22939.09, high=22941.82, low=22937.76, close=22937.76, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 29, tzinfo=datetime.timezone.utc), open=22937.76, high=22937.92, low=22936.22, close=22936.54, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 30, tzinfo=datetime.timezone.utc), open=22936.53, high=22936.85, low=22935.31, close=22936.83, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 31, tzinfo=datetime.timezone.utc), open=22936.83, high=22949.16, low=22936.83, close=22949.16, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 32, tzinfo=datetime.timezone.utc), open=22949.16, high=22951.02, low=22948.47, close=22949.9, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 33, tzinfo=datetime.timezone.utc), open=22949.9, high=22949.9, low=22941.97, close=22941.97, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 34, tzinfo=datetime.timezone.utc), open=22941.97, high=22941.98, low=22938.4, close=22939.72, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 35, tzinfo=datetime.timezone.utc), open=22939.72, high=22944.53, low=22939.72, close=22944.53, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 36, tzinfo=datetime.timezone.utc), open=22944.52, high=22950.75, low=22944.52, close=22950.75, barCount=6), BarData(date=datetime.datetime(2018, 5, 21, 0, 37, tzinfo=datetime.timezone.utc), open=22950.75, high=22951.18, low=22948.75, close=22951.18, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 38, tzinfo=datetime.timezone.utc), open=22951.18, high=22954.03, low=22951.18, close=22954.03, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 39, tzinfo=datetime.timezone.utc), open=22954.02, high=22960.12, low=22954.02, close=22960.11, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 40, tzinfo=datetime.timezone.utc), open=22960.12, high=22963.35, low=22959.41, close=22963.35, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 41, tzinfo=datetime.timezone.utc), open=22963.35, high=22965.68, low=22962.17, close=22965.3, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 42, tzinfo=datetime.timezone.utc), open=22965.3, high=22968.98, low=22965.3, close=22968.98, barCount=6)], False))
Traceback (most recent call last):
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/wrapper.py", line 143, in handleEvent
    event.emit(*args)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/event.py", line 76, in emit
    func(obj, *args, **kwargs)
  File "/home/bn/PycharmProjects/trading/trading/containerClass.py", line 293, in myBarUpdateCallback
    bars = self.requestRecentHistoricalBars(qc)
  File "/home/bn/PycharmProjects/trading/trading/containerClass.py", line 115, in requestRecentHistoricalBars
    timeOutTime=timeOutTime)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 71, in getHistoricalDataBars
    bars = ib.run(asyncio.wait_for(req, timeOutTime))
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/ib.py", line 251, in run
    result = util.syncAwait(future)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/util.py", line 245, in syncAwait
    result = _syncAwaitAsyncio(future)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/util.py", line 267, in _syncAwaitAsyncio
    return future.result()
asyncio.base_futures.InvalidStateError: Result is not set.
2018-05-21 02:42:47,771 ib_insync.wrapper handleEvent ERROR Event barUpdateEvent(([BarData(date=datetime.datetime(2018, 5, 18, 5, 42, tzinfo=datetime.timezone.utc), open=22906.58, high=22907.14, low=22903.92, close=22903.92, barCount=10), BarData(date=datetime.datetime(2018, 5, 18, 5, 43, tzinfo=datetime.timezone.utc), open=22903.92, high=22904.43, low=22901.81, close=22902.84, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 44, tzinfo=datetime.timezone.utc), open=22902.84, high=22904.81, low=22902.84, close=22904.25, barCount=10), BarData(date=datetime.datetime(2018, 5, 18, 5, 45, tzinfo=datetime.timezone.utc), open=22904.25, high=22910.75, low=22903.47, close=22910.75, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 46, tzinfo=datetime.timezone.utc), open=22910.75, high=22912.26, low=22910.75, close=22912.26, barCount=8), BarData(date=datetime.datetime(2018, 5, 18, 5, 47, tzinfo=datetime.timezone.utc), open=22912.26, high=22913.25, low=22910.45, close=22911.33, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 48, tzinfo=datetime.timezone.utc), open=22911.33, high=22914.03, low=22910.86, close=22914.03, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 49, tzinfo=datetime.timezone.utc), open=22914.03, high=22939.73, low=22914.03, close=22928.64, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 50, tzinfo=datetime.timezone.utc), open=22928.64, high=22928.95, low=22925.15, close=22927.39, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 51, tzinfo=datetime.timezone.utc), open=22927.39, high=22928.06, low=22925.08, close=22927.47, barCount=7), BarData(date=datetime.datetime(2018, 5, 18, 5, 52, tzinfo=datetime.timezone.utc), open=22927.47, high=22927.92, low=22924.7, close=22925.83, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 53, tzinfo=datetime.timezone.utc), open=22925.83, high=22925.83, low=22923.51, close=22923.79, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 54, tzinfo=datetime.timezone.utc), open=22923.79, high=22923.79, low=22921.19, close=22923.65, barCount=6), BarData(date=datetime.datetime(2018, 5, 18, 5, 55, tzinfo=datetime.timezone.utc), open=22923.65, high=22924.99, low=22920.89, close=22924.99, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 56, tzinfo=datetime.timezone.utc), open=22924.99, high=22929.09, low=22924.99, close=22928.19, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 57, tzinfo=datetime.timezone.utc), open=22928.19, high=22928.19, low=22913.05, close=22916.27, barCount=12), BarData(date=datetime.datetime(2018, 5, 18, 5, 58, tzinfo=datetime.timezone.utc), open=22916.27, high=22916.27, low=22909.84, close=22909.84, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 59, tzinfo=datetime.timezone.utc), open=22909.84, high=22934.37, low=22908.97, close=22934.37, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 0, tzinfo=datetime.timezone.utc), open=22937.58, high=22951.89, low=22937.58, close=22950.9, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 1, tzinfo=datetime.timezone.utc), open=22950.9, high=22951.27, low=22948.75, close=22948.75, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 2, tzinfo=datetime.timezone.utc), open=22948.75, high=22960.5, low=22948.75, close=22960.5, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 3, tzinfo=datetime.timezone.utc), open=22960.5, high=22968.04, low=22955.68, close=22967.65, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 4, tzinfo=datetime.timezone.utc), open=22967.65, high=22967.65, low=22958.76, close=22959.71, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 5, tzinfo=datetime.timezone.utc), open=22959.71, high=22962.2, low=22951.61, close=22951.62, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 6, tzinfo=datetime.timezone.utc), open=22951.62, high=22951.62, low=22946.81, close=22946.81, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 7, tzinfo=datetime.timezone.utc), open=22946.81, high=22948.57, low=22945.93, close=22947.74, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 8, tzinfo=datetime.timezone.utc), open=22947.74, high=22948.83, low=22943.07, close=22947.13, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 9, tzinfo=datetime.timezone.utc), open=22947.13, high=22951.73, low=22947.13, close=22948.89, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 10, tzinfo=datetime.timezone.utc), open=22948.89, high=22950.67, low=22946.22, close=22947.42, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 11, tzinfo=datetime.timezone.utc), open=22947.42, high=22949.61, low=22940.77, close=22942.13, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 12, tzinfo=datetime.timezone.utc), open=22942.13, high=22957.73, low=22941.85, close=22957.73, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 13, tzinfo=datetime.timezone.utc), open=22957.73, high=22961.32, low=22957.73, close=22960.25, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 14, tzinfo=datetime.timezone.utc), open=22960.25, high=22965.53, low=22959.55, close=22965.53, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 15, tzinfo=datetime.timezone.utc), open=22965.52, high=22969.97, low=22965.28, close=22965.36, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 16, tzinfo=datetime.timezone.utc), open=22965.37, high=22968.17, low=22963.81, close=22968.17, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 17, tzinfo=datetime.timezone.utc), open=22968.17, high=22970.78, low=22966.13, close=22967.44, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 18, tzinfo=datetime.timezone.utc), open=22967.43, high=22968.07, low=22962.98, close=22962.98, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 19, tzinfo=datetime.timezone.utc), open=22962.98, high=22963.28, low=22958.97, close=22959.53, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 20, tzinfo=datetime.timezone.utc), open=22959.54, high=22960.67, low=22949.33, close=22949.9, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 21, tzinfo=datetime.timezone.utc), open=22949.9, high=22952.0, low=22944.55, close=22944.55, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 22, tzinfo=datetime.timezone.utc), open=22944.55, high=22947.26, low=22943.14, close=22945.87, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 23, tzinfo=datetime.timezone.utc), open=22945.86, high=22948.65, low=22945.86, close=22948.64, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 24, tzinfo=datetime.timezone.utc), open=22948.64, high=22948.65, low=22943.35, close=22944.15, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 25, tzinfo=datetime.timezone.utc), open=22944.15, high=22947.33, low=22941.88, close=22942.42, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 26, tzinfo=datetime.timezone.utc), open=22942.42, high=22943.86, low=22937.88, close=22937.88, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 27, tzinfo=datetime.timezone.utc), open=22937.88, high=22939.09, low=22936.99, close=22939.09, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 28, tzinfo=datetime.timezone.utc), open=22939.09, high=22941.82, low=22937.76, close=22937.76, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 29, tzinfo=datetime.timezone.utc), open=22937.76, high=22937.92, low=22936.22, close=22936.54, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 30, tzinfo=datetime.timezone.utc), open=22936.53, high=22936.85, low=22935.31, close=22936.83, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 31, tzinfo=datetime.timezone.utc), open=22936.83, high=22949.16, low=22936.83, close=22949.16, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 32, tzinfo=datetime.timezone.utc), open=22949.16, high=22951.02, low=22948.47, close=22949.9, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 33, tzinfo=datetime.timezone.utc), open=22949.9, high=22949.9, low=22941.97, close=22941.97, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 34, tzinfo=datetime.timezone.utc), open=22941.97, high=22941.98, low=22938.4, close=22939.72, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 35, tzinfo=datetime.timezone.utc), open=22939.72, high=22944.53, low=22939.72, close=22944.53, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 36, tzinfo=datetime.timezone.utc), open=22944.52, high=22950.75, low=22944.52, close=22950.75, barCount=6), BarData(date=datetime.datetime(2018, 5, 21, 0, 37, tzinfo=datetime.timezone.utc), open=22950.75, high=22951.18, low=22948.75, close=22951.18, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 38, tzinfo=datetime.timezone.utc), open=22951.18, high=22954.03, low=22951.18, close=22954.03, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 39, tzinfo=datetime.timezone.utc), open=22954.02, high=22960.12, low=22954.02, close=22960.11, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 40, tzinfo=datetime.timezone.utc), open=22960.12, high=22963.35, low=22959.41, close=22963.35, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 41, tzinfo=datetime.timezone.utc), open=22963.35, high=22965.68, low=22962.17, close=22965.3, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 42, tzinfo=datetime.timezone.utc), open=22965.3, high=22968.26, low=22965.3, close=22968.26, barCount=5)], False))
Traceback (most recent call last):
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/wrapper.py", line 143, in handleEvent
    event.emit(*args)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/event.py", line 76, in emit
    func(obj, *args, **kwargs)
  File "/home/bn/PycharmProjects/trading/trading/containerClass.py", line 293, in myBarUpdateCallback
    bars = self.requestRecentHistoricalBars(qc)
  File "/home/bn/PycharmProjects/trading/trading/containerClass.py", line 115, in requestRecentHistoricalBars
    timeOutTime=timeOutTime)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 71, in getHistoricalDataBars
    bars = ib.run(asyncio.wait_for(req, timeOutTime))
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/ib.py", line 251, in run
    result = util.syncAwait(future)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/util.py", line 245, in syncAwait
    result = _syncAwaitAsyncio(future)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/util.py", line 267, in _syncAwaitAsyncio
    return future.result()
asyncio.base_futures.InvalidStateError: Result is not set.
2018-05-21 02:42:47,772 ib_insync.wrapper handleEvent ERROR Event barUpdateEvent(([BarData(date=datetime.datetime(2018, 5, 18, 5, 42, tzinfo=datetime.timezone.utc), open=22906.58, high=22907.14, low=22903.92, close=22903.92, barCount=10), BarData(date=datetime.datetime(2018, 5, 18, 5, 43, tzinfo=datetime.timezone.utc), open=22903.92, high=22904.43, low=22901.81, close=22902.84, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 44, tzinfo=datetime.timezone.utc), open=22902.84, high=22904.81, low=22902.84, close=22904.25, barCount=10), BarData(date=datetime.datetime(2018, 5, 18, 5, 45, tzinfo=datetime.timezone.utc), open=22904.25, high=22910.75, low=22903.47, close=22910.75, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 46, tzinfo=datetime.timezone.utc), open=22910.75, high=22912.26, low=22910.75, close=22912.26, barCount=8), BarData(date=datetime.datetime(2018, 5, 18, 5, 47, tzinfo=datetime.timezone.utc), open=22912.26, high=22913.25, low=22910.45, close=22911.33, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 48, tzinfo=datetime.timezone.utc), open=22911.33, high=22914.03, low=22910.86, close=22914.03, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 49, tzinfo=datetime.timezone.utc), open=22914.03, high=22939.73, low=22914.03, close=22928.64, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 50, tzinfo=datetime.timezone.utc), open=22928.64, high=22928.95, low=22925.15, close=22927.39, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 51, tzinfo=datetime.timezone.utc), open=22927.39, high=22928.06, low=22925.08, close=22927.47, barCount=7), BarData(date=datetime.datetime(2018, 5, 18, 5, 52, tzinfo=datetime.timezone.utc), open=22927.47, high=22927.92, low=22924.7, close=22925.83, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 53, tzinfo=datetime.timezone.utc), open=22925.83, high=22925.83, low=22923.51, close=22923.79, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 54, tzinfo=datetime.timezone.utc), open=22923.79, high=22923.79, low=22921.19, close=22923.65, barCount=6), BarData(date=datetime.datetime(2018, 5, 18, 5, 55, tzinfo=datetime.timezone.utc), open=22923.65, high=22924.99, low=22920.89, close=22924.99, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 56, tzinfo=datetime.timezone.utc), open=22924.99, high=22929.09, low=22924.99, close=22928.19, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 57, tzinfo=datetime.timezone.utc), open=22928.19, high=22928.19, low=22913.05, close=22916.27, barCount=12), BarData(date=datetime.datetime(2018, 5, 18, 5, 58, tzinfo=datetime.timezone.utc), open=22916.27, high=22916.27, low=22909.84, close=22909.84, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 59, tzinfo=datetime.timezone.utc), open=22909.84, high=22934.37, low=22908.97, close=22934.37, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 0, tzinfo=datetime.timezone.utc), open=22937.58, high=22951.89, low=22937.58, close=22950.9, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 1, tzinfo=datetime.timezone.utc), open=22950.9, high=22951.27, low=22948.75, close=22948.75, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 2, tzinfo=datetime.timezone.utc), open=22948.75, high=22960.5, low=22948.75, close=22960.5, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 3, tzinfo=datetime.timezone.utc), open=22960.5, high=22968.04, low=22955.68, close=22967.65, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 4, tzinfo=datetime.timezone.utc), open=22967.65, high=22967.65, low=22958.76, close=22959.71, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 5, tzinfo=datetime.timezone.utc), open=22959.71, high=22962.2, low=22951.61, close=22951.62, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 6, tzinfo=datetime.timezone.utc), open=22951.62, high=22951.62, low=22946.81, close=22946.81, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 7, tzinfo=datetime.timezone.utc), open=22946.81, high=22948.57, low=22945.93, close=22947.74, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 8, tzinfo=datetime.timezone.utc), open=22947.74, high=22948.83, low=22943.07, close=22947.13, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 9, tzinfo=datetime.timezone.utc), open=22947.13, high=22951.73, low=22947.13, close=22948.89, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 10, tzinfo=datetime.timezone.utc), open=22948.89, high=22950.67, low=22946.22, close=22947.42, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 11, tzinfo=datetime.timezone.utc), open=22947.42, high=22949.61, low=22940.77, close=22942.13, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 12, tzinfo=datetime.timezone.utc), open=22942.13, high=22957.73, low=22941.85, close=22957.73, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 13, tzinfo=datetime.timezone.utc), open=22957.73, high=22961.32, low=22957.73, close=22960.25, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 14, tzinfo=datetime.timezone.utc), open=22960.25, high=22965.53, low=22959.55, close=22965.53, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 15, tzinfo=datetime.timezone.utc), open=22965.52, high=22969.97, low=22965.28, close=22965.36, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 16, tzinfo=datetime.timezone.utc), open=22965.37, high=22968.17, low=22963.81, close=22968.17, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 17, tzinfo=datetime.timezone.utc), open=22968.17, high=22970.78, low=22966.13, close=22967.44, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 18, tzinfo=datetime.timezone.utc), open=22967.43, high=22968.07, low=22962.98, close=22962.98, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 19, tzinfo=datetime.timezone.utc), open=22962.98, high=22963.28, low=22958.97, close=22959.53, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 20, tzinfo=datetime.timezone.utc), open=22959.54, high=22960.67, low=22949.33, close=22949.9, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 21, tzinfo=datetime.timezone.utc), open=22949.9, high=22952.0, low=22944.55, close=22944.55, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 22, tzinfo=datetime.timezone.utc), open=22944.55, high=22947.26, low=22943.14, close=22945.87, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 23, tzinfo=datetime.timezone.utc), open=22945.86, high=22948.65, low=22945.86, close=22948.64, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 24, tzinfo=datetime.timezone.utc), open=22948.64, high=22948.65, low=22943.35, close=22944.15, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 25, tzinfo=datetime.timezone.utc), open=22944.15, high=22947.33, low=22941.88, close=22942.42, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 26, tzinfo=datetime.timezone.utc), open=22942.42, high=22943.86, low=22937.88, close=22937.88, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 27, tzinfo=datetime.timezone.utc), open=22937.88, high=22939.09, low=22936.99, close=22939.09, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 28, tzinfo=datetime.timezone.utc), open=22939.09, high=22941.82, low=22937.76, close=22937.76, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 29, tzinfo=datetime.timezone.utc), open=22937.76, high=22937.92, low=22936.22, close=22936.54, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 30, tzinfo=datetime.timezone.utc), open=22936.53, high=22936.85, low=22935.31, close=22936.83, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 31, tzinfo=datetime.timezone.utc), open=22936.83, high=22949.16, low=22936.83, close=22949.16, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 32, tzinfo=datetime.timezone.utc), open=22949.16, high=22951.02, low=22948.47, close=22949.9, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 33, tzinfo=datetime.timezone.utc), open=22949.9, high=22949.9, low=22941.97, close=22941.97, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 34, tzinfo=datetime.timezone.utc), open=22941.97, high=22941.98, low=22938.4, close=22939.72, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 35, tzinfo=datetime.timezone.utc), open=22939.72, high=22944.53, low=22939.72, close=22944.53, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 36, tzinfo=datetime.timezone.utc), open=22944.52, high=22950.75, low=22944.52, close=22950.75, barCount=6), BarData(date=datetime.datetime(2018, 5, 21, 0, 37, tzinfo=datetime.timezone.utc), open=22950.75, high=22951.18, low=22948.75, close=22951.18, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 38, tzinfo=datetime.timezone.utc), open=22951.18, high=22954.03, low=22951.18, close=22954.03, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 39, tzinfo=datetime.timezone.utc), open=22954.02, high=22960.12, low=22954.02, close=22960.11, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 40, tzinfo=datetime.timezone.utc), open=22960.12, high=22963.35, low=22959.41, close=22963.35, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 41, tzinfo=datetime.timezone.utc), open=22963.35, high=22965.68, low=22962.17, close=22965.3, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 42, tzinfo=datetime.timezone.utc), open=22965.3, high=22968.26, low=22965.3, close=22968.26, barCount=5)], False))
Traceback (most recent call last):
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/wrapper.py", line 143, in handleEvent
    event.emit(*args)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/event.py", line 76, in emit
    func(obj, *args, **kwargs)
  File "/home/bn/PycharmProjects/trading/trading/containerClass.py", line 293, in myBarUpdateCallback
    bars = self.requestRecentHistoricalBars(qc)
  File "/home/bn/PycharmProjects/trading/trading/containerClass.py", line 115, in requestRecentHistoricalBars
    timeOutTime=timeOutTime)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 71, in getHistoricalDataBars
    bars = ib.run(asyncio.wait_for(req, timeOutTime))
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/ib.py", line 251, in run
    result = util.syncAwait(future)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/util.py", line 245, in syncAwait
    result = _syncAwaitAsyncio(future)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/util.py", line 267, in _syncAwaitAsyncio
    return future.result()
asyncio.base_futures.InvalidStateError: Result is not set.
2018-05-21 02:42:47,774 ib_insync.wrapper handleEvent ERROR Event barUpdateEvent(([BarData(date=datetime.datetime(2018, 5, 18, 5, 42, tzinfo=datetime.timezone.utc), open=22906.58, high=22907.14, low=22903.92, close=22903.92, barCount=10), BarData(date=datetime.datetime(2018, 5, 18, 5, 43, tzinfo=datetime.timezone.utc), open=22903.92, high=22904.43, low=22901.81, close=22902.84, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 44, tzinfo=datetime.timezone.utc), open=22902.84, high=22904.81, low=22902.84, close=22904.25, barCount=10), BarData(date=datetime.datetime(2018, 5, 18, 5, 45, tzinfo=datetime.timezone.utc), open=22904.25, high=22910.75, low=22903.47, close=22910.75, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 46, tzinfo=datetime.timezone.utc), open=22910.75, high=22912.26, low=22910.75, close=22912.26, barCount=8), BarData(date=datetime.datetime(2018, 5, 18, 5, 47, tzinfo=datetime.timezone.utc), open=22912.26, high=22913.25, low=22910.45, close=22911.33, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 48, tzinfo=datetime.timezone.utc), open=22911.33, high=22914.03, low=22910.86, close=22914.03, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 49, tzinfo=datetime.timezone.utc), open=22914.03, high=22939.73, low=22914.03, close=22928.64, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 50, tzinfo=datetime.timezone.utc), open=22928.64, high=22928.95, low=22925.15, close=22927.39, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 51, tzinfo=datetime.timezone.utc), open=22927.39, high=22928.06, low=22925.08, close=22927.47, barCount=7), BarData(date=datetime.datetime(2018, 5, 18, 5, 52, tzinfo=datetime.timezone.utc), open=22927.47, high=22927.92, low=22924.7, close=22925.83, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 53, tzinfo=datetime.timezone.utc), open=22925.83, high=22925.83, low=22923.51, close=22923.79, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 54, tzinfo=datetime.timezone.utc), open=22923.79, high=22923.79, low=22921.19, close=22923.65, barCount=6), BarData(date=datetime.datetime(2018, 5, 18, 5, 55, tzinfo=datetime.timezone.utc), open=22923.65, high=22924.99, low=22920.89, close=22924.99, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 56, tzinfo=datetime.timezone.utc), open=22924.99, high=22929.09, low=22924.99, close=22928.19, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 57, tzinfo=datetime.timezone.utc), open=22928.19, high=22928.19, low=22913.05, close=22916.27, barCount=12), BarData(date=datetime.datetime(2018, 5, 18, 5, 58, tzinfo=datetime.timezone.utc), open=22916.27, high=22916.27, low=22909.84, close=22909.84, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 59, tzinfo=datetime.timezone.utc), open=22909.84, high=22934.37, low=22908.97, close=22934.37, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 0, tzinfo=datetime.timezone.utc), open=22937.58, high=22951.89, low=22937.58, close=22950.9, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 1, tzinfo=datetime.timezone.utc), open=22950.9, high=22951.27, low=22948.75, close=22948.75, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 2, tzinfo=datetime.timezone.utc), open=22948.75, high=22960.5, low=22948.75, close=22960.5, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 3, tzinfo=datetime.timezone.utc), open=22960.5, high=22968.04, low=22955.68, close=22967.65, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 4, tzinfo=datetime.timezone.utc), open=22967.65, high=22967.65, low=22958.76, close=22959.71, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 5, tzinfo=datetime.timezone.utc), open=22959.71, high=22962.2, low=22951.61, close=22951.62, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 6, tzinfo=datetime.timezone.utc), open=22951.62, high=22951.62, low=22946.81, close=22946.81, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 7, tzinfo=datetime.timezone.utc), open=22946.81, high=22948.57, low=22945.93, close=22947.74, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 8, tzinfo=datetime.timezone.utc), open=22947.74, high=22948.83, low=22943.07, close=22947.13, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 9, tzinfo=datetime.timezone.utc), open=22947.13, high=22951.73, low=22947.13, close=22948.89, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 10, tzinfo=datetime.timezone.utc), open=22948.89, high=22950.67, low=22946.22, close=22947.42, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 11, tzinfo=datetime.timezone.utc), open=22947.42, high=22949.61, low=22940.77, close=22942.13, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 12, tzinfo=datetime.timezone.utc), open=22942.13, high=22957.73, low=22941.85, close=22957.73, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 13, tzinfo=datetime.timezone.utc), open=22957.73, high=22961.32, low=22957.73, close=22960.25, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 14, tzinfo=datetime.timezone.utc), open=22960.25, high=22965.53, low=22959.55, close=22965.53, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 15, tzinfo=datetime.timezone.utc), open=22965.52, high=22969.97, low=22965.28, close=22965.36, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 16, tzinfo=datetime.timezone.utc), open=22965.37, high=22968.17, low=22963.81, close=22968.17, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 17, tzinfo=datetime.timezone.utc), open=22968.17, high=22970.78, low=22966.13, close=22967.44, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 18, tzinfo=datetime.timezone.utc), open=22967.43, high=22968.07, low=22962.98, close=22962.98, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 19, tzinfo=datetime.timezone.utc), open=22962.98, high=22963.28, low=22958.97, close=22959.53, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 20, tzinfo=datetime.timezone.utc), open=22959.54, high=22960.67, low=22949.33, close=22949.9, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 21, tzinfo=datetime.timezone.utc), open=22949.9, high=22952.0, low=22944.55, close=22944.55, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 22, tzinfo=datetime.timezone.utc), open=22944.55, high=22947.26, low=22943.14, close=22945.87, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 23, tzinfo=datetime.timezone.utc), open=22945.86, high=22948.65, low=22945.86, close=22948.64, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 24, tzinfo=datetime.timezone.utc), open=22948.64, high=22948.65, low=22943.35, close=22944.15, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 25, tzinfo=datetime.timezone.utc), open=22944.15, high=22947.33, low=22941.88, close=22942.42, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 26, tzinfo=datetime.timezone.utc), open=22942.42, high=22943.86, low=22937.88, close=22937.88, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 27, tzinfo=datetime.timezone.utc), open=22937.88, high=22939.09, low=22936.99, close=22939.09, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 28, tzinfo=datetime.timezone.utc), open=22939.09, high=22941.82, low=22937.76, close=22937.76, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 29, tzinfo=datetime.timezone.utc), open=22937.76, high=22937.92, low=22936.22, close=22936.54, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 30, tzinfo=datetime.timezone.utc), open=22936.53, high=22936.85, low=22935.31, close=22936.83, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 31, tzinfo=datetime.timezone.utc), open=22936.83, high=22949.16, low=22936.83, close=22949.16, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 32, tzinfo=datetime.timezone.utc), open=22949.16, high=22951.02, low=22948.47, close=22949.9, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 33, tzinfo=datetime.timezone.utc), open=22949.9, high=22949.9, low=22941.97, close=22941.97, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 34, tzinfo=datetime.timezone.utc), open=22941.97, high=22941.98, low=22938.4, close=22939.72, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 35, tzinfo=datetime.timezone.utc), open=22939.72, high=22944.53, low=22939.72, close=22944.53, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 36, tzinfo=datetime.timezone.utc), open=22944.52, high=22950.75, low=22944.52, close=22950.75, barCount=6), BarData(date=datetime.datetime(2018, 5, 21, 0, 37, tzinfo=datetime.timezone.utc), open=22950.75, high=22951.18, low=22948.75, close=22951.18, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 38, tzinfo=datetime.timezone.utc), open=22951.18, high=22954.03, low=22951.18, close=22954.03, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 39, tzinfo=datetime.timezone.utc), open=22954.02, high=22960.12, low=22954.02, close=22960.11, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 40, tzinfo=datetime.timezone.utc), open=22960.12, high=22963.35, low=22959.41, close=22963.35, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 41, tzinfo=datetime.timezone.utc), open=22963.35, high=22965.68, low=22962.17, close=22965.3, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 42, tzinfo=datetime.timezone.utc), open=22965.3, high=22968.26, low=22965.3, close=22968.26, barCount=5)], False))
Traceback (most recent call last):
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/wrapper.py", line 143, in handleEvent
    event.emit(*args)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/event.py", line 76, in emit
    func(obj, *args, **kwargs)
  File "/home/bn/PycharmProjects/trading/trading/containerClass.py", line 293, in myBarUpdateCallback
    bars = self.requestRecentHistoricalBars(qc)
  File "/home/bn/PycharmProjects/trading/trading/containerClass.py", line 115, in requestRecentHistoricalBars
    timeOutTime=timeOutTime)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 71, in getHistoricalDataBars
    bars = ib.run(asyncio.wait_for(req, timeOutTime))
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/ib.py", line 251, in run
    result = util.syncAwait(future)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/util.py", line 245, in syncAwait
    result = _syncAwaitAsyncio(future)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/util.py", line 267, in _syncAwaitAsyncio
    return future.result()
asyncio.base_futures.InvalidStateError: Result is not set.
2018-05-21 02:42:47,775 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:42:47,775 ib_insync.wrapper handleEvent ERROR Event barUpdateEvent(([BarData(date=datetime.datetime(2018, 5, 18, 5, 42, tzinfo=datetime.timezone.utc), open=22906.58, high=22907.14, low=22903.92, close=22903.92, barCount=10), BarData(date=datetime.datetime(2018, 5, 18, 5, 43, tzinfo=datetime.timezone.utc), open=22903.92, high=22904.43, low=22901.81, close=22902.84, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 44, tzinfo=datetime.timezone.utc), open=22902.84, high=22904.81, low=22902.84, close=22904.25, barCount=10), BarData(date=datetime.datetime(2018, 5, 18, 5, 45, tzinfo=datetime.timezone.utc), open=22904.25, high=22910.75, low=22903.47, close=22910.75, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 46, tzinfo=datetime.timezone.utc), open=22910.75, high=22912.26, low=22910.75, close=22912.26, barCount=8), BarData(date=datetime.datetime(2018, 5, 18, 5, 47, tzinfo=datetime.timezone.utc), open=22912.26, high=22913.25, low=22910.45, close=22911.33, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 48, tzinfo=datetime.timezone.utc), open=22911.33, high=22914.03, low=22910.86, close=22914.03, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 49, tzinfo=datetime.timezone.utc), open=22914.03, high=22939.73, low=22914.03, close=22928.64, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 50, tzinfo=datetime.timezone.utc), open=22928.64, high=22928.95, low=22925.15, close=22927.39, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 51, tzinfo=datetime.timezone.utc), open=22927.39, high=22928.06, low=22925.08, close=22927.47, barCount=7), BarData(date=datetime.datetime(2018, 5, 18, 5, 52, tzinfo=datetime.timezone.utc), open=22927.47, high=22927.92, low=22924.7, close=22925.83, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 53, tzinfo=datetime.timezone.utc), open=22925.83, high=22925.83, low=22923.51, close=22923.79, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 54, tzinfo=datetime.timezone.utc), open=22923.79, high=22923.79, low=22921.19, close=22923.65, barCount=6), BarData(date=datetime.datetime(2018, 5, 18, 5, 55, tzinfo=datetime.timezone.utc), open=22923.65, high=22924.99, low=22920.89, close=22924.99, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 56, tzinfo=datetime.timezone.utc), open=22924.99, high=22929.09, low=22924.99, close=22928.19, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 57, tzinfo=datetime.timezone.utc), open=22928.19, high=22928.19, low=22913.05, close=22916.27, barCount=12), BarData(date=datetime.datetime(2018, 5, 18, 5, 58, tzinfo=datetime.timezone.utc), open=22916.27, high=22916.27, low=22909.84, close=22909.84, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 59, tzinfo=datetime.timezone.utc), open=22909.84, high=22934.37, low=22908.97, close=22934.37, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 0, tzinfo=datetime.timezone.utc), open=22937.58, high=22951.89, low=22937.58, close=22950.9, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 1, tzinfo=datetime.timezone.utc), open=22950.9, high=22951.27, low=22948.75, close=22948.75, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 2, tzinfo=datetime.timezone.utc), open=22948.75, high=22960.5, low=22948.75, close=22960.5, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 3, tzinfo=datetime.timezone.utc), open=22960.5, high=22968.04, low=22955.68, close=22967.65, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 4, tzinfo=datetime.timezone.utc), open=22967.65, high=22967.65, low=22958.76, close=22959.71, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 5, tzinfo=datetime.timezone.utc), open=22959.71, high=22962.2, low=22951.61, close=22951.62, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 6, tzinfo=datetime.timezone.utc), open=22951.62, high=22951.62, low=22946.81, close=22946.81, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 7, tzinfo=datetime.timezone.utc), open=22946.81, high=22948.57, low=22945.93, close=22947.74, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 8, tzinfo=datetime.timezone.utc), open=22947.74, high=22948.83, low=22943.07, close=22947.13, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 9, tzinfo=datetime.timezone.utc), open=22947.13, high=22951.73, low=22947.13, close=22948.89, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 10, tzinfo=datetime.timezone.utc), open=22948.89, high=22950.67, low=22946.22, close=22947.42, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 11, tzinfo=datetime.timezone.utc), open=22947.42, high=22949.61, low=22940.77, close=22942.13, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 12, tzinfo=datetime.timezone.utc), open=22942.13, high=22957.73, low=22941.85, close=22957.73, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 13, tzinfo=datetime.timezone.utc), open=22957.73, high=22961.32, low=22957.73, close=22960.25, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 14, tzinfo=datetime.timezone.utc), open=22960.25, high=22965.53, low=22959.55, close=22965.53, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 15, tzinfo=datetime.timezone.utc), open=22965.52, high=22969.97, low=22965.28, close=22965.36, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 16, tzinfo=datetime.timezone.utc), open=22965.37, high=22968.17, low=22963.81, close=22968.17, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 17, tzinfo=datetime.timezone.utc), open=22968.17, high=22970.78, low=22966.13, close=22967.44, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 18, tzinfo=datetime.timezone.utc), open=22967.43, high=22968.07, low=22962.98, close=22962.98, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 19, tzinfo=datetime.timezone.utc), open=22962.98, high=22963.28, low=22958.97, close=22959.53, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 20, tzinfo=datetime.timezone.utc), open=22959.54, high=22960.67, low=22949.33, close=22949.9, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 21, tzinfo=datetime.timezone.utc), open=22949.9, high=22952.0, low=22944.55, close=22944.55, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 22, tzinfo=datetime.timezone.utc), open=22944.55, high=22947.26, low=22943.14, close=22945.87, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 23, tzinfo=datetime.timezone.utc), open=22945.86, high=22948.65, low=22945.86, close=22948.64, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 24, tzinfo=datetime.timezone.utc), open=22948.64, high=22948.65, low=22943.35, close=22944.15, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 25, tzinfo=datetime.timezone.utc), open=22944.15, high=22947.33, low=22941.88, close=22942.42, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 26, tzinfo=datetime.timezone.utc), open=22942.42, high=22943.86, low=22937.88, close=22937.88, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 27, tzinfo=datetime.timezone.utc), open=22937.88, high=22939.09, low=22936.99, close=22939.09, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 28, tzinfo=datetime.timezone.utc), open=22939.09, high=22941.82, low=22937.76, close=22937.76, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 29, tzinfo=datetime.timezone.utc), open=22937.76, high=22937.92, low=22936.22, close=22936.54, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 30, tzinfo=datetime.timezone.utc), open=22936.53, high=22936.85, low=22935.31, close=22936.83, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 31, tzinfo=datetime.timezone.utc), open=22936.83, high=22949.16, low=22936.83, close=22949.16, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 32, tzinfo=datetime.timezone.utc), open=22949.16, high=22951.02, low=22948.47, close=22949.9, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 33, tzinfo=datetime.timezone.utc), open=22949.9, high=22949.9, low=22941.97, close=22941.97, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 34, tzinfo=datetime.timezone.utc), open=22941.97, high=22941.98, low=22938.4, close=22939.72, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 35, tzinfo=datetime.timezone.utc), open=22939.72, high=22944.53, low=22939.72, close=22944.53, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 36, tzinfo=datetime.timezone.utc), open=22944.52, high=22950.75, low=22944.52, close=22950.75, barCount=6), BarData(date=datetime.datetime(2018, 5, 21, 0, 37, tzinfo=datetime.timezone.utc), open=22950.75, high=22951.18, low=22948.75, close=22951.18, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 38, tzinfo=datetime.timezone.utc), open=22951.18, high=22954.03, low=22951.18, close=22954.03, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 39, tzinfo=datetime.timezone.utc), open=22954.02, high=22960.12, low=22954.02, close=22960.11, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 40, tzinfo=datetime.timezone.utc), open=22960.12, high=22963.35, low=22959.41, close=22963.35, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 41, tzinfo=datetime.timezone.utc), open=22963.35, high=22965.68, low=22962.17, close=22965.3, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 42, tzinfo=datetime.timezone.utc), open=22965.3, high=22968.98, low=22965.3, close=22968.98, barCount=5)], False))
Traceback (most recent call last):
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/wrapper.py", line 143, in handleEvent
    event.emit(*args)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/event.py", line 76, in emit
    func(obj, *args, **kwargs)
  File "/home/bn/PycharmProjects/trading/trading/containerClass.py", line 293, in myBarUpdateCallback
    bars = self.requestRecentHistoricalBars(qc)
  File "/home/bn/PycharmProjects/trading/trading/containerClass.py", line 115, in requestRecentHistoricalBars
    timeOutTime=timeOutTime)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 71, in getHistoricalDataBars
    bars = ib.run(asyncio.wait_for(req, timeOutTime))
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/ib.py", line 251, in run
    result = util.syncAwait(future)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/util.py", line 245, in syncAwait
    result = _syncAwaitAsyncio(future)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/util.py", line 267, in _syncAwaitAsyncio
    return future.result()
asyncio.base_futures.InvalidStateError: Result is not set.
2018-05-21 02:42:47,776 trading.marketDataIB getHistoricalDataBars WARNING Timeout while requesting historical bars for contract Contract(secType='IND', conId=416904, symbol='SPX', exchange='CBOE', currency='USD', localSymbol='SPX')
2018-05-21 02:42:47,850 apscheduler.scheduler _real_add_job INFO Added job "asyncioJobGetHistoricalData_000000" to job store "default"
2018-05-21 02:42:47,850 apscheduler.scheduler _real_add_job INFO Added job "schedulerJobSwitchRequestForRecentHistoricalDataFromShortToLong_000000" to job store "default"
2018-05-21 02:42:47,851 apscheduler.scheduler _real_add_job INFO Added job "schedulerJobSwitchRequestForRecentHistoricalDataFromLongToShort_000000" to job store "default"
2018-05-21 02:42:47,981 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:42:47,982 ib_insync.wrapper error ERROR Error 162, reqId 40: Historical Market Data Service error message:API historical data query cancelled: 40
2018-05-21 02:42:47,982 trading.containerClass myErrorCallback INFO reqId: 40, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 40, localSymbol: None
2018-05-21 02:42:49,015 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:42:49,016 ib_insync.wrapper error ERROR Error 162, reqId 41: Historical Market Data Service error message:API historical data query cancelled: 41
2018-05-21 02:42:49,016 trading.containerClass myErrorCallback INFO reqId: 41, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 41, localSymbol: None
2018-05-21 02:42:50,004 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 02:42:55 CEST)" (scheduled at 2018-05-21 02:42:50+02:00)
2018-05-21 02:44:24,298 apscheduler.executors.default run_coroutine_job ERROR Job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 02:42:55 CEST)" raised an exception
Traceback (most recent call last):
  File "/home/bn/anaconda3/envs/trading/lib/python3.6/site-packages/apscheduler/executors/base_py3.py", line 29, in run_coroutine_job
    retval = await job.func(*job.args, **job.kwargs)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 430, in asyncioJobGetHistoricalData
    for qc in qcs[indexToStart:]:
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 430, in asyncioJobGetHistoricalData
    for qc in qcs[indexToStart:]:
  File "/snap/pycharm-professional/66/helpers/pydev/_pydevd_bundle/pydevd_frame.py", line 620, in trace_dispatch
    self.do_wait_suspend(thread, frame, event, arg)
  File "/snap/pycharm-professional/66/helpers/pydev/_pydevd_bundle/pydevd_frame.py", line 125, in do_wait_suspend
    self._args[0].do_wait_suspend(*args, **kwargs)
  File "/snap/pycharm-professional/66/helpers/pydev/pydevd.py", line 812, in do_wait_suspend
    time.sleep(0.01)
KeyboardInterrupt
2018-05-21 02:44:24,307 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:44:24,439 trading.containerClass myBarUpdateCallback INFO localSymbol: EUR.AUD, nBars: 62, diffDateTime: 84.438404, close: 1.563725, last: 2018-05-21 00:41:00
2018-05-21 02:44:24,880 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: EUR.AUD; 2018-05-20 23:44:00+00:00; 2018-05-21 00:43:00+00:00 60; 2018-05-21 00:41:00; 2018-05-21 00:44:00; False
2018-05-21 02:44:24,972 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.056787
2018-05-21 02:44:24,972 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.092377
2018-05-21 02:44:24,973 trading.containerClass myBarUpdateCallback INFO localSymbol: EUR.AUD, nBars: 63, diffDateTime: 24.87576, close: 1.563545, last: 2018-05-21 00:41:00
2018-05-21 02:44:25,111 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17451, marketValue=218458.86, averageCost=1.2182257, unrealizedPNL=-8131.12, realizedPNL=0.0, account='DU946735')
2018-05-21 02:44:25,164 ib_insync.wrapper error ERROR Error 162, reqId 42: Historical Market Data Service error message:API historical data query cancelled: 42
2018-05-21 02:44:25,165 trading.containerClass myErrorCallback INFO reqId: 42, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 42, localSymbol: None
2018-05-21 02:44:25,165 ib_insync.client _onSocketDisconnected ERROR Peer closed connection
2018-05-21 02:44:25,165 trading.containerClass myStoppingCallback INFO stopping watchdog callback: Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-21 02:44:25,165 ib_insync.Watchdog stop INFO Stopping
2018-05-21 02:44:25,165 ib_insync.ib disconnect INFO BN added disconnect in ib
2018-05-21 02:44:25,165 ib_insync.IBC terminateAsync INFO Terminating
2018-05-21 02:46:47,328 ib_insync.Watchdog start INFO Starting
2018-05-21 02:46:47,329 quamash <module> INFO Using Qt Implementation: PyQt5
2018-05-21 02:46:47,354 ib_insync.IBC startAsync INFO Starting
2018-05-21 02:47:02,367 ib_insync.client connectAsync INFO Connecting to 127.0.0.1:4002 with clientId 24...
2018-05-21 02:47:02,370 ib_insync.client _onSocketConnected INFO Connected
2018-05-21 02:47:02,396 ib_insync.client _onSocketHasData INFO Logged on to server version 141
2018-05-21 02:47:02,443 ib_insync.client connectAsync INFO API connection ready
2018-05-21 02:47:02,522 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17451, marketValue=218458.86, averageCost=1.2182257, unrealizedPNL=-8131.12, realizedPNL=0.0, account='DU946735')
2018-05-21 02:47:02,523 ib_insync.wrapper position INFO position: Position(account='DU946735', contract=Contract(secType='CASH', conId=12087792, symbol='EUR', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, avgCost=1.2182257)
2018-05-21 02:47:02,539 ib_insync.ib connectAsync INFO Synchronization complete
2018-05-21 02:47:02,618 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() started
2018-05-21 02:47:02,619 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop datetime
2018-05-21 02:47:02,619 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:47:02,620 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop close
2018-05-21 02:47:02,620 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:47:02,620 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() started
2018-05-21 02:47:02,620 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop datetime
2018-05-21 02:47:02,620 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:47:02,620 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop close
2018-05-21 02:47:02,620 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:47:02,621 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() started
2018-05-21 02:47:02,621 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop datetime
2018-05-21 02:47:02,621 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:47:02,621 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop close
2018-05-21 02:47:02,621 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:47:02,621 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() started
2018-05-21 02:47:02,621 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop datetime
2018-05-21 02:47:02,622 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:47:02,622 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop close
2018-05-21 02:47:02,622 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:47:02,622 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() started
2018-05-21 02:47:02,622 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop datetime
2018-05-21 02:47:02,622 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:47:02,623 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop close
2018-05-21 02:47:02,623 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:47:02,623 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() started
2018-05-21 02:47:02,623 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop datetime
2018-05-21 02:47:02,623 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:47:02,623 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop close
2018-05-21 02:47:02,624 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:47:02,624 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() started
2018-05-21 02:47:02,624 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop datetime
2018-05-21 02:47:02,624 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:47:02,624 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop close
2018-05-21 02:47:02,624 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:47:02,625 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() started
2018-05-21 02:47:02,625 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop datetime
2018-05-21 02:47:02,625 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:47:02,625 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop close
2018-05-21 02:47:02,625 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:47:02,625 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() started
2018-05-21 02:47:02,625 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop datetime
2018-05-21 02:47:02,626 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop diffToNextRowInMinutes
2018-05-21 02:47:02,626 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop close
2018-05-21 02:47:02,626 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() complete
2018-05-21 02:47:02,626 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() started
2018-05-21 02:47:02,626 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop datetime
2018-05-21 02:47:02,626 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop diffToNextRowInMinutes
2018-05-21 02:47:02,627 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop close
2018-05-21 02:47:02,627 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() complete
2018-05-21 02:47:02,627 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() started
2018-05-21 02:47:02,627 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop datetime
2018-05-21 02:47:02,627 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop diffToNextRowInMinutes
2018-05-21 02:47:02,627 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop close
2018-05-21 02:47:02,628 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() complete
2018-05-21 02:47:02,628 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() started
2018-05-21 02:47:02,628 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop datetime
2018-05-21 02:47:02,628 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop diffToNextRowInMinutes
2018-05-21 02:47:02,628 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop close
2018-05-21 02:47:02,628 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() complete
2018-05-21 02:47:02,628 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() started
2018-05-21 02:47:02,628 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop datetime
2018-05-21 02:47:02,629 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop diffToNextRowInMinutes
2018-05-21 02:47:02,629 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop close
2018-05-21 02:47:02,629 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() complete
2018-05-21 02:47:02,629 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() started
2018-05-21 02:47:02,629 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop datetime
2018-05-21 02:47:02,629 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop diffToNextRowInMinutes
2018-05-21 02:47:02,630 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop close
2018-05-21 02:47:02,630 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() complete
2018-05-21 02:47:02,630 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-21 02:47:02,631 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-21 02:47:02,631 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 02:47:05,891 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-21 02:47:05,892 sqlalchemy.engine.base.Engine _execute_context INFO PRAGMA table_info("MarketDataInfoTable")
2018-05-21 02:47:05,892 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 02:47:05,895 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-21 02:47:05,896 sqlalchemy.engine.base.Engine _execute_context INFO SELECT count(*) AS count_1 
FROM (SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable") AS anon_1
2018-05-21 02:47:05,896 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 02:47:05,898 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName", "MarketDataInfoTable".description, "MarketDataInfoTable"."conId", "MarketDataInfoTable".symbol, "MarketDataInfoTable".currency, "MarketDataInfoTable".exchange, "MarketDataInfoTable".category, "MarketDataInfoTable"."secType", "MarketDataInfoTable"."earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-21 02:47:05,899 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 02:47:05,902 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-21 02:47:05,902 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 02:47:06,525 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-21 02:47:06,546 apscheduler.scheduler start INFO Scheduler started
2018-05-21 02:47:06,547 root runProg INFO Now updating the settings for the request of recent historical bars
2018-05-21 02:47:06,547 root runProg INFO Now requesting initial recent historical bars
2018-05-21 02:47:06,547 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:47:06,548 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:47:08,134 ib_insync.wrapper error INFO Warning 2106, reqId -1: HMDS data farm connection is OK:cashhmds
2018-05-21 02:47:08,134 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2106, errorString: HMDS data farm connection is OK:cashhmds, localSymbol: None
2018-05-21 02:47:08,286 ib_insync.wrapper error INFO Warning 2119, reqId -1: Market data farm is connecting:cashfarm
2018-05-21 02:47:08,287 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2119, errorString: Market data farm is connecting:cashfarm, localSymbol: None
2018-05-21 02:47:08,434 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:47:08,498 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: EUR.AUD; 2018-05-20 23:47:00+00:00; 2018-05-21 00:46:00+00:00 60; 2018-05-21 00:45:00; 2018-05-21 00:47:00; False
2018-05-21 02:47:08,694 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.074631
2018-05-21 02:47:08,694 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.196059
2018-05-21 02:47:08,695 trading.containerClass myBarUpdateCallback INFO localSymbol: EUR.AUD, nBars: 61, diffDateTime: 8.489492, close: 1.56344, last: 2018-05-21 00:45:00
2018-05-21 02:47:08,779 ib_insync.wrapper error INFO Warning 2119, reqId -1: Market data farm is connecting:jfarm
2018-05-21 02:47:08,779 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2119, errorString: Market data farm is connecting:jfarm, localSymbol: None
2018-05-21 02:47:09,089 ib_insync.wrapper error INFO Warning 2104, reqId -1: Market data farm connection is OK:cashfarm
2018-05-21 02:47:09,090 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2104, errorString: Market data farm connection is OK:cashfarm, localSymbol: None
2018-05-21 02:47:11,387 ib_insync.wrapper error INFO Warning 2104, reqId -1: Market data farm connection is OK:jfarm
2018-05-21 02:47:11,387 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2104, errorString: Market data farm connection is OK:jfarm, localSymbol: None
2018-05-21 02:47:15,153 ib_insync.wrapper error INFO Warning 2106, reqId -1: HMDS data farm connection is OK:hkhmds
2018-05-21 02:47:15,154 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2106, errorString: HMDS data farm connection is OK:hkhmds, localSymbol: None
2018-05-21 02:47:15,982 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for SPX. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:47:16,118 ib_insync.wrapper error INFO Warning 2119, reqId -1: Market data farm is connecting:usfarm.us
2018-05-21 02:47:16,118 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2119, errorString: Market data farm is connecting:usfarm.us, localSymbol: None
2018-05-21 02:47:16,308 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: N225; 2018-05-21 00:00:00+00:00; 2018-05-21 00:46:00+00:00 47; 2018-05-21 00:45:00; 2018-05-21 00:47:00; False
2018-05-21 02:47:16,625 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 47; elapsed time: 0:00:00.026843
2018-05-21 02:47:16,626 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 47; elapsed time: 0:00:00.317218
2018-05-21 02:47:16,626 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:47:16,643 ib_insync.wrapper error ERROR Error 162, reqId 32: Historical Market Data Service error message:API historical data query cancelled: 32
2018-05-21 02:47:16,644 trading.containerClass myErrorCallback INFO reqId: 32, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 32, localSymbol: None
2018-05-21 02:47:16,703 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17467, marketValue=218488.62, averageCost=1.2182257, unrealizedPNL=-8101.36, realizedPNL=0.0, account='DU946735')
2018-05-21 02:47:17,370 ib_insync.wrapper error INFO Warning 2104, reqId -1: Market data farm connection is OK:usfarm.us
2018-05-21 02:47:17,370 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2104, errorString: Market data farm connection is OK:usfarm.us, localSymbol: None
2018-05-21 02:47:17,593 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:47:17,602 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:47:17,602 ib_insync.wrapper error ERROR Error 162, reqId 34: Historical Market Data Service error message:API historical data query cancelled: 34
2018-05-21 02:47:17,603 trading.containerClass myErrorCallback INFO reqId: 34, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 34, localSymbol: None
2018-05-21 02:47:18,633 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:47:18,634 ib_insync.wrapper error ERROR Error 162, reqId 35: Historical Market Data Service error message:API historical data query cancelled: 35
2018-05-21 02:47:18,634 trading.containerClass myErrorCallback INFO reqId: 35, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 35, localSymbol: None
2018-05-21 02:47:19,667 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:47:19,668 ib_insync.wrapper error ERROR Error 162, reqId 36: Historical Market Data Service error message:API historical data query cancelled: 36
2018-05-21 02:47:19,668 trading.containerClass myErrorCallback INFO reqId: 36, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 36, localSymbol: None
2018-05-21 02:47:20,698 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:47:20,699 ib_insync.wrapper error ERROR Error 162, reqId 37: Historical Market Data Service error message:API historical data query cancelled: 37
2018-05-21 02:47:20,699 trading.containerClass myErrorCallback INFO reqId: 37, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 37, localSymbol: None
2018-05-21 02:47:21,575 ib_insync.wrapper error INFO Warning 2108, reqId -1: Market data farm connection is inactive but should be available upon demand.usfarm.us
2018-05-21 02:47:21,575 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2108, errorString: Market data farm connection is inactive but should be available upon demand.usfarm.us, localSymbol: None
2018-05-21 02:47:21,623 ib_insync.wrapper error INFO Warning 2108, reqId -1: Market data farm connection is inactive but should be available upon demand.usfarm.us
2018-05-21 02:47:21,623 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2108, errorString: Market data farm connection is inactive but should be available upon demand.usfarm.us, localSymbol: None
2018-05-21 02:47:21,901 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:47:21,902 ib_insync.wrapper error ERROR Error 162, reqId 38: Historical Market Data Service error message:API historical data query cancelled: 38
2018-05-21 02:47:21,903 trading.containerClass myErrorCallback INFO reqId: 38, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 38, localSymbol: None
2018-05-21 02:47:22,907 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:47:22,908 ib_insync.wrapper error ERROR Error 162, reqId 39: Historical Market Data Service error message:API historical data query cancelled: 39
2018-05-21 02:47:22,908 trading.containerClass myErrorCallback INFO reqId: 39, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 39, localSymbol: None
2018-05-21 02:47:23,936 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:47:23,937 ib_insync.wrapper error ERROR Error 162, reqId 40: Historical Market Data Service error message:API historical data query cancelled: 40
2018-05-21 02:47:23,937 trading.containerClass myErrorCallback INFO reqId: 40, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 40, localSymbol: None
2018-05-21 02:47:24,967 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:47:24,968 ib_insync.wrapper error ERROR Error 162, reqId 41: Historical Market Data Service error message:API historical data query cancelled: 41
2018-05-21 02:47:24,969 trading.containerClass myErrorCallback INFO reqId: 41, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 41, localSymbol: None
2018-05-21 02:47:25,983 ib_insync.wrapper handleEvent ERROR Event barUpdateEvent(([BarData(date=datetime.datetime(2018, 5, 18, 5, 47, tzinfo=datetime.timezone.utc), open=22912.26, high=22913.25, low=22910.45, close=22911.33, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 48, tzinfo=datetime.timezone.utc), open=22911.33, high=22914.03, low=22910.86, close=22914.03, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 49, tzinfo=datetime.timezone.utc), open=22914.03, high=22939.73, low=22914.03, close=22928.64, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 50, tzinfo=datetime.timezone.utc), open=22928.64, high=22928.95, low=22925.15, close=22927.39, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 51, tzinfo=datetime.timezone.utc), open=22927.39, high=22928.06, low=22925.08, close=22927.47, barCount=7), BarData(date=datetime.datetime(2018, 5, 18, 5, 52, tzinfo=datetime.timezone.utc), open=22927.47, high=22927.92, low=22924.7, close=22925.83, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 53, tzinfo=datetime.timezone.utc), open=22925.83, high=22925.83, low=22923.51, close=22923.79, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 54, tzinfo=datetime.timezone.utc), open=22923.79, high=22923.79, low=22921.19, close=22923.65, barCount=6), BarData(date=datetime.datetime(2018, 5, 18, 5, 55, tzinfo=datetime.timezone.utc), open=22923.65, high=22924.99, low=22920.89, close=22924.99, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 56, tzinfo=datetime.timezone.utc), open=22924.99, high=22929.09, low=22924.99, close=22928.19, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 57, tzinfo=datetime.timezone.utc), open=22928.19, high=22928.19, low=22913.05, close=22916.27, barCount=12), BarData(date=datetime.datetime(2018, 5, 18, 5, 58, tzinfo=datetime.timezone.utc), open=22916.27, high=22916.27, low=22909.84, close=22909.84, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 59, tzinfo=datetime.timezone.utc), open=22909.84, high=22934.37, low=22908.97, close=22934.37, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 0, tzinfo=datetime.timezone.utc), open=22937.58, high=22951.89, low=22937.58, close=22950.9, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 1, tzinfo=datetime.timezone.utc), open=22950.9, high=22951.27, low=22948.75, close=22948.75, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 2, tzinfo=datetime.timezone.utc), open=22948.75, high=22960.5, low=22948.75, close=22960.5, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 3, tzinfo=datetime.timezone.utc), open=22960.5, high=22968.04, low=22955.68, close=22967.65, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 4, tzinfo=datetime.timezone.utc), open=22967.65, high=22967.65, low=22958.76, close=22959.71, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 5, tzinfo=datetime.timezone.utc), open=22959.71, high=22962.2, low=22951.61, close=22951.62, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 6, tzinfo=datetime.timezone.utc), open=22951.62, high=22951.62, low=22946.81, close=22946.81, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 7, tzinfo=datetime.timezone.utc), open=22946.81, high=22948.57, low=22945.93, close=22947.74, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 8, tzinfo=datetime.timezone.utc), open=22947.74, high=22948.83, low=22943.07, close=22947.13, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 9, tzinfo=datetime.timezone.utc), open=22947.13, high=22951.73, low=22947.13, close=22948.89, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 10, tzinfo=datetime.timezone.utc), open=22948.89, high=22950.67, low=22946.22, close=22947.42, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 11, tzinfo=datetime.timezone.utc), open=22947.42, high=22949.61, low=22940.77, close=22942.13, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 12, tzinfo=datetime.timezone.utc), open=22942.13, high=22957.73, low=22941.85, close=22957.73, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 13, tzinfo=datetime.timezone.utc), open=22957.73, high=22961.32, low=22957.73, close=22960.25, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 14, tzinfo=datetime.timezone.utc), open=22960.25, high=22965.53, low=22959.55, close=22965.53, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 15, tzinfo=datetime.timezone.utc), open=22965.52, high=22969.97, low=22965.28, close=22965.36, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 16, tzinfo=datetime.timezone.utc), open=22965.37, high=22968.17, low=22963.81, close=22968.17, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 17, tzinfo=datetime.timezone.utc), open=22968.17, high=22970.78, low=22966.13, close=22967.44, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 18, tzinfo=datetime.timezone.utc), open=22967.43, high=22968.07, low=22962.98, close=22962.98, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 19, tzinfo=datetime.timezone.utc), open=22962.98, high=22963.28, low=22958.97, close=22959.53, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 20, tzinfo=datetime.timezone.utc), open=22959.54, high=22960.67, low=22949.33, close=22949.9, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 21, tzinfo=datetime.timezone.utc), open=22949.9, high=22952.0, low=22944.55, close=22944.55, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 22, tzinfo=datetime.timezone.utc), open=22944.55, high=22947.26, low=22943.14, close=22945.87, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 23, tzinfo=datetime.timezone.utc), open=22945.86, high=22948.65, low=22945.86, close=22948.64, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 24, tzinfo=datetime.timezone.utc), open=22948.64, high=22948.65, low=22943.35, close=22944.15, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 25, tzinfo=datetime.timezone.utc), open=22944.15, high=22947.33, low=22941.88, close=22942.42, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 26, tzinfo=datetime.timezone.utc), open=22942.42, high=22943.86, low=22937.88, close=22937.88, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 27, tzinfo=datetime.timezone.utc), open=22937.88, high=22939.09, low=22936.99, close=22939.09, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 28, tzinfo=datetime.timezone.utc), open=22939.09, high=22941.82, low=22937.76, close=22937.76, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 29, tzinfo=datetime.timezone.utc), open=22937.76, high=22937.92, low=22936.22, close=22936.54, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 30, tzinfo=datetime.timezone.utc), open=22936.53, high=22936.85, low=22935.31, close=22936.83, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 31, tzinfo=datetime.timezone.utc), open=22936.83, high=22949.16, low=22936.83, close=22949.16, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 32, tzinfo=datetime.timezone.utc), open=22949.16, high=22951.02, low=22948.47, close=22949.9, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 33, tzinfo=datetime.timezone.utc), open=22949.9, high=22949.9, low=22941.97, close=22941.97, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 34, tzinfo=datetime.timezone.utc), open=22941.97, high=22941.98, low=22938.4, close=22939.72, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 35, tzinfo=datetime.timezone.utc), open=22939.72, high=22944.53, low=22939.72, close=22944.53, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 36, tzinfo=datetime.timezone.utc), open=22944.52, high=22950.75, low=22944.52, close=22950.75, barCount=6), BarData(date=datetime.datetime(2018, 5, 21, 0, 37, tzinfo=datetime.timezone.utc), open=22950.75, high=22951.18, low=22948.75, close=22951.18, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 38, tzinfo=datetime.timezone.utc), open=22951.18, high=22954.03, low=22951.18, close=22954.03, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 39, tzinfo=datetime.timezone.utc), open=22954.02, high=22960.12, low=22954.02, close=22960.11, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 40, tzinfo=datetime.timezone.utc), open=22960.12, high=22963.35, low=22959.41, close=22963.35, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 41, tzinfo=datetime.timezone.utc), open=22963.35, high=22965.68, low=22962.17, close=22965.3, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 42, tzinfo=datetime.timezone.utc), open=22965.3, high=22968.98, low=22965.3, close=22968.87, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 43, tzinfo=datetime.timezone.utc), open=22968.86, high=22975.41, low=22968.86, close=22975.41, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 44, tzinfo=datetime.timezone.utc), open=22975.41, high=22981.19, low=22974.6, close=22978.92, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 45, tzinfo=datetime.timezone.utc), open=22978.92, high=22978.92, low=22977.13, close=22977.32, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 46, tzinfo=datetime.timezone.utc), open=22977.32, high=22977.32, low=22967.47, close=22969.37, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 47, tzinfo=datetime.timezone.utc), open=22969.36, high=22970.03, low=22969.36, close=22969.95, barCount=3)], False))
Traceback (most recent call last):
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/wrapper.py", line 143, in handleEvent
    event.emit(*args)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/event.py", line 76, in emit
    func(obj, *args, **kwargs)
  File "/home/bn/PycharmProjects/trading/trading/containerClass.py", line 293, in myBarUpdateCallback
    bars = self.requestRecentHistoricalBars(qc)
  File "/home/bn/PycharmProjects/trading/trading/containerClass.py", line 115, in requestRecentHistoricalBars
    timeOutTime=timeOutTime)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 71, in getHistoricalDataBars
    bars = ib.run(asyncio.wait_for(req, timeOutTime))
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/ib.py", line 251, in run
    result = util.syncAwait(future)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/util.py", line 245, in syncAwait
    result = _syncAwaitAsyncio(future)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/util.py", line 267, in _syncAwaitAsyncio
    return future.result()
asyncio.base_futures.InvalidStateError: Result is not set.
2018-05-21 02:47:25,987 ib_insync.wrapper handleEvent ERROR Event barUpdateEvent(([BarData(date=datetime.datetime(2018, 5, 18, 5, 47, tzinfo=datetime.timezone.utc), open=22912.26, high=22913.25, low=22910.45, close=22911.33, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 48, tzinfo=datetime.timezone.utc), open=22911.33, high=22914.03, low=22910.86, close=22914.03, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 49, tzinfo=datetime.timezone.utc), open=22914.03, high=22939.73, low=22914.03, close=22928.64, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 50, tzinfo=datetime.timezone.utc), open=22928.64, high=22928.95, low=22925.15, close=22927.39, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 51, tzinfo=datetime.timezone.utc), open=22927.39, high=22928.06, low=22925.08, close=22927.47, barCount=7), BarData(date=datetime.datetime(2018, 5, 18, 5, 52, tzinfo=datetime.timezone.utc), open=22927.47, high=22927.92, low=22924.7, close=22925.83, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 53, tzinfo=datetime.timezone.utc), open=22925.83, high=22925.83, low=22923.51, close=22923.79, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 54, tzinfo=datetime.timezone.utc), open=22923.79, high=22923.79, low=22921.19, close=22923.65, barCount=6), BarData(date=datetime.datetime(2018, 5, 18, 5, 55, tzinfo=datetime.timezone.utc), open=22923.65, high=22924.99, low=22920.89, close=22924.99, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 56, tzinfo=datetime.timezone.utc), open=22924.99, high=22929.09, low=22924.99, close=22928.19, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 57, tzinfo=datetime.timezone.utc), open=22928.19, high=22928.19, low=22913.05, close=22916.27, barCount=12), BarData(date=datetime.datetime(2018, 5, 18, 5, 58, tzinfo=datetime.timezone.utc), open=22916.27, high=22916.27, low=22909.84, close=22909.84, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 59, tzinfo=datetime.timezone.utc), open=22909.84, high=22934.37, low=22908.97, close=22934.37, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 0, tzinfo=datetime.timezone.utc), open=22937.58, high=22951.89, low=22937.58, close=22950.9, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 1, tzinfo=datetime.timezone.utc), open=22950.9, high=22951.27, low=22948.75, close=22948.75, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 2, tzinfo=datetime.timezone.utc), open=22948.75, high=22960.5, low=22948.75, close=22960.5, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 3, tzinfo=datetime.timezone.utc), open=22960.5, high=22968.04, low=22955.68, close=22967.65, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 4, tzinfo=datetime.timezone.utc), open=22967.65, high=22967.65, low=22958.76, close=22959.71, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 5, tzinfo=datetime.timezone.utc), open=22959.71, high=22962.2, low=22951.61, close=22951.62, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 6, tzinfo=datetime.timezone.utc), open=22951.62, high=22951.62, low=22946.81, close=22946.81, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 7, tzinfo=datetime.timezone.utc), open=22946.81, high=22948.57, low=22945.93, close=22947.74, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 8, tzinfo=datetime.timezone.utc), open=22947.74, high=22948.83, low=22943.07, close=22947.13, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 9, tzinfo=datetime.timezone.utc), open=22947.13, high=22951.73, low=22947.13, close=22948.89, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 10, tzinfo=datetime.timezone.utc), open=22948.89, high=22950.67, low=22946.22, close=22947.42, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 11, tzinfo=datetime.timezone.utc), open=22947.42, high=22949.61, low=22940.77, close=22942.13, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 12, tzinfo=datetime.timezone.utc), open=22942.13, high=22957.73, low=22941.85, close=22957.73, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 13, tzinfo=datetime.timezone.utc), open=22957.73, high=22961.32, low=22957.73, close=22960.25, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 14, tzinfo=datetime.timezone.utc), open=22960.25, high=22965.53, low=22959.55, close=22965.53, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 15, tzinfo=datetime.timezone.utc), open=22965.52, high=22969.97, low=22965.28, close=22965.36, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 16, tzinfo=datetime.timezone.utc), open=22965.37, high=22968.17, low=22963.81, close=22968.17, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 17, tzinfo=datetime.timezone.utc), open=22968.17, high=22970.78, low=22966.13, close=22967.44, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 18, tzinfo=datetime.timezone.utc), open=22967.43, high=22968.07, low=22962.98, close=22962.98, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 19, tzinfo=datetime.timezone.utc), open=22962.98, high=22963.28, low=22958.97, close=22959.53, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 20, tzinfo=datetime.timezone.utc), open=22959.54, high=22960.67, low=22949.33, close=22949.9, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 21, tzinfo=datetime.timezone.utc), open=22949.9, high=22952.0, low=22944.55, close=22944.55, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 22, tzinfo=datetime.timezone.utc), open=22944.55, high=22947.26, low=22943.14, close=22945.87, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 23, tzinfo=datetime.timezone.utc), open=22945.86, high=22948.65, low=22945.86, close=22948.64, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 24, tzinfo=datetime.timezone.utc), open=22948.64, high=22948.65, low=22943.35, close=22944.15, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 25, tzinfo=datetime.timezone.utc), open=22944.15, high=22947.33, low=22941.88, close=22942.42, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 26, tzinfo=datetime.timezone.utc), open=22942.42, high=22943.86, low=22937.88, close=22937.88, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 27, tzinfo=datetime.timezone.utc), open=22937.88, high=22939.09, low=22936.99, close=22939.09, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 28, tzinfo=datetime.timezone.utc), open=22939.09, high=22941.82, low=22937.76, close=22937.76, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 29, tzinfo=datetime.timezone.utc), open=22937.76, high=22937.92, low=22936.22, close=22936.54, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 30, tzinfo=datetime.timezone.utc), open=22936.53, high=22936.85, low=22935.31, close=22936.83, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 31, tzinfo=datetime.timezone.utc), open=22936.83, high=22949.16, low=22936.83, close=22949.16, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 32, tzinfo=datetime.timezone.utc), open=22949.16, high=22951.02, low=22948.47, close=22949.9, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 33, tzinfo=datetime.timezone.utc), open=22949.9, high=22949.9, low=22941.97, close=22941.97, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 34, tzinfo=datetime.timezone.utc), open=22941.97, high=22941.98, low=22938.4, close=22939.72, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 35, tzinfo=datetime.timezone.utc), open=22939.72, high=22944.53, low=22939.72, close=22944.53, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 36, tzinfo=datetime.timezone.utc), open=22944.52, high=22950.75, low=22944.52, close=22950.75, barCount=6), BarData(date=datetime.datetime(2018, 5, 21, 0, 37, tzinfo=datetime.timezone.utc), open=22950.75, high=22951.18, low=22948.75, close=22951.18, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 38, tzinfo=datetime.timezone.utc), open=22951.18, high=22954.03, low=22951.18, close=22954.03, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 39, tzinfo=datetime.timezone.utc), open=22954.02, high=22960.12, low=22954.02, close=22960.11, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 40, tzinfo=datetime.timezone.utc), open=22960.12, high=22963.35, low=22959.41, close=22963.35, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 41, tzinfo=datetime.timezone.utc), open=22963.35, high=22965.68, low=22962.17, close=22965.3, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 42, tzinfo=datetime.timezone.utc), open=22965.3, high=22968.98, low=22965.3, close=22968.87, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 43, tzinfo=datetime.timezone.utc), open=22968.86, high=22975.41, low=22968.86, close=22975.41, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 44, tzinfo=datetime.timezone.utc), open=22975.41, high=22981.19, low=22974.6, close=22978.92, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 45, tzinfo=datetime.timezone.utc), open=22978.92, high=22978.92, low=22977.13, close=22977.32, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 46, tzinfo=datetime.timezone.utc), open=22977.32, high=22977.32, low=22967.47, close=22969.37, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 47, tzinfo=datetime.timezone.utc), open=22969.36, high=22970.03, low=22969.36, close=22969.95, barCount=3)], False))
Traceback (most recent call last):
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/wrapper.py", line 143, in handleEvent
    event.emit(*args)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/event.py", line 76, in emit
    func(obj, *args, **kwargs)
  File "/home/bn/PycharmProjects/trading/trading/containerClass.py", line 293, in myBarUpdateCallback
    bars = self.requestRecentHistoricalBars(qc)
  File "/home/bn/PycharmProjects/trading/trading/containerClass.py", line 115, in requestRecentHistoricalBars
    timeOutTime=timeOutTime)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 71, in getHistoricalDataBars
    bars = ib.run(asyncio.wait_for(req, timeOutTime))
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/ib.py", line 251, in run
    result = util.syncAwait(future)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/util.py", line 245, in syncAwait
    result = _syncAwaitAsyncio(future)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/util.py", line 267, in _syncAwaitAsyncio
    return future.result()
asyncio.base_futures.InvalidStateError: Result is not set.
2018-05-21 02:47:25,990 ib_insync.wrapper handleEvent ERROR Event barUpdateEvent(([BarData(date=datetime.datetime(2018, 5, 18, 5, 47, tzinfo=datetime.timezone.utc), open=22912.26, high=22913.25, low=22910.45, close=22911.33, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 48, tzinfo=datetime.timezone.utc), open=22911.33, high=22914.03, low=22910.86, close=22914.03, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 49, tzinfo=datetime.timezone.utc), open=22914.03, high=22939.73, low=22914.03, close=22928.64, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 50, tzinfo=datetime.timezone.utc), open=22928.64, high=22928.95, low=22925.15, close=22927.39, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 51, tzinfo=datetime.timezone.utc), open=22927.39, high=22928.06, low=22925.08, close=22927.47, barCount=7), BarData(date=datetime.datetime(2018, 5, 18, 5, 52, tzinfo=datetime.timezone.utc), open=22927.47, high=22927.92, low=22924.7, close=22925.83, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 53, tzinfo=datetime.timezone.utc), open=22925.83, high=22925.83, low=22923.51, close=22923.79, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 54, tzinfo=datetime.timezone.utc), open=22923.79, high=22923.79, low=22921.19, close=22923.65, barCount=6), BarData(date=datetime.datetime(2018, 5, 18, 5, 55, tzinfo=datetime.timezone.utc), open=22923.65, high=22924.99, low=22920.89, close=22924.99, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 56, tzinfo=datetime.timezone.utc), open=22924.99, high=22929.09, low=22924.99, close=22928.19, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 57, tzinfo=datetime.timezone.utc), open=22928.19, high=22928.19, low=22913.05, close=22916.27, barCount=12), BarData(date=datetime.datetime(2018, 5, 18, 5, 58, tzinfo=datetime.timezone.utc), open=22916.27, high=22916.27, low=22909.84, close=22909.84, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 59, tzinfo=datetime.timezone.utc), open=22909.84, high=22934.37, low=22908.97, close=22934.37, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 0, tzinfo=datetime.timezone.utc), open=22937.58, high=22951.89, low=22937.58, close=22950.9, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 1, tzinfo=datetime.timezone.utc), open=22950.9, high=22951.27, low=22948.75, close=22948.75, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 2, tzinfo=datetime.timezone.utc), open=22948.75, high=22960.5, low=22948.75, close=22960.5, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 3, tzinfo=datetime.timezone.utc), open=22960.5, high=22968.04, low=22955.68, close=22967.65, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 4, tzinfo=datetime.timezone.utc), open=22967.65, high=22967.65, low=22958.76, close=22959.71, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 5, tzinfo=datetime.timezone.utc), open=22959.71, high=22962.2, low=22951.61, close=22951.62, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 6, tzinfo=datetime.timezone.utc), open=22951.62, high=22951.62, low=22946.81, close=22946.81, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 7, tzinfo=datetime.timezone.utc), open=22946.81, high=22948.57, low=22945.93, close=22947.74, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 8, tzinfo=datetime.timezone.utc), open=22947.74, high=22948.83, low=22943.07, close=22947.13, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 9, tzinfo=datetime.timezone.utc), open=22947.13, high=22951.73, low=22947.13, close=22948.89, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 10, tzinfo=datetime.timezone.utc), open=22948.89, high=22950.67, low=22946.22, close=22947.42, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 11, tzinfo=datetime.timezone.utc), open=22947.42, high=22949.61, low=22940.77, close=22942.13, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 12, tzinfo=datetime.timezone.utc), open=22942.13, high=22957.73, low=22941.85, close=22957.73, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 13, tzinfo=datetime.timezone.utc), open=22957.73, high=22961.32, low=22957.73, close=22960.25, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 14, tzinfo=datetime.timezone.utc), open=22960.25, high=22965.53, low=22959.55, close=22965.53, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 15, tzinfo=datetime.timezone.utc), open=22965.52, high=22969.97, low=22965.28, close=22965.36, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 16, tzinfo=datetime.timezone.utc), open=22965.37, high=22968.17, low=22963.81, close=22968.17, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 17, tzinfo=datetime.timezone.utc), open=22968.17, high=22970.78, low=22966.13, close=22967.44, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 18, tzinfo=datetime.timezone.utc), open=22967.43, high=22968.07, low=22962.98, close=22962.98, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 19, tzinfo=datetime.timezone.utc), open=22962.98, high=22963.28, low=22958.97, close=22959.53, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 20, tzinfo=datetime.timezone.utc), open=22959.54, high=22960.67, low=22949.33, close=22949.9, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 21, tzinfo=datetime.timezone.utc), open=22949.9, high=22952.0, low=22944.55, close=22944.55, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 22, tzinfo=datetime.timezone.utc), open=22944.55, high=22947.26, low=22943.14, close=22945.87, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 23, tzinfo=datetime.timezone.utc), open=22945.86, high=22948.65, low=22945.86, close=22948.64, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 24, tzinfo=datetime.timezone.utc), open=22948.64, high=22948.65, low=22943.35, close=22944.15, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 25, tzinfo=datetime.timezone.utc), open=22944.15, high=22947.33, low=22941.88, close=22942.42, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 26, tzinfo=datetime.timezone.utc), open=22942.42, high=22943.86, low=22937.88, close=22937.88, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 27, tzinfo=datetime.timezone.utc), open=22937.88, high=22939.09, low=22936.99, close=22939.09, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 28, tzinfo=datetime.timezone.utc), open=22939.09, high=22941.82, low=22937.76, close=22937.76, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 29, tzinfo=datetime.timezone.utc), open=22937.76, high=22937.92, low=22936.22, close=22936.54, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 30, tzinfo=datetime.timezone.utc), open=22936.53, high=22936.85, low=22935.31, close=22936.83, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 31, tzinfo=datetime.timezone.utc), open=22936.83, high=22949.16, low=22936.83, close=22949.16, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 32, tzinfo=datetime.timezone.utc), open=22949.16, high=22951.02, low=22948.47, close=22949.9, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 33, tzinfo=datetime.timezone.utc), open=22949.9, high=22949.9, low=22941.97, close=22941.97, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 34, tzinfo=datetime.timezone.utc), open=22941.97, high=22941.98, low=22938.4, close=22939.72, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 35, tzinfo=datetime.timezone.utc), open=22939.72, high=22944.53, low=22939.72, close=22944.53, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 36, tzinfo=datetime.timezone.utc), open=22944.52, high=22950.75, low=22944.52, close=22950.75, barCount=6), BarData(date=datetime.datetime(2018, 5, 21, 0, 37, tzinfo=datetime.timezone.utc), open=22950.75, high=22951.18, low=22948.75, close=22951.18, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 38, tzinfo=datetime.timezone.utc), open=22951.18, high=22954.03, low=22951.18, close=22954.03, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 39, tzinfo=datetime.timezone.utc), open=22954.02, high=22960.12, low=22954.02, close=22960.11, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 40, tzinfo=datetime.timezone.utc), open=22960.12, high=22963.35, low=22959.41, close=22963.35, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 41, tzinfo=datetime.timezone.utc), open=22963.35, high=22965.68, low=22962.17, close=22965.3, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 42, tzinfo=datetime.timezone.utc), open=22965.3, high=22968.98, low=22965.3, close=22968.87, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 43, tzinfo=datetime.timezone.utc), open=22968.86, high=22975.41, low=22968.86, close=22975.41, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 44, tzinfo=datetime.timezone.utc), open=22975.41, high=22981.19, low=22974.6, close=22978.92, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 45, tzinfo=datetime.timezone.utc), open=22978.92, high=22978.92, low=22977.13, close=22977.32, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 46, tzinfo=datetime.timezone.utc), open=22977.32, high=22977.32, low=22967.47, close=22969.37, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 47, tzinfo=datetime.timezone.utc), open=22969.36, high=22970.03, low=22969.36, close=22969.95, barCount=3)], False))
Traceback (most recent call last):
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/wrapper.py", line 143, in handleEvent
    event.emit(*args)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/event.py", line 76, in emit
    func(obj, *args, **kwargs)
  File "/home/bn/PycharmProjects/trading/trading/containerClass.py", line 293, in myBarUpdateCallback
    bars = self.requestRecentHistoricalBars(qc)
  File "/home/bn/PycharmProjects/trading/trading/containerClass.py", line 115, in requestRecentHistoricalBars
    timeOutTime=timeOutTime)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 71, in getHistoricalDataBars
    bars = ib.run(asyncio.wait_for(req, timeOutTime))
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/ib.py", line 251, in run
    result = util.syncAwait(future)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/util.py", line 245, in syncAwait
    result = _syncAwaitAsyncio(future)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/util.py", line 267, in _syncAwaitAsyncio
    return future.result()
asyncio.base_futures.InvalidStateError: Result is not set.
2018-05-21 02:47:25,992 ib_insync.wrapper handleEvent ERROR Event barUpdateEvent(([BarData(date=datetime.datetime(2018, 5, 18, 5, 47, tzinfo=datetime.timezone.utc), open=22912.26, high=22913.25, low=22910.45, close=22911.33, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 48, tzinfo=datetime.timezone.utc), open=22911.33, high=22914.03, low=22910.86, close=22914.03, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 49, tzinfo=datetime.timezone.utc), open=22914.03, high=22939.73, low=22914.03, close=22928.64, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 50, tzinfo=datetime.timezone.utc), open=22928.64, high=22928.95, low=22925.15, close=22927.39, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 51, tzinfo=datetime.timezone.utc), open=22927.39, high=22928.06, low=22925.08, close=22927.47, barCount=7), BarData(date=datetime.datetime(2018, 5, 18, 5, 52, tzinfo=datetime.timezone.utc), open=22927.47, high=22927.92, low=22924.7, close=22925.83, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 53, tzinfo=datetime.timezone.utc), open=22925.83, high=22925.83, low=22923.51, close=22923.79, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 54, tzinfo=datetime.timezone.utc), open=22923.79, high=22923.79, low=22921.19, close=22923.65, barCount=6), BarData(date=datetime.datetime(2018, 5, 18, 5, 55, tzinfo=datetime.timezone.utc), open=22923.65, high=22924.99, low=22920.89, close=22924.99, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 56, tzinfo=datetime.timezone.utc), open=22924.99, high=22929.09, low=22924.99, close=22928.19, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 57, tzinfo=datetime.timezone.utc), open=22928.19, high=22928.19, low=22913.05, close=22916.27, barCount=12), BarData(date=datetime.datetime(2018, 5, 18, 5, 58, tzinfo=datetime.timezone.utc), open=22916.27, high=22916.27, low=22909.84, close=22909.84, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 59, tzinfo=datetime.timezone.utc), open=22909.84, high=22934.37, low=22908.97, close=22934.37, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 0, tzinfo=datetime.timezone.utc), open=22937.58, high=22951.89, low=22937.58, close=22950.9, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 1, tzinfo=datetime.timezone.utc), open=22950.9, high=22951.27, low=22948.75, close=22948.75, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 2, tzinfo=datetime.timezone.utc), open=22948.75, high=22960.5, low=22948.75, close=22960.5, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 3, tzinfo=datetime.timezone.utc), open=22960.5, high=22968.04, low=22955.68, close=22967.65, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 4, tzinfo=datetime.timezone.utc), open=22967.65, high=22967.65, low=22958.76, close=22959.71, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 5, tzinfo=datetime.timezone.utc), open=22959.71, high=22962.2, low=22951.61, close=22951.62, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 6, tzinfo=datetime.timezone.utc), open=22951.62, high=22951.62, low=22946.81, close=22946.81, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 7, tzinfo=datetime.timezone.utc), open=22946.81, high=22948.57, low=22945.93, close=22947.74, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 8, tzinfo=datetime.timezone.utc), open=22947.74, high=22948.83, low=22943.07, close=22947.13, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 9, tzinfo=datetime.timezone.utc), open=22947.13, high=22951.73, low=22947.13, close=22948.89, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 10, tzinfo=datetime.timezone.utc), open=22948.89, high=22950.67, low=22946.22, close=22947.42, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 11, tzinfo=datetime.timezone.utc), open=22947.42, high=22949.61, low=22940.77, close=22942.13, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 12, tzinfo=datetime.timezone.utc), open=22942.13, high=22957.73, low=22941.85, close=22957.73, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 13, tzinfo=datetime.timezone.utc), open=22957.73, high=22961.32, low=22957.73, close=22960.25, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 14, tzinfo=datetime.timezone.utc), open=22960.25, high=22965.53, low=22959.55, close=22965.53, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 15, tzinfo=datetime.timezone.utc), open=22965.52, high=22969.97, low=22965.28, close=22965.36, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 16, tzinfo=datetime.timezone.utc), open=22965.37, high=22968.17, low=22963.81, close=22968.17, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 17, tzinfo=datetime.timezone.utc), open=22968.17, high=22970.78, low=22966.13, close=22967.44, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 18, tzinfo=datetime.timezone.utc), open=22967.43, high=22968.07, low=22962.98, close=22962.98, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 19, tzinfo=datetime.timezone.utc), open=22962.98, high=22963.28, low=22958.97, close=22959.53, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 20, tzinfo=datetime.timezone.utc), open=22959.54, high=22960.67, low=22949.33, close=22949.9, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 21, tzinfo=datetime.timezone.utc), open=22949.9, high=22952.0, low=22944.55, close=22944.55, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 22, tzinfo=datetime.timezone.utc), open=22944.55, high=22947.26, low=22943.14, close=22945.87, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 23, tzinfo=datetime.timezone.utc), open=22945.86, high=22948.65, low=22945.86, close=22948.64, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 24, tzinfo=datetime.timezone.utc), open=22948.64, high=22948.65, low=22943.35, close=22944.15, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 25, tzinfo=datetime.timezone.utc), open=22944.15, high=22947.33, low=22941.88, close=22942.42, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 26, tzinfo=datetime.timezone.utc), open=22942.42, high=22943.86, low=22937.88, close=22937.88, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 27, tzinfo=datetime.timezone.utc), open=22937.88, high=22939.09, low=22936.99, close=22939.09, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 28, tzinfo=datetime.timezone.utc), open=22939.09, high=22941.82, low=22937.76, close=22937.76, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 29, tzinfo=datetime.timezone.utc), open=22937.76, high=22937.92, low=22936.22, close=22936.54, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 30, tzinfo=datetime.timezone.utc), open=22936.53, high=22936.85, low=22935.31, close=22936.83, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 31, tzinfo=datetime.timezone.utc), open=22936.83, high=22949.16, low=22936.83, close=22949.16, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 32, tzinfo=datetime.timezone.utc), open=22949.16, high=22951.02, low=22948.47, close=22949.9, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 33, tzinfo=datetime.timezone.utc), open=22949.9, high=22949.9, low=22941.97, close=22941.97, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 34, tzinfo=datetime.timezone.utc), open=22941.97, high=22941.98, low=22938.4, close=22939.72, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 35, tzinfo=datetime.timezone.utc), open=22939.72, high=22944.53, low=22939.72, close=22944.53, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 36, tzinfo=datetime.timezone.utc), open=22944.52, high=22950.75, low=22944.52, close=22950.75, barCount=6), BarData(date=datetime.datetime(2018, 5, 21, 0, 37, tzinfo=datetime.timezone.utc), open=22950.75, high=22951.18, low=22948.75, close=22951.18, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 38, tzinfo=datetime.timezone.utc), open=22951.18, high=22954.03, low=22951.18, close=22954.03, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 39, tzinfo=datetime.timezone.utc), open=22954.02, high=22960.12, low=22954.02, close=22960.11, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 40, tzinfo=datetime.timezone.utc), open=22960.12, high=22963.35, low=22959.41, close=22963.35, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 41, tzinfo=datetime.timezone.utc), open=22963.35, high=22965.68, low=22962.17, close=22965.3, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 42, tzinfo=datetime.timezone.utc), open=22965.3, high=22968.98, low=22965.3, close=22968.87, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 43, tzinfo=datetime.timezone.utc), open=22968.86, high=22975.41, low=22968.86, close=22975.41, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 44, tzinfo=datetime.timezone.utc), open=22975.41, high=22981.19, low=22974.6, close=22978.92, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 45, tzinfo=datetime.timezone.utc), open=22978.92, high=22978.92, low=22977.13, close=22977.32, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 46, tzinfo=datetime.timezone.utc), open=22977.32, high=22977.32, low=22967.47, close=22969.37, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 47, tzinfo=datetime.timezone.utc), open=22969.36, high=22970.03, low=22969.36, close=22969.95, barCount=3)], False))
Traceback (most recent call last):
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/wrapper.py", line 143, in handleEvent
    event.emit(*args)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/event.py", line 76, in emit
    func(obj, *args, **kwargs)
  File "/home/bn/PycharmProjects/trading/trading/containerClass.py", line 293, in myBarUpdateCallback
    bars = self.requestRecentHistoricalBars(qc)
  File "/home/bn/PycharmProjects/trading/trading/containerClass.py", line 115, in requestRecentHistoricalBars
    timeOutTime=timeOutTime)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 71, in getHistoricalDataBars
    bars = ib.run(asyncio.wait_for(req, timeOutTime))
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/ib.py", line 251, in run
    result = util.syncAwait(future)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/util.py", line 245, in syncAwait
    result = _syncAwaitAsyncio(future)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/util.py", line 267, in _syncAwaitAsyncio
    return future.result()
asyncio.base_futures.InvalidStateError: Result is not set.
2018-05-21 02:47:25,995 ib_insync.wrapper handleEvent ERROR Event barUpdateEvent(([BarData(date=datetime.datetime(2018, 5, 18, 5, 47, tzinfo=datetime.timezone.utc), open=22912.26, high=22913.25, low=22910.45, close=22911.33, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 48, tzinfo=datetime.timezone.utc), open=22911.33, high=22914.03, low=22910.86, close=22914.03, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 49, tzinfo=datetime.timezone.utc), open=22914.03, high=22939.73, low=22914.03, close=22928.64, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 50, tzinfo=datetime.timezone.utc), open=22928.64, high=22928.95, low=22925.15, close=22927.39, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 51, tzinfo=datetime.timezone.utc), open=22927.39, high=22928.06, low=22925.08, close=22927.47, barCount=7), BarData(date=datetime.datetime(2018, 5, 18, 5, 52, tzinfo=datetime.timezone.utc), open=22927.47, high=22927.92, low=22924.7, close=22925.83, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 53, tzinfo=datetime.timezone.utc), open=22925.83, high=22925.83, low=22923.51, close=22923.79, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 54, tzinfo=datetime.timezone.utc), open=22923.79, high=22923.79, low=22921.19, close=22923.65, barCount=6), BarData(date=datetime.datetime(2018, 5, 18, 5, 55, tzinfo=datetime.timezone.utc), open=22923.65, high=22924.99, low=22920.89, close=22924.99, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 56, tzinfo=datetime.timezone.utc), open=22924.99, high=22929.09, low=22924.99, close=22928.19, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 57, tzinfo=datetime.timezone.utc), open=22928.19, high=22928.19, low=22913.05, close=22916.27, barCount=12), BarData(date=datetime.datetime(2018, 5, 18, 5, 58, tzinfo=datetime.timezone.utc), open=22916.27, high=22916.27, low=22909.84, close=22909.84, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 59, tzinfo=datetime.timezone.utc), open=22909.84, high=22934.37, low=22908.97, close=22934.37, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 0, tzinfo=datetime.timezone.utc), open=22937.58, high=22951.89, low=22937.58, close=22950.9, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 1, tzinfo=datetime.timezone.utc), open=22950.9, high=22951.27, low=22948.75, close=22948.75, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 2, tzinfo=datetime.timezone.utc), open=22948.75, high=22960.5, low=22948.75, close=22960.5, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 3, tzinfo=datetime.timezone.utc), open=22960.5, high=22968.04, low=22955.68, close=22967.65, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 4, tzinfo=datetime.timezone.utc), open=22967.65, high=22967.65, low=22958.76, close=22959.71, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 5, tzinfo=datetime.timezone.utc), open=22959.71, high=22962.2, low=22951.61, close=22951.62, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 6, tzinfo=datetime.timezone.utc), open=22951.62, high=22951.62, low=22946.81, close=22946.81, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 7, tzinfo=datetime.timezone.utc), open=22946.81, high=22948.57, low=22945.93, close=22947.74, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 8, tzinfo=datetime.timezone.utc), open=22947.74, high=22948.83, low=22943.07, close=22947.13, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 9, tzinfo=datetime.timezone.utc), open=22947.13, high=22951.73, low=22947.13, close=22948.89, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 10, tzinfo=datetime.timezone.utc), open=22948.89, high=22950.67, low=22946.22, close=22947.42, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 11, tzinfo=datetime.timezone.utc), open=22947.42, high=22949.61, low=22940.77, close=22942.13, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 12, tzinfo=datetime.timezone.utc), open=22942.13, high=22957.73, low=22941.85, close=22957.73, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 13, tzinfo=datetime.timezone.utc), open=22957.73, high=22961.32, low=22957.73, close=22960.25, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 14, tzinfo=datetime.timezone.utc), open=22960.25, high=22965.53, low=22959.55, close=22965.53, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 15, tzinfo=datetime.timezone.utc), open=22965.52, high=22969.97, low=22965.28, close=22965.36, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 16, tzinfo=datetime.timezone.utc), open=22965.37, high=22968.17, low=22963.81, close=22968.17, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 17, tzinfo=datetime.timezone.utc), open=22968.17, high=22970.78, low=22966.13, close=22967.44, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 18, tzinfo=datetime.timezone.utc), open=22967.43, high=22968.07, low=22962.98, close=22962.98, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 19, tzinfo=datetime.timezone.utc), open=22962.98, high=22963.28, low=22958.97, close=22959.53, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 20, tzinfo=datetime.timezone.utc), open=22959.54, high=22960.67, low=22949.33, close=22949.9, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 21, tzinfo=datetime.timezone.utc), open=22949.9, high=22952.0, low=22944.55, close=22944.55, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 22, tzinfo=datetime.timezone.utc), open=22944.55, high=22947.26, low=22943.14, close=22945.87, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 23, tzinfo=datetime.timezone.utc), open=22945.86, high=22948.65, low=22945.86, close=22948.64, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 24, tzinfo=datetime.timezone.utc), open=22948.64, high=22948.65, low=22943.35, close=22944.15, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 25, tzinfo=datetime.timezone.utc), open=22944.15, high=22947.33, low=22941.88, close=22942.42, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 26, tzinfo=datetime.timezone.utc), open=22942.42, high=22943.86, low=22937.88, close=22937.88, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 27, tzinfo=datetime.timezone.utc), open=22937.88, high=22939.09, low=22936.99, close=22939.09, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 28, tzinfo=datetime.timezone.utc), open=22939.09, high=22941.82, low=22937.76, close=22937.76, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 29, tzinfo=datetime.timezone.utc), open=22937.76, high=22937.92, low=22936.22, close=22936.54, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 30, tzinfo=datetime.timezone.utc), open=22936.53, high=22936.85, low=22935.31, close=22936.83, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 31, tzinfo=datetime.timezone.utc), open=22936.83, high=22949.16, low=22936.83, close=22949.16, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 32, tzinfo=datetime.timezone.utc), open=22949.16, high=22951.02, low=22948.47, close=22949.9, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 33, tzinfo=datetime.timezone.utc), open=22949.9, high=22949.9, low=22941.97, close=22941.97, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 34, tzinfo=datetime.timezone.utc), open=22941.97, high=22941.98, low=22938.4, close=22939.72, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 35, tzinfo=datetime.timezone.utc), open=22939.72, high=22944.53, low=22939.72, close=22944.53, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 36, tzinfo=datetime.timezone.utc), open=22944.52, high=22950.75, low=22944.52, close=22950.75, barCount=6), BarData(date=datetime.datetime(2018, 5, 21, 0, 37, tzinfo=datetime.timezone.utc), open=22950.75, high=22951.18, low=22948.75, close=22951.18, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 38, tzinfo=datetime.timezone.utc), open=22951.18, high=22954.03, low=22951.18, close=22954.03, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 39, tzinfo=datetime.timezone.utc), open=22954.02, high=22960.12, low=22954.02, close=22960.11, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 40, tzinfo=datetime.timezone.utc), open=22960.12, high=22963.35, low=22959.41, close=22963.35, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 41, tzinfo=datetime.timezone.utc), open=22963.35, high=22965.68, low=22962.17, close=22965.3, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 42, tzinfo=datetime.timezone.utc), open=22965.3, high=22968.98, low=22965.3, close=22968.87, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 43, tzinfo=datetime.timezone.utc), open=22968.86, high=22975.41, low=22968.86, close=22975.41, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 44, tzinfo=datetime.timezone.utc), open=22975.41, high=22981.19, low=22974.6, close=22978.92, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 45, tzinfo=datetime.timezone.utc), open=22978.92, high=22978.92, low=22977.13, close=22977.32, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 46, tzinfo=datetime.timezone.utc), open=22977.32, high=22977.32, low=22967.47, close=22969.37, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 47, tzinfo=datetime.timezone.utc), open=22969.36, high=22970.03, low=22969.36, close=22969.45, barCount=2)], False))
Traceback (most recent call last):
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/wrapper.py", line 143, in handleEvent
    event.emit(*args)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/event.py", line 76, in emit
    func(obj, *args, **kwargs)
  File "/home/bn/PycharmProjects/trading/trading/containerClass.py", line 293, in myBarUpdateCallback
    bars = self.requestRecentHistoricalBars(qc)
  File "/home/bn/PycharmProjects/trading/trading/containerClass.py", line 115, in requestRecentHistoricalBars
    timeOutTime=timeOutTime)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 71, in getHistoricalDataBars
    bars = ib.run(asyncio.wait_for(req, timeOutTime))
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/ib.py", line 251, in run
    result = util.syncAwait(future)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/util.py", line 245, in syncAwait
    result = _syncAwaitAsyncio(future)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/util.py", line 267, in _syncAwaitAsyncio
    return future.result()
asyncio.base_futures.InvalidStateError: Result is not set.
2018-05-21 02:47:25,997 ib_insync.wrapper handleEvent ERROR Event barUpdateEvent(([BarData(date=datetime.datetime(2018, 5, 18, 5, 47, tzinfo=datetime.timezone.utc), open=22912.26, high=22913.25, low=22910.45, close=22911.33, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 48, tzinfo=datetime.timezone.utc), open=22911.33, high=22914.03, low=22910.86, close=22914.03, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 49, tzinfo=datetime.timezone.utc), open=22914.03, high=22939.73, low=22914.03, close=22928.64, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 50, tzinfo=datetime.timezone.utc), open=22928.64, high=22928.95, low=22925.15, close=22927.39, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 51, tzinfo=datetime.timezone.utc), open=22927.39, high=22928.06, low=22925.08, close=22927.47, barCount=7), BarData(date=datetime.datetime(2018, 5, 18, 5, 52, tzinfo=datetime.timezone.utc), open=22927.47, high=22927.92, low=22924.7, close=22925.83, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 53, tzinfo=datetime.timezone.utc), open=22925.83, high=22925.83, low=22923.51, close=22923.79, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 54, tzinfo=datetime.timezone.utc), open=22923.79, high=22923.79, low=22921.19, close=22923.65, barCount=6), BarData(date=datetime.datetime(2018, 5, 18, 5, 55, tzinfo=datetime.timezone.utc), open=22923.65, high=22924.99, low=22920.89, close=22924.99, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 56, tzinfo=datetime.timezone.utc), open=22924.99, high=22929.09, low=22924.99, close=22928.19, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 57, tzinfo=datetime.timezone.utc), open=22928.19, high=22928.19, low=22913.05, close=22916.27, barCount=12), BarData(date=datetime.datetime(2018, 5, 18, 5, 58, tzinfo=datetime.timezone.utc), open=22916.27, high=22916.27, low=22909.84, close=22909.84, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 59, tzinfo=datetime.timezone.utc), open=22909.84, high=22934.37, low=22908.97, close=22934.37, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 0, tzinfo=datetime.timezone.utc), open=22937.58, high=22951.89, low=22937.58, close=22950.9, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 1, tzinfo=datetime.timezone.utc), open=22950.9, high=22951.27, low=22948.75, close=22948.75, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 2, tzinfo=datetime.timezone.utc), open=22948.75, high=22960.5, low=22948.75, close=22960.5, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 3, tzinfo=datetime.timezone.utc), open=22960.5, high=22968.04, low=22955.68, close=22967.65, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 4, tzinfo=datetime.timezone.utc), open=22967.65, high=22967.65, low=22958.76, close=22959.71, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 5, tzinfo=datetime.timezone.utc), open=22959.71, high=22962.2, low=22951.61, close=22951.62, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 6, tzinfo=datetime.timezone.utc), open=22951.62, high=22951.62, low=22946.81, close=22946.81, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 7, tzinfo=datetime.timezone.utc), open=22946.81, high=22948.57, low=22945.93, close=22947.74, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 8, tzinfo=datetime.timezone.utc), open=22947.74, high=22948.83, low=22943.07, close=22947.13, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 9, tzinfo=datetime.timezone.utc), open=22947.13, high=22951.73, low=22947.13, close=22948.89, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 10, tzinfo=datetime.timezone.utc), open=22948.89, high=22950.67, low=22946.22, close=22947.42, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 11, tzinfo=datetime.timezone.utc), open=22947.42, high=22949.61, low=22940.77, close=22942.13, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 12, tzinfo=datetime.timezone.utc), open=22942.13, high=22957.73, low=22941.85, close=22957.73, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 13, tzinfo=datetime.timezone.utc), open=22957.73, high=22961.32, low=22957.73, close=22960.25, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 14, tzinfo=datetime.timezone.utc), open=22960.25, high=22965.53, low=22959.55, close=22965.53, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 15, tzinfo=datetime.timezone.utc), open=22965.52, high=22969.97, low=22965.28, close=22965.36, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 16, tzinfo=datetime.timezone.utc), open=22965.37, high=22968.17, low=22963.81, close=22968.17, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 17, tzinfo=datetime.timezone.utc), open=22968.17, high=22970.78, low=22966.13, close=22967.44, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 18, tzinfo=datetime.timezone.utc), open=22967.43, high=22968.07, low=22962.98, close=22962.98, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 19, tzinfo=datetime.timezone.utc), open=22962.98, high=22963.28, low=22958.97, close=22959.53, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 20, tzinfo=datetime.timezone.utc), open=22959.54, high=22960.67, low=22949.33, close=22949.9, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 21, tzinfo=datetime.timezone.utc), open=22949.9, high=22952.0, low=22944.55, close=22944.55, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 22, tzinfo=datetime.timezone.utc), open=22944.55, high=22947.26, low=22943.14, close=22945.87, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 23, tzinfo=datetime.timezone.utc), open=22945.86, high=22948.65, low=22945.86, close=22948.64, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 24, tzinfo=datetime.timezone.utc), open=22948.64, high=22948.65, low=22943.35, close=22944.15, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 25, tzinfo=datetime.timezone.utc), open=22944.15, high=22947.33, low=22941.88, close=22942.42, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 26, tzinfo=datetime.timezone.utc), open=22942.42, high=22943.86, low=22937.88, close=22937.88, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 27, tzinfo=datetime.timezone.utc), open=22937.88, high=22939.09, low=22936.99, close=22939.09, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 28, tzinfo=datetime.timezone.utc), open=22939.09, high=22941.82, low=22937.76, close=22937.76, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 29, tzinfo=datetime.timezone.utc), open=22937.76, high=22937.92, low=22936.22, close=22936.54, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 30, tzinfo=datetime.timezone.utc), open=22936.53, high=22936.85, low=22935.31, close=22936.83, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 31, tzinfo=datetime.timezone.utc), open=22936.83, high=22949.16, low=22936.83, close=22949.16, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 32, tzinfo=datetime.timezone.utc), open=22949.16, high=22951.02, low=22948.47, close=22949.9, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 33, tzinfo=datetime.timezone.utc), open=22949.9, high=22949.9, low=22941.97, close=22941.97, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 34, tzinfo=datetime.timezone.utc), open=22941.97, high=22941.98, low=22938.4, close=22939.72, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 35, tzinfo=datetime.timezone.utc), open=22939.72, high=22944.53, low=22939.72, close=22944.53, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 36, tzinfo=datetime.timezone.utc), open=22944.52, high=22950.75, low=22944.52, close=22950.75, barCount=6), BarData(date=datetime.datetime(2018, 5, 21, 0, 37, tzinfo=datetime.timezone.utc), open=22950.75, high=22951.18, low=22948.75, close=22951.18, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 38, tzinfo=datetime.timezone.utc), open=22951.18, high=22954.03, low=22951.18, close=22954.03, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 39, tzinfo=datetime.timezone.utc), open=22954.02, high=22960.12, low=22954.02, close=22960.11, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 40, tzinfo=datetime.timezone.utc), open=22960.12, high=22963.35, low=22959.41, close=22963.35, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 41, tzinfo=datetime.timezone.utc), open=22963.35, high=22965.68, low=22962.17, close=22965.3, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 42, tzinfo=datetime.timezone.utc), open=22965.3, high=22968.98, low=22965.3, close=22968.87, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 43, tzinfo=datetime.timezone.utc), open=22968.86, high=22975.41, low=22968.86, close=22975.41, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 44, tzinfo=datetime.timezone.utc), open=22975.41, high=22981.19, low=22974.6, close=22978.92, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 45, tzinfo=datetime.timezone.utc), open=22978.92, high=22978.92, low=22977.13, close=22977.32, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 46, tzinfo=datetime.timezone.utc), open=22977.32, high=22977.32, low=22967.47, close=22969.37, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 47, tzinfo=datetime.timezone.utc), open=22969.36, high=22970.03, low=22969.36, close=22969.45, barCount=2)], False))
Traceback (most recent call last):
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/wrapper.py", line 143, in handleEvent
    event.emit(*args)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/event.py", line 76, in emit
    func(obj, *args, **kwargs)
  File "/home/bn/PycharmProjects/trading/trading/containerClass.py", line 293, in myBarUpdateCallback
    bars = self.requestRecentHistoricalBars(qc)
  File "/home/bn/PycharmProjects/trading/trading/containerClass.py", line 115, in requestRecentHistoricalBars
    timeOutTime=timeOutTime)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 71, in getHistoricalDataBars
    bars = ib.run(asyncio.wait_for(req, timeOutTime))
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/ib.py", line 251, in run
    result = util.syncAwait(future)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/util.py", line 245, in syncAwait
    result = _syncAwaitAsyncio(future)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/util.py", line 267, in _syncAwaitAsyncio
    return future.result()
asyncio.base_futures.InvalidStateError: Result is not set.
2018-05-21 02:47:26,000 ib_insync.wrapper handleEvent ERROR Event barUpdateEvent(([BarData(date=datetime.datetime(2018, 5, 18, 5, 47, tzinfo=datetime.timezone.utc), open=22912.26, high=22913.25, low=22910.45, close=22911.33, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 48, tzinfo=datetime.timezone.utc), open=22911.33, high=22914.03, low=22910.86, close=22914.03, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 49, tzinfo=datetime.timezone.utc), open=22914.03, high=22939.73, low=22914.03, close=22928.64, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 50, tzinfo=datetime.timezone.utc), open=22928.64, high=22928.95, low=22925.15, close=22927.39, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 51, tzinfo=datetime.timezone.utc), open=22927.39, high=22928.06, low=22925.08, close=22927.47, barCount=7), BarData(date=datetime.datetime(2018, 5, 18, 5, 52, tzinfo=datetime.timezone.utc), open=22927.47, high=22927.92, low=22924.7, close=22925.83, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 53, tzinfo=datetime.timezone.utc), open=22925.83, high=22925.83, low=22923.51, close=22923.79, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 54, tzinfo=datetime.timezone.utc), open=22923.79, high=22923.79, low=22921.19, close=22923.65, barCount=6), BarData(date=datetime.datetime(2018, 5, 18, 5, 55, tzinfo=datetime.timezone.utc), open=22923.65, high=22924.99, low=22920.89, close=22924.99, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 56, tzinfo=datetime.timezone.utc), open=22924.99, high=22929.09, low=22924.99, close=22928.19, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 57, tzinfo=datetime.timezone.utc), open=22928.19, high=22928.19, low=22913.05, close=22916.27, barCount=12), BarData(date=datetime.datetime(2018, 5, 18, 5, 58, tzinfo=datetime.timezone.utc), open=22916.27, high=22916.27, low=22909.84, close=22909.84, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 59, tzinfo=datetime.timezone.utc), open=22909.84, high=22934.37, low=22908.97, close=22934.37, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 0, tzinfo=datetime.timezone.utc), open=22937.58, high=22951.89, low=22937.58, close=22950.9, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 1, tzinfo=datetime.timezone.utc), open=22950.9, high=22951.27, low=22948.75, close=22948.75, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 2, tzinfo=datetime.timezone.utc), open=22948.75, high=22960.5, low=22948.75, close=22960.5, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 3, tzinfo=datetime.timezone.utc), open=22960.5, high=22968.04, low=22955.68, close=22967.65, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 4, tzinfo=datetime.timezone.utc), open=22967.65, high=22967.65, low=22958.76, close=22959.71, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 5, tzinfo=datetime.timezone.utc), open=22959.71, high=22962.2, low=22951.61, close=22951.62, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 6, tzinfo=datetime.timezone.utc), open=22951.62, high=22951.62, low=22946.81, close=22946.81, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 7, tzinfo=datetime.timezone.utc), open=22946.81, high=22948.57, low=22945.93, close=22947.74, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 8, tzinfo=datetime.timezone.utc), open=22947.74, high=22948.83, low=22943.07, close=22947.13, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 9, tzinfo=datetime.timezone.utc), open=22947.13, high=22951.73, low=22947.13, close=22948.89, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 10, tzinfo=datetime.timezone.utc), open=22948.89, high=22950.67, low=22946.22, close=22947.42, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 11, tzinfo=datetime.timezone.utc), open=22947.42, high=22949.61, low=22940.77, close=22942.13, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 12, tzinfo=datetime.timezone.utc), open=22942.13, high=22957.73, low=22941.85, close=22957.73, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 13, tzinfo=datetime.timezone.utc), open=22957.73, high=22961.32, low=22957.73, close=22960.25, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 14, tzinfo=datetime.timezone.utc), open=22960.25, high=22965.53, low=22959.55, close=22965.53, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 15, tzinfo=datetime.timezone.utc), open=22965.52, high=22969.97, low=22965.28, close=22965.36, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 16, tzinfo=datetime.timezone.utc), open=22965.37, high=22968.17, low=22963.81, close=22968.17, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 17, tzinfo=datetime.timezone.utc), open=22968.17, high=22970.78, low=22966.13, close=22967.44, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 18, tzinfo=datetime.timezone.utc), open=22967.43, high=22968.07, low=22962.98, close=22962.98, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 19, tzinfo=datetime.timezone.utc), open=22962.98, high=22963.28, low=22958.97, close=22959.53, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 20, tzinfo=datetime.timezone.utc), open=22959.54, high=22960.67, low=22949.33, close=22949.9, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 21, tzinfo=datetime.timezone.utc), open=22949.9, high=22952.0, low=22944.55, close=22944.55, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 22, tzinfo=datetime.timezone.utc), open=22944.55, high=22947.26, low=22943.14, close=22945.87, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 23, tzinfo=datetime.timezone.utc), open=22945.86, high=22948.65, low=22945.86, close=22948.64, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 24, tzinfo=datetime.timezone.utc), open=22948.64, high=22948.65, low=22943.35, close=22944.15, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 25, tzinfo=datetime.timezone.utc), open=22944.15, high=22947.33, low=22941.88, close=22942.42, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 26, tzinfo=datetime.timezone.utc), open=22942.42, high=22943.86, low=22937.88, close=22937.88, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 27, tzinfo=datetime.timezone.utc), open=22937.88, high=22939.09, low=22936.99, close=22939.09, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 28, tzinfo=datetime.timezone.utc), open=22939.09, high=22941.82, low=22937.76, close=22937.76, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 29, tzinfo=datetime.timezone.utc), open=22937.76, high=22937.92, low=22936.22, close=22936.54, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 30, tzinfo=datetime.timezone.utc), open=22936.53, high=22936.85, low=22935.31, close=22936.83, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 31, tzinfo=datetime.timezone.utc), open=22936.83, high=22949.16, low=22936.83, close=22949.16, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 32, tzinfo=datetime.timezone.utc), open=22949.16, high=22951.02, low=22948.47, close=22949.9, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 33, tzinfo=datetime.timezone.utc), open=22949.9, high=22949.9, low=22941.97, close=22941.97, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 34, tzinfo=datetime.timezone.utc), open=22941.97, high=22941.98, low=22938.4, close=22939.72, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 35, tzinfo=datetime.timezone.utc), open=22939.72, high=22944.53, low=22939.72, close=22944.53, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 36, tzinfo=datetime.timezone.utc), open=22944.52, high=22950.75, low=22944.52, close=22950.75, barCount=6), BarData(date=datetime.datetime(2018, 5, 21, 0, 37, tzinfo=datetime.timezone.utc), open=22950.75, high=22951.18, low=22948.75, close=22951.18, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 38, tzinfo=datetime.timezone.utc), open=22951.18, high=22954.03, low=22951.18, close=22954.03, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 39, tzinfo=datetime.timezone.utc), open=22954.02, high=22960.12, low=22954.02, close=22960.11, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 40, tzinfo=datetime.timezone.utc), open=22960.12, high=22963.35, low=22959.41, close=22963.35, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 41, tzinfo=datetime.timezone.utc), open=22963.35, high=22965.68, low=22962.17, close=22965.3, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 42, tzinfo=datetime.timezone.utc), open=22965.3, high=22968.98, low=22965.3, close=22968.87, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 43, tzinfo=datetime.timezone.utc), open=22968.86, high=22975.41, low=22968.86, close=22975.41, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 44, tzinfo=datetime.timezone.utc), open=22975.41, high=22981.19, low=22974.6, close=22978.92, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 45, tzinfo=datetime.timezone.utc), open=22978.92, high=22978.92, low=22977.13, close=22977.32, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 46, tzinfo=datetime.timezone.utc), open=22977.32, high=22977.32, low=22967.47, close=22969.37, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 47, tzinfo=datetime.timezone.utc), open=22969.36, high=22970.03, low=22969.36, close=22969.45, barCount=2)], False))
Traceback (most recent call last):
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/wrapper.py", line 143, in handleEvent
    event.emit(*args)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/event.py", line 76, in emit
    func(obj, *args, **kwargs)
  File "/home/bn/PycharmProjects/trading/trading/containerClass.py", line 293, in myBarUpdateCallback
    bars = self.requestRecentHistoricalBars(qc)
  File "/home/bn/PycharmProjects/trading/trading/containerClass.py", line 115, in requestRecentHistoricalBars
    timeOutTime=timeOutTime)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 71, in getHistoricalDataBars
    bars = ib.run(asyncio.wait_for(req, timeOutTime))
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/ib.py", line 251, in run
    result = util.syncAwait(future)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/util.py", line 245, in syncAwait
    result = _syncAwaitAsyncio(future)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/util.py", line 267, in _syncAwaitAsyncio
    return future.result()
asyncio.base_futures.InvalidStateError: Result is not set.
2018-05-21 02:47:26,002 ib_insync.wrapper handleEvent ERROR Event barUpdateEvent(([BarData(date=datetime.datetime(2018, 5, 18, 5, 47, tzinfo=datetime.timezone.utc), open=22912.26, high=22913.25, low=22910.45, close=22911.33, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 48, tzinfo=datetime.timezone.utc), open=22911.33, high=22914.03, low=22910.86, close=22914.03, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 49, tzinfo=datetime.timezone.utc), open=22914.03, high=22939.73, low=22914.03, close=22928.64, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 50, tzinfo=datetime.timezone.utc), open=22928.64, high=22928.95, low=22925.15, close=22927.39, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 51, tzinfo=datetime.timezone.utc), open=22927.39, high=22928.06, low=22925.08, close=22927.47, barCount=7), BarData(date=datetime.datetime(2018, 5, 18, 5, 52, tzinfo=datetime.timezone.utc), open=22927.47, high=22927.92, low=22924.7, close=22925.83, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 53, tzinfo=datetime.timezone.utc), open=22925.83, high=22925.83, low=22923.51, close=22923.79, barCount=9), BarData(date=datetime.datetime(2018, 5, 18, 5, 54, tzinfo=datetime.timezone.utc), open=22923.79, high=22923.79, low=22921.19, close=22923.65, barCount=6), BarData(date=datetime.datetime(2018, 5, 18, 5, 55, tzinfo=datetime.timezone.utc), open=22923.65, high=22924.99, low=22920.89, close=22924.99, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 56, tzinfo=datetime.timezone.utc), open=22924.99, high=22929.09, low=22924.99, close=22928.19, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 57, tzinfo=datetime.timezone.utc), open=22928.19, high=22928.19, low=22913.05, close=22916.27, barCount=12), BarData(date=datetime.datetime(2018, 5, 18, 5, 58, tzinfo=datetime.timezone.utc), open=22916.27, high=22916.27, low=22909.84, close=22909.84, barCount=11), BarData(date=datetime.datetime(2018, 5, 18, 5, 59, tzinfo=datetime.timezone.utc), open=22909.84, high=22934.37, low=22908.97, close=22934.37, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 0, tzinfo=datetime.timezone.utc), open=22937.58, high=22951.89, low=22937.58, close=22950.9, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 1, tzinfo=datetime.timezone.utc), open=22950.9, high=22951.27, low=22948.75, close=22948.75, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 2, tzinfo=datetime.timezone.utc), open=22948.75, high=22960.5, low=22948.75, close=22960.5, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 3, tzinfo=datetime.timezone.utc), open=22960.5, high=22968.04, low=22955.68, close=22967.65, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 4, tzinfo=datetime.timezone.utc), open=22967.65, high=22967.65, low=22958.76, close=22959.71, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 5, tzinfo=datetime.timezone.utc), open=22959.71, high=22962.2, low=22951.61, close=22951.62, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 6, tzinfo=datetime.timezone.utc), open=22951.62, high=22951.62, low=22946.81, close=22946.81, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 7, tzinfo=datetime.timezone.utc), open=22946.81, high=22948.57, low=22945.93, close=22947.74, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 8, tzinfo=datetime.timezone.utc), open=22947.74, high=22948.83, low=22943.07, close=22947.13, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 9, tzinfo=datetime.timezone.utc), open=22947.13, high=22951.73, low=22947.13, close=22948.89, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 10, tzinfo=datetime.timezone.utc), open=22948.89, high=22950.67, low=22946.22, close=22947.42, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 11, tzinfo=datetime.timezone.utc), open=22947.42, high=22949.61, low=22940.77, close=22942.13, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 12, tzinfo=datetime.timezone.utc), open=22942.13, high=22957.73, low=22941.85, close=22957.73, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 13, tzinfo=datetime.timezone.utc), open=22957.73, high=22961.32, low=22957.73, close=22960.25, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 14, tzinfo=datetime.timezone.utc), open=22960.25, high=22965.53, low=22959.55, close=22965.53, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 15, tzinfo=datetime.timezone.utc), open=22965.52, high=22969.97, low=22965.28, close=22965.36, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 16, tzinfo=datetime.timezone.utc), open=22965.37, high=22968.17, low=22963.81, close=22968.17, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 17, tzinfo=datetime.timezone.utc), open=22968.17, high=22970.78, low=22966.13, close=22967.44, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 18, tzinfo=datetime.timezone.utc), open=22967.43, high=22968.07, low=22962.98, close=22962.98, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 19, tzinfo=datetime.timezone.utc), open=22962.98, high=22963.28, low=22958.97, close=22959.53, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 20, tzinfo=datetime.timezone.utc), open=22959.54, high=22960.67, low=22949.33, close=22949.9, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 21, tzinfo=datetime.timezone.utc), open=22949.9, high=22952.0, low=22944.55, close=22944.55, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 22, tzinfo=datetime.timezone.utc), open=22944.55, high=22947.26, low=22943.14, close=22945.87, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 23, tzinfo=datetime.timezone.utc), open=22945.86, high=22948.65, low=22945.86, close=22948.64, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 24, tzinfo=datetime.timezone.utc), open=22948.64, high=22948.65, low=22943.35, close=22944.15, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 25, tzinfo=datetime.timezone.utc), open=22944.15, high=22947.33, low=22941.88, close=22942.42, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 26, tzinfo=datetime.timezone.utc), open=22942.42, high=22943.86, low=22937.88, close=22937.88, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 27, tzinfo=datetime.timezone.utc), open=22937.88, high=22939.09, low=22936.99, close=22939.09, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 28, tzinfo=datetime.timezone.utc), open=22939.09, high=22941.82, low=22937.76, close=22937.76, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 29, tzinfo=datetime.timezone.utc), open=22937.76, high=22937.92, low=22936.22, close=22936.54, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 30, tzinfo=datetime.timezone.utc), open=22936.53, high=22936.85, low=22935.31, close=22936.83, barCount=8), BarData(date=datetime.datetime(2018, 5, 21, 0, 31, tzinfo=datetime.timezone.utc), open=22936.83, high=22949.16, low=22936.83, close=22949.16, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 32, tzinfo=datetime.timezone.utc), open=22949.16, high=22951.02, low=22948.47, close=22949.9, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 33, tzinfo=datetime.timezone.utc), open=22949.9, high=22949.9, low=22941.97, close=22941.97, barCount=13), BarData(date=datetime.datetime(2018, 5, 21, 0, 34, tzinfo=datetime.timezone.utc), open=22941.97, high=22941.98, low=22938.4, close=22939.72, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 35, tzinfo=datetime.timezone.utc), open=22939.72, high=22944.53, low=22939.72, close=22944.53, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 36, tzinfo=datetime.timezone.utc), open=22944.52, high=22950.75, low=22944.52, close=22950.75, barCount=6), BarData(date=datetime.datetime(2018, 5, 21, 0, 37, tzinfo=datetime.timezone.utc), open=22950.75, high=22951.18, low=22948.75, close=22951.18, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 38, tzinfo=datetime.timezone.utc), open=22951.18, high=22954.03, low=22951.18, close=22954.03, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 39, tzinfo=datetime.timezone.utc), open=22954.02, high=22960.12, low=22954.02, close=22960.11, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 40, tzinfo=datetime.timezone.utc), open=22960.12, high=22963.35, low=22959.41, close=22963.35, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 41, tzinfo=datetime.timezone.utc), open=22963.35, high=22965.68, low=22962.17, close=22965.3, barCount=12), BarData(date=datetime.datetime(2018, 5, 21, 0, 42, tzinfo=datetime.timezone.utc), open=22965.3, high=22968.98, low=22965.3, close=22968.87, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 43, tzinfo=datetime.timezone.utc), open=22968.86, high=22975.41, low=22968.86, close=22975.41, barCount=10), BarData(date=datetime.datetime(2018, 5, 21, 0, 44, tzinfo=datetime.timezone.utc), open=22975.41, high=22981.19, low=22974.6, close=22978.92, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 45, tzinfo=datetime.timezone.utc), open=22978.92, high=22978.92, low=22977.13, close=22977.32, barCount=9), BarData(date=datetime.datetime(2018, 5, 21, 0, 46, tzinfo=datetime.timezone.utc), open=22977.32, high=22977.32, low=22967.47, close=22969.37, barCount=11), BarData(date=datetime.datetime(2018, 5, 21, 0, 47, tzinfo=datetime.timezone.utc), open=22969.36, high=22970.03, low=22969.36, close=22969.45, barCount=2)], False))
Traceback (most recent call last):
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/wrapper.py", line 143, in handleEvent
    event.emit(*args)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/event.py", line 76, in emit
    func(obj, *args, **kwargs)
  File "/home/bn/PycharmProjects/trading/trading/containerClass.py", line 293, in myBarUpdateCallback
    bars = self.requestRecentHistoricalBars(qc)
  File "/home/bn/PycharmProjects/trading/trading/containerClass.py", line 115, in requestRecentHistoricalBars
    timeOutTime=timeOutTime)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 71, in getHistoricalDataBars
    bars = ib.run(asyncio.wait_for(req, timeOutTime))
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/ib.py", line 251, in run
    result = util.syncAwait(future)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/util.py", line 245, in syncAwait
    result = _syncAwaitAsyncio(future)
  File "/home/bn/programme/Trading/ib_insync/ib_insync/ib_insync/util.py", line 267, in _syncAwaitAsyncio
    return future.result()
asyncio.base_futures.InvalidStateError: Result is not set.
2018-05-21 02:47:26,005 trading.marketDataIB getHistoricalDataBars WARNING Timeout while requesting historical bars for contract Contract(secType='IND', conId=416904, symbol='SPX', exchange='CBOE', currency='USD', localSymbol='SPX')
2018-05-21 02:47:26,112 apscheduler.scheduler _real_add_job INFO Added job "asyncioJobGetHistoricalData_000000" to job store "default"
2018-05-21 02:47:26,113 apscheduler.scheduler _real_add_job INFO Added job "schedulerJobSwitchRequestForRecentHistoricalDataFromShortToLong_000000" to job store "default"
2018-05-21 02:47:26,114 apscheduler.scheduler _real_add_job INFO Added job "schedulerJobSwitchRequestForRecentHistoricalDataFromLongToShort_000000" to job store "default"
2018-05-21 02:47:26,123 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:47:26,132 ib_insync.wrapper error ERROR Error 162, reqId 42: Historical Market Data Service error message:API historical data query cancelled: 42
2018-05-21 02:47:26,133 trading.containerClass myErrorCallback INFO reqId: 42, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 42, localSymbol: None
2018-05-21 02:47:27,111 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:47:27,117 ib_insync.wrapper error ERROR Error 162, reqId 43: Historical Market Data Service error message:API historical data query cancelled: 43
2018-05-21 02:47:27,117 trading.containerClass myErrorCallback INFO reqId: 43, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 43, localSymbol: None
2018-05-21 02:47:28,145 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:47:28,146 ib_insync.wrapper error ERROR Error 162, reqId 44: Historical Market Data Service error message:API historical data query cancelled: 44
2018-05-21 02:47:28,146 trading.containerClass myErrorCallback INFO reqId: 44, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 44, localSymbol: None
2018-05-21 02:47:29,173 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:47:29,173 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:47:29,174 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:47:29,213 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:47:29,214 ib_insync.wrapper error ERROR Error 162, reqId 45: Historical Market Data Service error message:API historical data query cancelled: 45
2018-05-21 02:47:29,214 trading.containerClass myErrorCallback INFO reqId: 45, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 45, localSymbol: None
2018-05-21 02:47:30,002 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 02:47:35 CEST)" (scheduled at 2018-05-21 02:47:30+02:00)
2018-05-21 02:49:30,901 apscheduler.executors.default run_coroutine_job ERROR Job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 02:47:35 CEST)" raised an exception
Traceback (most recent call last):
  File "/home/bn/anaconda3/envs/trading/lib/python3.6/site-packages/apscheduler/executors/base_py3.py", line 29, in run_coroutine_job
    retval = await job.func(*job.args, **job.kwargs)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 430, in asyncioJobGetHistoricalData
    # retrieve historical data, starting at the position where we were last time this program ran
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 430, in asyncioJobGetHistoricalData
    # retrieve historical data, starting at the position where we were last time this program ran
  File "/snap/pycharm-professional/66/helpers/pydev/_pydevd_bundle/pydevd_frame.py", line 714, in trace_dispatch
    self.do_wait_suspend(thread, frame, event, arg)
  File "/snap/pycharm-professional/66/helpers/pydev/_pydevd_bundle/pydevd_frame.py", line 125, in do_wait_suspend
    self._args[0].do_wait_suspend(*args, **kwargs)
  File "/snap/pycharm-professional/66/helpers/pydev/pydevd.py", line 812, in do_wait_suspend
    time.sleep(0.01)
KeyboardInterrupt
2018-05-21 02:49:30,907 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:49:31,164 trading.containerClass myBarUpdateCallback INFO localSymbol: EUR.AUD, nBars: 62, diffDateTime: 91.163177, close: 1.563115, last: 2018-05-21 00:46:00
2018-05-21 02:49:31,438 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: EUR.AUD; 2018-05-20 23:49:00+00:00; 2018-05-21 00:48:00+00:00 60; 2018-05-21 00:46:00; 2018-05-21 00:49:00; False
2018-05-21 02:49:31,610 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.059735
2018-05-21 02:49:31,610 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.171748
2018-05-21 02:49:31,610 trading.containerClass myBarUpdateCallback INFO localSymbol: EUR.AUD, nBars: 63, diffDateTime: 31.433578, close: 1.563185, last: 2018-05-21 00:46:00
2018-05-21 02:49:31,831 ib_insync.wrapper error ERROR Error 162, reqId 46: Historical Market Data Service error message:API historical data query cancelled: 46
2018-05-21 02:49:31,831 trading.containerClass myErrorCallback INFO reqId: 46, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 46, localSymbol: None
2018-05-21 02:49:31,831 ib_insync.client _onSocketDisconnected ERROR Peer closed connection
2018-05-21 02:49:31,831 trading.containerClass myStoppingCallback INFO stopping watchdog callback: Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-21 02:49:31,831 ib_insync.Watchdog stop INFO Stopping
2018-05-21 02:49:31,832 ib_insync.ib disconnect INFO BN added disconnect in ib
2018-05-21 02:49:31,832 ib_insync.IBC terminateAsync INFO Terminating
2018-05-21 02:50:55,400 ib_insync.Watchdog start INFO Starting
2018-05-21 02:50:55,401 quamash <module> INFO Using Qt Implementation: PyQt5
2018-05-21 02:50:55,426 ib_insync.IBC startAsync INFO Starting
2018-05-21 02:51:10,442 ib_insync.client connectAsync INFO Connecting to 127.0.0.1:4002 with clientId 24...
2018-05-21 02:51:10,449 ib_insync.client _onSocketConnected INFO Connected
2018-05-21 02:51:10,516 ib_insync.client _onSocketHasData INFO Logged on to server version 141
2018-05-21 02:51:10,559 ib_insync.client connectAsync INFO API connection ready
2018-05-21 02:51:10,616 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17471505, marketValue=218497.0, averageCost=1.2182257, unrealizedPNL=-8092.98, realizedPNL=0.0, account='DU946735')
2018-05-21 02:51:10,616 ib_insync.wrapper position INFO position: Position(account='DU946735', contract=Contract(secType='CASH', conId=12087792, symbol='EUR', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, avgCost=1.2182257)
2018-05-21 02:51:10,632 ib_insync.ib connectAsync INFO Synchronization complete
2018-05-21 02:51:10,708 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() started
2018-05-21 02:51:10,709 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop datetime
2018-05-21 02:51:10,709 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:51:10,709 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop close
2018-05-21 02:51:10,709 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:51:10,710 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() started
2018-05-21 02:51:10,710 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop datetime
2018-05-21 02:51:10,710 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:51:10,710 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop close
2018-05-21 02:51:10,710 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:51:10,710 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() started
2018-05-21 02:51:10,710 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop datetime
2018-05-21 02:51:10,711 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:51:10,711 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop close
2018-05-21 02:51:10,711 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:51:10,711 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() started
2018-05-21 02:51:10,711 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop datetime
2018-05-21 02:51:10,711 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:51:10,712 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop close
2018-05-21 02:51:10,712 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:51:10,712 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() started
2018-05-21 02:51:10,712 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop datetime
2018-05-21 02:51:10,712 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:51:10,713 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop close
2018-05-21 02:51:10,713 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:51:10,713 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() started
2018-05-21 02:51:10,713 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop datetime
2018-05-21 02:51:10,713 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:51:10,713 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop close
2018-05-21 02:51:10,714 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:51:10,714 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() started
2018-05-21 02:51:10,714 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop datetime
2018-05-21 02:51:10,714 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:51:10,714 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop close
2018-05-21 02:51:10,714 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:51:10,714 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() started
2018-05-21 02:51:10,715 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop datetime
2018-05-21 02:51:10,715 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:51:10,715 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop close
2018-05-21 02:51:10,715 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:51:10,715 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() started
2018-05-21 02:51:10,715 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop datetime
2018-05-21 02:51:10,716 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop diffToNextRowInMinutes
2018-05-21 02:51:10,716 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop close
2018-05-21 02:51:10,716 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() complete
2018-05-21 02:51:10,716 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() started
2018-05-21 02:51:10,716 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop datetime
2018-05-21 02:51:10,716 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop diffToNextRowInMinutes
2018-05-21 02:51:10,717 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop close
2018-05-21 02:51:10,717 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() complete
2018-05-21 02:51:10,717 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() started
2018-05-21 02:51:10,717 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop datetime
2018-05-21 02:51:10,717 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop diffToNextRowInMinutes
2018-05-21 02:51:10,717 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop close
2018-05-21 02:51:10,718 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() complete
2018-05-21 02:51:10,718 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() started
2018-05-21 02:51:10,718 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop datetime
2018-05-21 02:51:10,718 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop diffToNextRowInMinutes
2018-05-21 02:51:10,718 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop close
2018-05-21 02:51:10,718 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() complete
2018-05-21 02:51:10,718 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() started
2018-05-21 02:51:10,719 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop datetime
2018-05-21 02:51:10,719 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop diffToNextRowInMinutes
2018-05-21 02:51:10,719 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop close
2018-05-21 02:51:10,719 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() complete
2018-05-21 02:51:10,719 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() started
2018-05-21 02:51:10,719 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop datetime
2018-05-21 02:51:10,720 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop diffToNextRowInMinutes
2018-05-21 02:51:10,720 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop close
2018-05-21 02:51:10,720 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() complete
2018-05-21 02:51:10,721 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-21 02:51:10,721 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-21 02:51:10,721 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 02:51:13,945 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-21 02:51:13,947 sqlalchemy.engine.base.Engine _execute_context INFO PRAGMA table_info("MarketDataInfoTable")
2018-05-21 02:51:13,948 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 02:51:13,972 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-21 02:51:13,975 sqlalchemy.engine.base.Engine _execute_context INFO SELECT count(*) AS count_1 
FROM (SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable") AS anon_1
2018-05-21 02:51:13,976 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 02:51:13,983 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName", "MarketDataInfoTable".description, "MarketDataInfoTable"."conId", "MarketDataInfoTable".symbol, "MarketDataInfoTable".currency, "MarketDataInfoTable".exchange, "MarketDataInfoTable".category, "MarketDataInfoTable"."secType", "MarketDataInfoTable"."earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-21 02:51:13,983 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 02:51:13,990 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-21 02:51:13,990 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 02:51:14,584 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-21 02:51:14,633 apscheduler.scheduler start INFO Scheduler started
2018-05-21 02:51:14,634 root runProg INFO Now updating the settings for the request of recent historical bars
2018-05-21 02:51:14,634 root runProg INFO Now requesting initial recent historical bars
2018-05-21 02:51:14,634 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:51:14,636 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:51:16,202 ib_insync.wrapper error INFO Warning 2106, reqId -1: HMDS data farm connection is OK:cashhmds
2018-05-21 02:51:16,202 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2106, errorString: HMDS data farm connection is OK:cashhmds, localSymbol: None
2018-05-21 02:51:16,338 ib_insync.wrapper error INFO Warning 2119, reqId -1: Market data farm is connecting:cashfarm
2018-05-21 02:51:16,338 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2119, errorString: Market data farm is connecting:cashfarm, localSymbol: None
2018-05-21 02:51:16,436 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:51:16,570 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: EUR.AUD; 2018-05-20 23:51:00+00:00; 2018-05-21 00:50:00+00:00 60; 2018-05-21 00:49:00; 2018-05-21 00:51:00; False
2018-05-21 02:51:16,811 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.067297
2018-05-21 02:51:16,811 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.241123
2018-05-21 02:51:16,838 ib_insync.wrapper error INFO Warning 2119, reqId -1: Market data farm is connecting:jfarm
2018-05-21 02:51:16,838 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2119, errorString: Market data farm is connecting:jfarm, localSymbol: None
2018-05-21 02:51:17,003 ib_insync.wrapper error INFO Warning 2104, reqId -1: Market data farm connection is OK:cashfarm
2018-05-21 02:51:17,003 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2104, errorString: Market data farm connection is OK:cashfarm, localSymbol: None
2018-05-21 02:51:19,162 ib_insync.wrapper error INFO Warning 2104, reqId -1: Market data farm connection is OK:jfarm
2018-05-21 02:51:19,163 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2104, errorString: Market data farm connection is OK:jfarm, localSymbol: None
2018-05-21 02:51:22,181 ib_insync.wrapper error INFO Warning 2106, reqId -1: HMDS data farm connection is OK:hkhmds
2018-05-21 02:51:22,181 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2106, errorString: HMDS data farm connection is OK:hkhmds, localSymbol: None
2018-05-21 02:51:22,880 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for SPX. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:51:23,001 ib_insync.wrapper error INFO Warning 2119, reqId -1: Market data farm is connecting:usfarm.us
2018-05-21 02:51:23,001 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2119, errorString: Market data farm is connecting:usfarm.us, localSymbol: None
2018-05-21 02:51:23,185 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: N225; 2018-05-21 00:00:00+00:00; 2018-05-21 00:50:00+00:00 51; 2018-05-21 00:49:00; 2018-05-21 00:51:00; False
2018-05-21 02:51:23,335 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 51; elapsed time: 0:00:00.030738
2018-05-21 02:51:23,335 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 51; elapsed time: 0:00:00.150278
2018-05-21 02:51:23,336 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:51:23,356 ib_insync.wrapper error ERROR Error 162, reqId 32: Historical Market Data Service error message:API historical data query cancelled: 32
2018-05-21 02:51:23,356 trading.containerClass myErrorCallback INFO reqId: 32, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 32, localSymbol: None
2018-05-21 02:51:24,344 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:51:24,425 ib_insync.wrapper error INFO Warning 2104, reqId -1: Market data farm connection is OK:usfarm.us
2018-05-21 02:51:24,426 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2104, errorString: Market data farm connection is OK:usfarm.us, localSymbol: None
2018-05-21 02:51:24,657 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:51:24,658 ib_insync.wrapper error ERROR Error 162, reqId 34: Historical Market Data Service error message:API historical data query cancelled: 34
2018-05-21 02:51:24,658 trading.containerClass myErrorCallback INFO reqId: 34, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 34, localSymbol: None
2018-05-21 02:51:25,660 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:51:25,990 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:51:25,991 ib_insync.wrapper error ERROR Error 162, reqId 35: Historical Market Data Service error message:API historical data query cancelled: 35
2018-05-21 02:51:25,991 trading.containerClass myErrorCallback INFO reqId: 35, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 35, localSymbol: None
2018-05-21 02:51:26,986 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:51:26,987 ib_insync.wrapper error ERROR Error 162, reqId 36: Historical Market Data Service error message:API historical data query cancelled: 36
2018-05-21 02:51:26,988 trading.containerClass myErrorCallback INFO reqId: 36, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 36, localSymbol: None
2018-05-21 02:51:28,020 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:51:28,021 ib_insync.wrapper error ERROR Error 162, reqId 37: Historical Market Data Service error message:API historical data query cancelled: 37
2018-05-21 02:51:28,021 trading.containerClass myErrorCallback INFO reqId: 37, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 37, localSymbol: None
2018-05-21 02:51:28,158 ib_insync.wrapper error INFO Warning 2108, reqId -1: Market data farm connection is inactive but should be available upon demand.usfarm.us
2018-05-21 02:51:28,158 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2108, errorString: Market data farm connection is inactive but should be available upon demand.usfarm.us, localSymbol: None
2018-05-21 02:51:28,199 ib_insync.wrapper error INFO Warning 2108, reqId -1: Market data farm connection is inactive but should be available upon demand.usfarm.us
2018-05-21 02:51:28,199 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2108, errorString: Market data farm connection is inactive but should be available upon demand.usfarm.us, localSymbol: None
2018-05-21 02:51:29,386 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:51:29,387 ib_insync.wrapper error ERROR Error 162, reqId 38: Historical Market Data Service error message:API historical data query cancelled: 38
2018-05-21 02:51:29,388 trading.containerClass myErrorCallback INFO reqId: 38, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 38, localSymbol: None
2018-05-21 02:51:30,570 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:51:30,570 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:51:30,570 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:51:30,570 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:51:30,861 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:51:30,862 ib_insync.wrapper error ERROR Error 162, reqId 39: Historical Market Data Service error message:API historical data query cancelled: 39
2018-05-21 02:51:30,862 trading.containerClass myErrorCallback INFO reqId: 39, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 39, localSymbol: None
2018-05-21 02:51:31,854 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:51:31,855 ib_insync.wrapper error ERROR Error 162, reqId 40: Historical Market Data Service error message:API historical data query cancelled: 40
2018-05-21 02:51:31,855 trading.containerClass myErrorCallback INFO reqId: 40, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 40, localSymbol: None
2018-05-21 02:51:32,883 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:51:32,884 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:51:32,884 trading.marketDataIB getHistoricalDataBars WARNING Timeout while requesting historical bars for contract Contract(secType='IND', conId=416904, symbol='SPX', exchange='CBOE', currency='USD', localSymbol='SPX')
2018-05-21 02:51:32,983 apscheduler.scheduler _real_add_job INFO Added job "asyncioJobGetHistoricalData_000000" to job store "default"
2018-05-21 02:51:32,984 apscheduler.scheduler _real_add_job INFO Added job "schedulerJobSwitchRequestForRecentHistoricalDataFromShortToLong_000000" to job store "default"
2018-05-21 02:51:32,984 apscheduler.scheduler _real_add_job INFO Added job "schedulerJobSwitchRequestForRecentHistoricalDataFromLongToShort_000000" to job store "default"
2018-05-21 02:51:32,989 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:51:32,990 ib_insync.wrapper error ERROR Error 162, reqId 41: Historical Market Data Service error message:API historical data query cancelled: 41
2018-05-21 02:51:32,990 trading.containerClass myErrorCallback INFO reqId: 41, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 41, localSymbol: None
2018-05-21 02:51:33,989 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:51:33,990 ib_insync.wrapper error ERROR Error 162, reqId 42: Historical Market Data Service error message:API historical data query cancelled: 42
2018-05-21 02:51:33,991 trading.containerClass myErrorCallback INFO reqId: 42, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 42, localSymbol: None
2018-05-21 02:51:35,003 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 02:51:40 CEST)" (scheduled at 2018-05-21 02:51:35+02:00)
2018-05-21 02:53:34,916 apscheduler.executors.default run_coroutine_job ERROR Job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 02:51:40 CEST)" raised an exception
Traceback (most recent call last):
  File "/home/bn/anaconda3/envs/trading/lib/python3.6/site-packages/apscheduler/executors/base_py3.py", line 29, in run_coroutine_job
    retval = await job.func(*job.args, **job.kwargs)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 414, in asyncioJobGetHistoricalData
    durationPandasTimeDeltaDefault = pd.Timedelta(weeks=4)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 414, in asyncioJobGetHistoricalData
    durationPandasTimeDeltaDefault = pd.Timedelta(weeks=4)
  File "/snap/pycharm-professional/66/helpers/pydev/_pydevd_bundle/pydevd_frame.py", line 620, in trace_dispatch
    self.do_wait_suspend(thread, frame, event, arg)
  File "/snap/pycharm-professional/66/helpers/pydev/_pydevd_bundle/pydevd_frame.py", line 125, in do_wait_suspend
    self._args[0].do_wait_suspend(*args, **kwargs)
  File "/snap/pycharm-professional/66/helpers/pydev/pydevd.py", line 812, in do_wait_suspend
    time.sleep(0.01)
KeyboardInterrupt
2018-05-21 02:53:34,923 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:53:35,091 trading.containerClass myBarUpdateCallback INFO localSymbol: EUR.AUD, nBars: 62, diffDateTime: 95.090201, close: 1.56327, last: 2018-05-21 00:50:00
2018-05-21 02:53:35,405 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: EUR.AUD; 2018-05-20 23:53:00+00:00; 2018-05-21 00:52:00+00:00 60; 2018-05-21 00:50:00; 2018-05-21 00:53:00; False
2018-05-21 02:53:35,503 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.060862
2018-05-21 02:53:35,503 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.098663
2018-05-21 02:53:35,504 trading.containerClass myBarUpdateCallback INFO localSymbol: EUR.AUD, nBars: 63, diffDateTime: 35.400411, close: 1.56345, last: 2018-05-21 00:50:00
2018-05-21 02:53:35,574 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17498005, marketValue=218546.29, averageCost=1.2182257, unrealizedPNL=-8043.69, realizedPNL=0.0, account='DU946735')
2018-05-21 02:53:35,717 ib_insync.wrapper error ERROR Error 162, reqId 43: Historical Market Data Service error message:API historical data query cancelled: 43
2018-05-21 02:53:35,717 trading.containerClass myErrorCallback INFO reqId: 43, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 43, localSymbol: None
2018-05-21 02:53:35,719 ib_insync.client _onSocketDisconnected ERROR Peer closed connection
2018-05-21 02:53:35,719 trading.containerClass myStoppingCallback INFO stopping watchdog callback: Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-21 02:53:35,719 ib_insync.Watchdog stop INFO Stopping
2018-05-21 02:53:35,719 ib_insync.ib disconnect INFO BN added disconnect in ib
2018-05-21 02:53:35,719 ib_insync.IBC terminateAsync INFO Terminating
2018-05-21 02:53:35,719 trading.containerClass myStoppedCallback INFO stopped watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-21 02:53:35,719 ib_insync.Watchdog scheduleRestart INFO Schedule restart in 2s
2018-05-21 02:53:35,719 trading.containerClass myDisconnectedCallback INFO disconnected callback
2018-05-21 02:53:35,719 trading.containerClass myDisconnectedCallback INFO removing jobs from the scheduler
2018-05-21 02:53:35,720 trading.containerClass myDisconnectedCallback INFO scheduler: removing job asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 02:51:40 CEST)
2018-05-21 02:53:35,720 apscheduler.scheduler remove_job INFO Removed job asyncioJobGetHistoricalData_000000
2018-05-21 02:53:35,720 trading.containerClass myDisconnectedCallback INFO scheduler: removing job schedulerJobSwitchRequestForRecentHistoricalDataFromLongToShort_000000 (trigger: cron[hour='4', minute='2', second='0'], next run at: 2018-05-21 04:02:00 CEST)
2018-05-21 02:53:35,720 apscheduler.scheduler remove_job INFO Removed job schedulerJobSwitchRequestForRecentHistoricalDataFromLongToShort_000000
2018-05-21 02:53:35,720 trading.containerClass myDisconnectedCallback INFO scheduler: removing job schedulerJobSwitchRequestForRecentHistoricalDataFromShortToLong_000000 (trigger: cron[hour='22', minute='2', second='0'], next run at: 2018-05-21 22:02:00 CEST)
2018-05-21 02:53:35,720 apscheduler.scheduler remove_job INFO Removed job schedulerJobSwitchRequestForRecentHistoricalDataFromShortToLong_000000
2018-05-21 02:53:35,720 trading.containerClass myDisconnectedCallback INFO removing requests for recent historical bars
2018-05-21 02:53:35,720 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: ['MarketData_CASH_EUR_AUD_IDEALPRO', 'MarketData_IND_N225_JPY_OSE.JPN', 'MarketData_IND_SPX_USD_CBOE']
2018-05-21 02:53:37,720 trading.containerClass myStartingCallback INFO starting watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-21 02:53:37,721 ib_insync.Watchdog start INFO Starting
2018-05-21 02:53:37,721 ib_insync.IBC startAsync INFO Starting
2018-05-21 02:53:52,735 ib_insync.client connectAsync INFO Connecting to 127.0.0.1:4002 with clientId 24...
2018-05-21 02:53:52,738 ib_insync.client _onSocketConnected INFO Connected
2018-05-21 02:53:52,795 ib_insync.client _onSocketHasData INFO Logged on to server version 141
2018-05-21 02:53:52,839 ib_insync.client connectAsync INFO API connection ready
2018-05-21 02:53:52,890 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17498005, marketValue=218546.29, averageCost=1.2182257, unrealizedPNL=-8043.69, realizedPNL=0.0, account='DU946735')
2018-05-21 02:53:52,890 ib_insync.wrapper position INFO position: Position(account='DU946735', contract=Contract(secType='CASH', conId=12087792, symbol='EUR', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, avgCost=1.2182257)
2018-05-21 02:53:52,893 ib_insync.ib connectAsync INFO Synchronization complete
2018-05-21 02:53:52,893 trading.containerClass myConnectedCallback INFO connected callback
2018-05-21 02:53:52,893 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:53:52,895 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:53:54,430 ib_insync.wrapper error INFO Warning 2106, reqId -1: HMDS data farm connection is OK:cashhmds
2018-05-21 02:53:54,430 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2106, errorString: HMDS data farm connection is OK:cashhmds, localSymbol: None
2018-05-21 02:53:54,565 ib_insync.wrapper error INFO Warning 2119, reqId -1: Market data farm is connecting:cashfarm
2018-05-21 02:53:54,565 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2119, errorString: Market data farm is connecting:cashfarm, localSymbol: None
2018-05-21 02:53:54,667 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:53:55,315 ib_insync.wrapper error INFO Warning 2119, reqId -1: Market data farm is connecting:jfarm
2018-05-21 02:53:55,315 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2119, errorString: Market data farm is connecting:jfarm, localSymbol: None
2018-05-21 02:53:55,397 ib_insync.wrapper error INFO Warning 2104, reqId -1: Market data farm connection is OK:cashfarm
2018-05-21 02:53:55,397 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2104, errorString: Market data farm connection is OK:cashfarm, localSymbol: None
2018-05-21 02:53:57,895 ib_insync.wrapper error INFO Warning 2104, reqId -1: Market data farm connection is OK:jfarm
2018-05-21 02:53:57,895 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2104, errorString: Market data farm connection is OK:jfarm, localSymbol: None
2018-05-21 02:54:00,904 ib_insync.wrapper error INFO Warning 2106, reqId -1: HMDS data farm connection is OK:hkhmds
2018-05-21 02:54:00,904 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2106, errorString: HMDS data farm connection is OK:hkhmds, localSymbol: None
2018-05-21 02:54:01,105 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: EUR.AUD; 2018-05-20 23:54:00+00:00; 2018-05-21 00:53:00+00:00 60; 2018-05-21 00:52:00; 2018-05-21 00:54:00; False
2018-05-21 02:54:01,318 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.091516
2018-05-21 02:54:01,319 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.213763
2018-05-21 02:54:01,319 trading.containerClass myBarUpdateCallback INFO localSymbol: EUR.AUD, nBars: 62, diffDateTime: 1.100253, close: 1.56332, last: 2018-05-21 00:52:00
2018-05-21 02:54:01,721 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for SPX. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:01,738 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:01,738 ib_insync.wrapper error ERROR Error 162, reqId 4: Historical Market Data Service error message:API historical data query cancelled: 4
2018-05-21 02:54:01,738 trading.containerClass myErrorCallback INFO reqId: 4, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 4, localSymbol: None
2018-05-21 02:54:01,854 ib_insync.wrapper error INFO Warning 2119, reqId -1: Market data farm is connecting:usfarm.us
2018-05-21 02:54:01,854 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2119, errorString: Market data farm is connecting:usfarm.us, localSymbol: None
2018-05-21 02:54:02,731 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:02,746 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:02,746 ib_insync.wrapper error ERROR Error 162, reqId 6: Historical Market Data Service error message:API historical data query cancelled: 6
2018-05-21 02:54:02,746 trading.containerClass myErrorCallback INFO reqId: 6, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 6, localSymbol: None
2018-05-21 02:54:03,206 ib_insync.wrapper error INFO Warning 2104, reqId -1: Market data farm connection is OK:usfarm.us
2018-05-21 02:54:03,206 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2104, errorString: Market data farm connection is OK:usfarm.us, localSymbol: None
2018-05-21 02:54:03,783 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:03,794 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:03,795 ib_insync.wrapper error ERROR Error 162, reqId 7: Historical Market Data Service error message:API historical data query cancelled: 7
2018-05-21 02:54:03,795 trading.containerClass myErrorCallback INFO reqId: 7, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 7, localSymbol: None
2018-05-21 02:54:04,822 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:04,839 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:04,839 ib_insync.wrapper error ERROR Error 162, reqId 8: Historical Market Data Service error message:API historical data query cancelled: 8
2018-05-21 02:54:04,839 trading.containerClass myErrorCallback INFO reqId: 8, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 8, localSymbol: None
2018-05-21 02:54:05,861 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:05,868 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:05,869 ib_insync.wrapper error ERROR Error 162, reqId 9: Historical Market Data Service error message:API historical data query cancelled: 9
2018-05-21 02:54:05,869 trading.containerClass myErrorCallback INFO reqId: 9, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 9, localSymbol: None
2018-05-21 02:54:06,780 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:06,858 ib_insync.wrapper error INFO Warning 2108, reqId -1: Market data farm connection is inactive but should be available upon demand.usfarm.us
2018-05-21 02:54:06,858 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2108, errorString: Market data farm connection is inactive but should be available upon demand.usfarm.us, localSymbol: None
2018-05-21 02:54:06,858 ib_insync.wrapper error INFO Warning 2108, reqId -1: Market data farm connection is inactive but should be available upon demand.usfarm.us
2018-05-21 02:54:06,858 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2108, errorString: Market data farm connection is inactive but should be available upon demand.usfarm.us, localSymbol: None
2018-05-21 02:54:07,091 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: N225; 2018-05-21 00:00:00+00:00; 2018-05-21 00:53:00+00:00 54; 2018-05-21 00:50:00; 2018-05-21 00:54:00; False
2018-05-21 02:54:07,274 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 54; elapsed time: 0:00:00.065995
2018-05-21 02:54:07,274 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 54; elapsed time: 0:00:00.182902
2018-05-21 02:54:07,274 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:07,274 ib_insync.wrapper error ERROR Error 162, reqId 10: Historical Market Data Service error message:API historical data query cancelled: 10
2018-05-21 02:54:07,275 trading.containerClass myErrorCallback INFO reqId: 10, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 10, localSymbol: None
2018-05-21 02:54:08,236 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:08,236 trading.containerClass myBarUpdateCallback INFO localSymbol: N225, nBars: 61, diffDateTime: 7.086275, close: 22975.22, last: 2018-05-21 00:50:00
2018-05-21 02:54:08,268 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:08,268 ib_insync.wrapper error ERROR Error 162, reqId 11: Historical Market Data Service error message:API historical data query cancelled: 11
2018-05-21 02:54:08,268 trading.containerClass myErrorCallback INFO reqId: 11, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 11, localSymbol: None
2018-05-21 02:54:09,265 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:09,265 trading.containerClass myBarUpdateCallback INFO localSymbol: N225, nBars: 61, diffDateTime: 8.265135, close: 22975.22, last: 2018-05-21 00:53:00
2018-05-21 02:54:09,296 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:09,296 ib_insync.wrapper error ERROR Error 162, reqId 12: Historical Market Data Service error message:API historical data query cancelled: 12
2018-05-21 02:54:09,296 trading.containerClass myErrorCallback INFO reqId: 12, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 12, localSymbol: None
2018-05-21 02:54:10,239 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:10,239 trading.containerClass myBarUpdateCallback INFO localSymbol: N225, nBars: 61, diffDateTime: 9.294539, close: 22975.22, last: 2018-05-21 00:53:00
2018-05-21 02:54:10,247 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:10,291 ib_insync.wrapper error ERROR Error 162, reqId 13: Historical Market Data Service error message:API historical data query cancelled: 13
2018-05-21 02:54:10,291 trading.containerClass myErrorCallback INFO reqId: 13, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 13, localSymbol: None
2018-05-21 02:54:11,272 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:11,273 trading.containerClass myBarUpdateCallback INFO localSymbol: N225, nBars: 61, diffDateTime: 10.24667, close: 22975.22, last: 2018-05-21 00:53:00
2018-05-21 02:54:11,283 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:11,284 ib_insync.wrapper error ERROR Error 162, reqId 14: Historical Market Data Service error message:API historical data query cancelled: 14
2018-05-21 02:54:11,284 trading.containerClass myErrorCallback INFO reqId: 14, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 14, localSymbol: None
2018-05-21 02:54:12,322 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:12,323 trading.containerClass myBarUpdateCallback INFO localSymbol: N225, nBars: 61, diffDateTime: 11.281586, close: 22975.22, last: 2018-05-21 00:53:00
2018-05-21 02:54:12,323 trading.marketDataIB getHistoricalDataBars WARNING Timeout while requesting historical bars for contract Contract(secType='IND', conId=416904, symbol='SPX', exchange='CBOE', currency='USD', localSymbol='SPX')
2018-05-21 02:54:12,325 apscheduler.scheduler _real_add_job INFO Added job "asyncioJobGetHistoricalData_000001" to job store "default"
2018-05-21 02:54:12,327 apscheduler.scheduler _real_add_job INFO Added job "schedulerJobSwitchRequestForRecentHistoricalDataFromShortToLong_000001" to job store "default"
2018-05-21 02:54:12,328 apscheduler.scheduler _real_add_job INFO Added job "schedulerJobSwitchRequestForRecentHistoricalDataFromLongToShort_000001" to job store "default"
2018-05-21 02:54:12,329 trading.containerClass myStartedCallback INFO started watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB connected to 127.0.0.1:4002 clientId=24>, port=4002, clientId='24', appStartupTime=15)
2018-05-21 02:54:12,329 trading.marketDataIB getHistoricalDataBars WARNING Timeout while requesting historical bars for contract Contract(secType='IND', conId=14087999, symbol='N225', exchange='OSE.JPN', currency='JPY', localSymbol='N225')
2018-05-21 02:54:12,329 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:12,333 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:12,333 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:15,003 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000001 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 02:54:20 CEST)" (scheduled at 2018-05-21 02:54:15+02:00)
2018-05-21 02:54:15,005 apscheduler.executors.default run_coroutine_job ERROR Job "asyncioJobGetHistoricalData_000001 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 02:54:20 CEST)" raised an exception
Traceback (most recent call last):
  File "/home/bn/anaconda3/envs/trading/lib/python3.6/site-packages/apscheduler/executors/base_py3.py", line 29, in run_coroutine_job
    retval = await job.func(*job.args, **job.kwargs)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 414, in asyncioJobGetHistoricalData
    durationPandasTimeDeltaDefault = pd.Timedelta(weeks=4)
UnboundLocalError: local variable 'barSizePandasTimeDeltaDefault' referenced before assignment
2018-05-21 02:54:15,677 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:15,677 ib_insync.wrapper error ERROR Error 162, reqId 15: Historical Market Data Service error message:API historical data query cancelled: 15
2018-05-21 02:54:15,677 trading.containerClass myErrorCallback INFO reqId: 15, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 15, localSymbol: None
2018-05-21 02:54:16,767 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:17,357 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:17,359 ib_insync.wrapper error ERROR Error 162, reqId 16: Historical Market Data Service error message:API historical data query cancelled: 16
2018-05-21 02:54:17,360 trading.containerClass myErrorCallback INFO reqId: 16, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 16, localSymbol: None
2018-05-21 02:54:18,315 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:18,652 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:18,652 ib_insync.wrapper error ERROR Error 162, reqId 17: Historical Market Data Service error message:API historical data query cancelled: 17
2018-05-21 02:54:18,653 trading.containerClass myErrorCallback INFO reqId: 17, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 17, localSymbol: None
2018-05-21 02:54:19,632 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:19,989 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:19,989 ib_insync.wrapper error ERROR Error 162, reqId 18: Historical Market Data Service error message:API historical data query cancelled: 18
2018-05-21 02:54:19,989 trading.containerClass myErrorCallback INFO reqId: 18, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 18, localSymbol: None
2018-05-21 02:54:20,001 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000001 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 02:54:25 CEST)" (scheduled at 2018-05-21 02:54:20+02:00)
2018-05-21 02:54:20,005 apscheduler.executors.default run_coroutine_job ERROR Job "asyncioJobGetHistoricalData_000001 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 02:54:25 CEST)" raised an exception
Traceback (most recent call last):
  File "/home/bn/anaconda3/envs/trading/lib/python3.6/site-packages/apscheduler/executors/base_py3.py", line 29, in run_coroutine_job
    retval = await job.func(*job.args, **job.kwargs)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 414, in asyncioJobGetHistoricalData
    durationPandasTimeDeltaDefault = pd.Timedelta(weeks=4)
UnboundLocalError: local variable 'barSizePandasTimeDeltaDefault' referenced before assignment
2018-05-21 02:54:20,970 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:21,288 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:21,288 ib_insync.wrapper error ERROR Error 162, reqId 19: Historical Market Data Service error message:API historical data query cancelled: 19
2018-05-21 02:54:21,288 trading.containerClass myErrorCallback INFO reqId: 19, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 19, localSymbol: None
2018-05-21 02:54:22,271 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:22,296 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:22,297 ib_insync.wrapper error ERROR Error 162, reqId 20: Historical Market Data Service error message:API historical data query cancelled: 20
2018-05-21 02:54:22,297 trading.containerClass myErrorCallback INFO reqId: 20, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 20, localSymbol: None
2018-05-21 02:54:23,339 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:23,377 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:23,378 ib_insync.wrapper error ERROR Error 162, reqId 21: Historical Market Data Service error message:API historical data query cancelled: 21
2018-05-21 02:54:23,378 trading.containerClass myErrorCallback INFO reqId: 21, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 21, localSymbol: None
2018-05-21 02:54:24,356 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:24,367 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:24,368 ib_insync.wrapper error ERROR Error 162, reqId 22: Historical Market Data Service error message:API historical data query cancelled: 22
2018-05-21 02:54:24,368 trading.containerClass myErrorCallback INFO reqId: 22, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 22, localSymbol: None
2018-05-21 02:54:25,001 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000001 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 02:54:30 CEST)" (scheduled at 2018-05-21 02:54:25+02:00)
2018-05-21 02:54:25,005 apscheduler.executors.default run_coroutine_job ERROR Job "asyncioJobGetHistoricalData_000001 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 02:54:30 CEST)" raised an exception
Traceback (most recent call last):
  File "/home/bn/anaconda3/envs/trading/lib/python3.6/site-packages/apscheduler/executors/base_py3.py", line 29, in run_coroutine_job
    retval = await job.func(*job.args, **job.kwargs)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 414, in asyncioJobGetHistoricalData
    durationPandasTimeDeltaDefault = pd.Timedelta(weeks=4)
UnboundLocalError: local variable 'barSizePandasTimeDeltaDefault' referenced before assignment
2018-05-21 02:54:25,397 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:25,407 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:25,408 ib_insync.wrapper error ERROR Error 162, reqId 23: Historical Market Data Service error message:API historical data query cancelled: 23
2018-05-21 02:54:25,408 trading.containerClass myErrorCallback INFO reqId: 23, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 23, localSymbol: None
2018-05-21 02:54:26,624 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:26,634 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:26,635 ib_insync.wrapper error ERROR Error 162, reqId 24: Historical Market Data Service error message:API historical data query cancelled: 24
2018-05-21 02:54:26,635 trading.containerClass myErrorCallback INFO reqId: 24, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 24, localSymbol: None
2018-05-21 02:54:27,621 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:27,632 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:27,633 ib_insync.wrapper error ERROR Error 162, reqId 25: Historical Market Data Service error message:API historical data query cancelled: 25
2018-05-21 02:54:27,633 trading.containerClass myErrorCallback INFO reqId: 25, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 25, localSymbol: None
2018-05-21 02:54:28,652 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:28,665 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:28,666 ib_insync.wrapper error ERROR Error 162, reqId 26: Historical Market Data Service error message:API historical data query cancelled: 26
2018-05-21 02:54:28,666 trading.containerClass myErrorCallback INFO reqId: 26, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 26, localSymbol: None
2018-05-21 02:54:29,694 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:29,695 ib_insync.wrapper error ERROR Error 162, reqId 27: Historical Market Data Service error message:API historical data query cancelled: 27
2018-05-21 02:54:29,695 trading.containerClass myErrorCallback INFO reqId: 27, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 27, localSymbol: None
2018-05-21 02:54:30,001 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000001 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 02:54:35 CEST)" (scheduled at 2018-05-21 02:54:30+02:00)
2018-05-21 02:54:30,004 apscheduler.executors.default run_coroutine_job ERROR Job "asyncioJobGetHistoricalData_000001 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 02:54:35 CEST)" raised an exception
Traceback (most recent call last):
  File "/home/bn/anaconda3/envs/trading/lib/python3.6/site-packages/apscheduler/executors/base_py3.py", line 29, in run_coroutine_job
    retval = await job.func(*job.args, **job.kwargs)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 414, in asyncioJobGetHistoricalData
    durationPandasTimeDeltaDefault = pd.Timedelta(weeks=4)
UnboundLocalError: local variable 'barSizePandasTimeDeltaDefault' referenced before assignment
2018-05-21 02:54:30,721 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:30,721 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:30,730 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:30,731 ib_insync.wrapper error ERROR Error 162, reqId 28: Historical Market Data Service error message:API historical data query cancelled: 28
2018-05-21 02:54:30,731 trading.containerClass myErrorCallback INFO reqId: 28, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 28, localSymbol: None
2018-05-21 02:54:31,820 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:31,823 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:31,824 ib_insync.wrapper error ERROR Error 162, reqId 29: Historical Market Data Service error message:API historical data query cancelled: 29
2018-05-21 02:54:31,824 trading.containerClass myErrorCallback INFO reqId: 29, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 29, localSymbol: None
2018-05-21 02:54:32,819 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:32,820 ib_insync.wrapper error ERROR Error 162, reqId 30: Historical Market Data Service error message:API historical data query cancelled: 30
2018-05-21 02:54:32,820 trading.containerClass myErrorCallback INFO reqId: 30, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 30, localSymbol: None
2018-05-21 02:54:33,858 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:33,859 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:33,863 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:33,864 ib_insync.wrapper error ERROR Error 162, reqId 31: Historical Market Data Service error message:API historical data query cancelled: 31
2018-05-21 02:54:33,864 trading.containerClass myErrorCallback INFO reqId: 31, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 31, localSymbol: None
2018-05-21 02:54:34,906 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:34,910 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:34,910 ib_insync.wrapper error ERROR Error 162, reqId 32: Historical Market Data Service error message:API historical data query cancelled: 32
2018-05-21 02:54:34,910 trading.containerClass myErrorCallback INFO reqId: 32, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 32, localSymbol: None
2018-05-21 02:54:35,001 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000001 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 02:54:40 CEST)" (scheduled at 2018-05-21 02:54:35+02:00)
2018-05-21 02:54:35,003 apscheduler.executors.default run_coroutine_job ERROR Job "asyncioJobGetHistoricalData_000001 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 02:54:40 CEST)" raised an exception
Traceback (most recent call last):
  File "/home/bn/anaconda3/envs/trading/lib/python3.6/site-packages/apscheduler/executors/base_py3.py", line 29, in run_coroutine_job
    retval = await job.func(*job.args, **job.kwargs)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 414, in asyncioJobGetHistoricalData
    durationPandasTimeDeltaDefault = pd.Timedelta(weeks=4)
UnboundLocalError: local variable 'barSizePandasTimeDeltaDefault' referenced before assignment
2018-05-21 02:54:35,931 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:35,935 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:35,936 ib_insync.wrapper error ERROR Error 162, reqId 33: Historical Market Data Service error message:API historical data query cancelled: 33
2018-05-21 02:54:35,936 trading.containerClass myErrorCallback INFO reqId: 33, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 33, localSymbol: None
2018-05-21 02:54:36,923 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:36,926 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:36,926 ib_insync.wrapper error ERROR Error 162, reqId 34: Historical Market Data Service error message:API historical data query cancelled: 34
2018-05-21 02:54:36,926 trading.containerClass myErrorCallback INFO reqId: 34, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 34, localSymbol: None
2018-05-21 02:54:37,961 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:37,965 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:37,965 ib_insync.wrapper error ERROR Error 162, reqId 35: Historical Market Data Service error message:API historical data query cancelled: 35
2018-05-21 02:54:37,966 trading.containerClass myErrorCallback INFO reqId: 35, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 35, localSymbol: None
2018-05-21 02:54:38,996 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:39,002 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:39,002 ib_insync.wrapper error ERROR Error 162, reqId 36: Historical Market Data Service error message:API historical data query cancelled: 36
2018-05-21 02:54:39,002 trading.containerClass myErrorCallback INFO reqId: 36, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 36, localSymbol: None
2018-05-21 02:54:39,970 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:39,974 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:39,974 ib_insync.wrapper error ERROR Error 162, reqId 37: Historical Market Data Service error message:API historical data query cancelled: 37
2018-05-21 02:54:39,974 trading.containerClass myErrorCallback INFO reqId: 37, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 37, localSymbol: None
2018-05-21 02:54:40,002 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000001 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 02:54:45 CEST)" (scheduled at 2018-05-21 02:54:40+02:00)
2018-05-21 02:54:40,004 apscheduler.executors.default run_coroutine_job ERROR Job "asyncioJobGetHistoricalData_000001 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 02:54:45 CEST)" raised an exception
Traceback (most recent call last):
  File "/home/bn/anaconda3/envs/trading/lib/python3.6/site-packages/apscheduler/executors/base_py3.py", line 29, in run_coroutine_job
    retval = await job.func(*job.args, **job.kwargs)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 414, in asyncioJobGetHistoricalData
    durationPandasTimeDeltaDefault = pd.Timedelta(weeks=4)
UnboundLocalError: local variable 'barSizePandasTimeDeltaDefault' referenced before assignment
2018-05-21 02:54:40,962 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:40,962 ib_insync.wrapper error ERROR Error 162, reqId 38: Historical Market Data Service error message:API historical data query cancelled: 38
2018-05-21 02:54:40,962 trading.containerClass myErrorCallback INFO reqId: 38, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 38, localSymbol: None
2018-05-21 02:54:42,489 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:42,489 ib_insync.wrapper error ERROR Error 162, reqId 39: Historical Market Data Service error message:API historical data query cancelled: 39
2018-05-21 02:54:42,489 trading.containerClass myErrorCallback INFO reqId: 39, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 39, localSymbol: None
2018-05-21 02:54:43,519 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:43,522 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:43,522 ib_insync.wrapper error ERROR Error 162, reqId 40: Historical Market Data Service error message:API historical data query cancelled: 40
2018-05-21 02:54:43,522 trading.containerClass myErrorCallback INFO reqId: 40, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 40, localSymbol: None
2018-05-21 02:54:44,544 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:44,545 ib_insync.wrapper error ERROR Error 162, reqId 41: Historical Market Data Service error message:API historical data query cancelled: 41
2018-05-21 02:54:44,545 trading.containerClass myErrorCallback INFO reqId: 41, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 41, localSymbol: None
2018-05-21 02:54:45,001 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000001 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 02:54:50 CEST)" (scheduled at 2018-05-21 02:54:45+02:00)
2018-05-21 02:54:45,004 apscheduler.executors.default run_coroutine_job ERROR Job "asyncioJobGetHistoricalData_000001 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 02:54:50 CEST)" raised an exception
Traceback (most recent call last):
  File "/home/bn/anaconda3/envs/trading/lib/python3.6/site-packages/apscheduler/executors/base_py3.py", line 29, in run_coroutine_job
    retval = await job.func(*job.args, **job.kwargs)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 414, in asyncioJobGetHistoricalData
    durationPandasTimeDeltaDefault = pd.Timedelta(weeks=4)
UnboundLocalError: local variable 'barSizePandasTimeDeltaDefault' referenced before assignment
2018-05-21 02:54:45,567 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:45,569 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:45,569 ib_insync.wrapper error ERROR Error 162, reqId 42: Historical Market Data Service error message:API historical data query cancelled: 42
2018-05-21 02:54:45,569 trading.containerClass myErrorCallback INFO reqId: 42, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 42, localSymbol: None
2018-05-21 02:54:46,727 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:46,727 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:46,728 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:46,730 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:46,731 ib_insync.wrapper error ERROR Error 162, reqId 43: Historical Market Data Service error message:API historical data query cancelled: 43
2018-05-21 02:54:46,731 trading.containerClass myErrorCallback INFO reqId: 43, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 43, localSymbol: None
2018-05-21 02:54:47,714 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:47,715 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:47,718 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:47,719 ib_insync.wrapper error ERROR Error 162, reqId 44: Historical Market Data Service error message:API historical data query cancelled: 44
2018-05-21 02:54:47,719 trading.containerClass myErrorCallback INFO reqId: 44, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 44, localSymbol: None
2018-05-21 02:54:48,745 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:48,745 ib_insync.wrapper error ERROR Error 162, reqId 45: Historical Market Data Service error message:API historical data query cancelled: 45
2018-05-21 02:54:48,745 trading.containerClass myErrorCallback INFO reqId: 45, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 45, localSymbol: None
2018-05-21 02:54:49,766 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:49,767 ib_insync.wrapper error ERROR Error 162, reqId 46: Historical Market Data Service error message:API historical data query cancelled: 46
2018-05-21 02:54:49,768 trading.containerClass myErrorCallback INFO reqId: 46, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 46, localSymbol: None
2018-05-21 02:54:50,006 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000001 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 02:54:55 CEST)" (scheduled at 2018-05-21 02:54:50+02:00)
2018-05-21 02:54:50,009 apscheduler.executors.default run_coroutine_job ERROR Job "asyncioJobGetHistoricalData_000001 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 02:54:55 CEST)" raised an exception
Traceback (most recent call last):
  File "/home/bn/anaconda3/envs/trading/lib/python3.6/site-packages/apscheduler/executors/base_py3.py", line 29, in run_coroutine_job
    retval = await job.func(*job.args, **job.kwargs)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 414, in asyncioJobGetHistoricalData
    durationPandasTimeDeltaDefault = pd.Timedelta(weeks=4)
UnboundLocalError: local variable 'barSizePandasTimeDeltaDefault' referenced before assignment
2018-05-21 02:54:50,613 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:50,614 ib_insync.wrapper error ERROR Error 162, reqId 47: Historical Market Data Service error message:API historical data query cancelled: 47
2018-05-21 02:54:50,614 trading.containerClass myErrorCallback INFO reqId: 47, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 47, localSymbol: None
2018-05-21 02:54:51,634 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:51,634 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:51,637 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:51,638 ib_insync.wrapper error ERROR Error 162, reqId 48: Historical Market Data Service error message:API historical data query cancelled: 48
2018-05-21 02:54:51,638 trading.containerClass myErrorCallback INFO reqId: 48, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 48, localSymbol: None
2018-05-21 02:54:52,653 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:52,653 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:52,656 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:52,656 ib_insync.wrapper error ERROR Error 162, reqId 49: Historical Market Data Service error message:API historical data query cancelled: 49
2018-05-21 02:54:52,657 trading.containerClass myErrorCallback INFO reqId: 49, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 49, localSymbol: None
2018-05-21 02:54:53,686 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:53,687 ib_insync.wrapper error ERROR Error 162, reqId 50: Historical Market Data Service error message:API historical data query cancelled: 50
2018-05-21 02:54:53,687 trading.containerClass myErrorCallback INFO reqId: 50, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 50, localSymbol: None
2018-05-21 02:54:54,706 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:54,706 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:54,706 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:54,709 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:54,709 ib_insync.wrapper error ERROR Error 162, reqId 51: Historical Market Data Service error message:API historical data query cancelled: 51
2018-05-21 02:54:54,709 trading.containerClass myErrorCallback INFO reqId: 51, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 51, localSymbol: None
2018-05-21 02:54:55,001 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000001 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 02:55:00 CEST)" (scheduled at 2018-05-21 02:54:55+02:00)
2018-05-21 02:54:55,004 apscheduler.executors.default run_coroutine_job ERROR Job "asyncioJobGetHistoricalData_000001 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 02:55:00 CEST)" raised an exception
Traceback (most recent call last):
  File "/home/bn/anaconda3/envs/trading/lib/python3.6/site-packages/apscheduler/executors/base_py3.py", line 29, in run_coroutine_job
    retval = await job.func(*job.args, **job.kwargs)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 414, in asyncioJobGetHistoricalData
    durationPandasTimeDeltaDefault = pd.Timedelta(weeks=4)
UnboundLocalError: local variable 'barSizePandasTimeDeltaDefault' referenced before assignment
2018-05-21 02:54:55,733 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:54:55,733 ib_insync.wrapper error ERROR Error 162, reqId 52: Historical Market Data Service error message:API historical data query cancelled: 52
2018-05-21 02:54:55,733 trading.containerClass myErrorCallback INFO reqId: 52, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 52, localSymbol: None
2018-05-21 02:54:56,856 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:54:56,857 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:55:00,000 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000001 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 02:55:05 CEST)" (scheduled at 2018-05-21 02:55:00+02:00)
2018-05-21 02:55:00,004 apscheduler.executors.default run_coroutine_job ERROR Job "asyncioJobGetHistoricalData_000001 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 02:55:05 CEST)" raised an exception
Traceback (most recent call last):
  File "/home/bn/anaconda3/envs/trading/lib/python3.6/site-packages/apscheduler/executors/base_py3.py", line 29, in run_coroutine_job
    retval = await job.func(*job.args, **job.kwargs)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 414, in asyncioJobGetHistoricalData
    durationPandasTimeDeltaDefault = pd.Timedelta(weeks=4)
UnboundLocalError: local variable 'barSizePandasTimeDeltaDefault' referenced before assignment
2018-05-21 02:55:00,350 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: EUR.AUD; 2018-05-20 23:55:00+00:00; 2018-05-21 00:54:00+00:00 60; 2018-05-21 00:53:00; 2018-05-21 00:55:00; False
2018-05-21 02:55:00,526 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.063301
2018-05-21 02:55:00,526 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.176265
2018-05-21 02:55:00,526 trading.containerClass myBarUpdateCallback INFO localSymbol: EUR.AUD, nBars: 63, diffDateTime: 0.345431, close: 1.56323, last: 2018-05-21 00:53:00
2018-05-21 02:55:00,535 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:55:00,539 ib_insync.wrapper error ERROR Error 162, reqId 53: Historical Market Data Service error message:API historical data query cancelled: 53
2018-05-21 02:55:00,539 trading.containerClass myErrorCallback INFO reqId: 53, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 53, localSymbol: None
2018-05-21 02:55:01,538 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: N225; 2018-05-21 00:00:00+00:00; 2018-05-21 00:54:00+00:00 55; 2018-05-21 00:53:00; 2018-05-21 00:55:00; False
2018-05-21 02:55:01,596 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 55; elapsed time: 0:00:00.019043
2018-05-21 02:55:01,596 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 55; elapsed time: 0:00:00.057716
2018-05-21 02:55:01,596 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:55:01,597 ib_insync.wrapper error ERROR Error 162, reqId 54: Historical Market Data Service error message:API historical data query cancelled: 54
2018-05-21 02:55:01,597 trading.containerClass myErrorCallback INFO reqId: 54, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 54, localSymbol: None
2018-05-21 02:55:02,575 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:55:02,575 trading.containerClass myBarUpdateCallback INFO localSymbol: N225, nBars: 62, diffDateTime: 1.530959, close: 0.0, last: 2018-05-21 00:53:00
2018-05-21 02:55:02,575 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:55:02,889 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:55:02,889 ib_insync.wrapper error ERROR Error 162, reqId 55: Historical Market Data Service error message:API historical data query cancelled: 55
2018-05-21 02:55:02,889 trading.containerClass myErrorCallback INFO reqId: 55, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 55, localSymbol: None
2018-05-21 02:55:03,868 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:55:03,868 trading.containerClass myBarUpdateCallback INFO localSymbol: N225, nBars: 62, diffDateTime: 2.887849, close: 22977.03, last: 2018-05-21 00:54:00
2018-05-21 02:55:03,870 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:55:03,871 ib_insync.wrapper error ERROR Error 162, reqId 56: Historical Market Data Service error message:API historical data query cancelled: 56
2018-05-21 02:55:03,871 trading.containerClass myErrorCallback INFO reqId: 56, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 56, localSymbol: None
2018-05-21 02:55:04,891 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:55:04,891 trading.containerClass myBarUpdateCallback INFO localSymbol: N225, nBars: 62, diffDateTime: 3.869576, close: 0.0, last: 2018-05-21 00:54:00
2018-05-21 02:55:05,001 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000001 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 02:55:10 CEST)" (scheduled at 2018-05-21 02:55:05+02:00)
2018-05-21 02:55:05,003 apscheduler.executors.default run_coroutine_job ERROR Job "asyncioJobGetHistoricalData_000001 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 02:55:10 CEST)" raised an exception
Traceback (most recent call last):
  File "/home/bn/anaconda3/envs/trading/lib/python3.6/site-packages/apscheduler/executors/base_py3.py", line 29, in run_coroutine_job
    retval = await job.func(*job.args, **job.kwargs)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 414, in asyncioJobGetHistoricalData
    durationPandasTimeDeltaDefault = pd.Timedelta(weeks=4)
UnboundLocalError: local variable 'barSizePandasTimeDeltaDefault' referenced before assignment
2018-05-21 02:55:05,157 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:55:05,161 ib_insync.wrapper error ERROR Error 162, reqId 57: Historical Market Data Service error message:API historical data query cancelled: 57
2018-05-21 02:55:05,161 trading.containerClass myErrorCallback INFO reqId: 57, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 57, localSymbol: None
2018-05-21 02:55:06,175 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:55:06,176 ib_insync.wrapper error ERROR Error 162, reqId 58: Historical Market Data Service error message:API historical data query cancelled: 58
2018-05-21 02:55:06,176 trading.containerClass myErrorCallback INFO reqId: 58, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 58, localSymbol: None
2018-05-21 02:55:07,173 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:55:07,173 trading.containerClass myBarUpdateCallback INFO localSymbol: N225, nBars: 62, diffDateTime: 6.151299, close: 22977.03, last: 2018-05-21 00:54:00
2018-05-21 02:55:07,176 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:55:07,177 ib_insync.wrapper error ERROR Error 162, reqId 59: Historical Market Data Service error message:API historical data query cancelled: 59
2018-05-21 02:55:07,177 trading.containerClass myErrorCallback INFO reqId: 59, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 59, localSymbol: None
2018-05-21 02:55:17,302 ib_insync.Watchdog start INFO Starting
2018-05-21 02:55:17,303 quamash <module> INFO Using Qt Implementation: PyQt5
2018-05-21 02:55:17,328 ib_insync.IBC startAsync INFO Starting
2018-05-21 02:55:34,789 ib_insync.Watchdog start INFO Starting
2018-05-21 02:55:34,790 quamash <module> INFO Using Qt Implementation: PyQt5
2018-05-21 02:55:34,822 ib_insync.IBC startAsync INFO Starting
2018-05-21 02:55:49,834 ib_insync.client connectAsync INFO Connecting to 127.0.0.1:4002 with clientId 24...
2018-05-21 02:55:49,835 ib_insync.client _onSocketConnected INFO Connected
2018-05-21 02:55:49,872 ib_insync.client _onSocketHasData INFO Logged on to server version 141
2018-05-21 02:55:49,915 ib_insync.client connectAsync INFO API connection ready
2018-05-21 02:55:49,982 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17498005, marketValue=218546.29, averageCost=1.2182257, unrealizedPNL=-8043.69, realizedPNL=0.0, account='DU946735')
2018-05-21 02:55:49,982 ib_insync.wrapper position INFO position: Position(account='DU946735', contract=Contract(secType='CASH', conId=12087792, symbol='EUR', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, avgCost=1.2182257)
2018-05-21 02:55:50,003 ib_insync.ib connectAsync INFO Synchronization complete
2018-05-21 02:55:50,082 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() started
2018-05-21 02:55:50,083 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop datetime
2018-05-21 02:55:50,083 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:55:50,083 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop close
2018-05-21 02:55:50,084 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:55:50,084 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() started
2018-05-21 02:55:50,084 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop datetime
2018-05-21 02:55:50,084 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:55:50,085 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop close
2018-05-21 02:55:50,085 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:55:50,085 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() started
2018-05-21 02:55:50,085 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop datetime
2018-05-21 02:55:50,085 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:55:50,086 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop close
2018-05-21 02:55:50,086 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:55:50,086 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() started
2018-05-21 02:55:50,086 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop datetime
2018-05-21 02:55:50,087 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:55:50,087 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop close
2018-05-21 02:55:50,087 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:55:50,087 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() started
2018-05-21 02:55:50,088 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop datetime
2018-05-21 02:55:50,088 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:55:50,088 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop close
2018-05-21 02:55:50,088 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:55:50,089 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() started
2018-05-21 02:55:50,089 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop datetime
2018-05-21 02:55:50,089 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:55:50,089 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop close
2018-05-21 02:55:50,090 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:55:50,090 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() started
2018-05-21 02:55:50,090 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop datetime
2018-05-21 02:55:50,091 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:55:50,091 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop close
2018-05-21 02:55:50,091 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:55:50,091 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() started
2018-05-21 02:55:50,091 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop datetime
2018-05-21 02:55:50,092 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 02:55:50,092 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop close
2018-05-21 02:55:50,092 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() complete
2018-05-21 02:55:50,092 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() started
2018-05-21 02:55:50,093 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop datetime
2018-05-21 02:55:50,093 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop diffToNextRowInMinutes
2018-05-21 02:55:50,093 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop close
2018-05-21 02:55:50,093 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() complete
2018-05-21 02:55:50,094 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() started
2018-05-21 02:55:50,094 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop datetime
2018-05-21 02:55:50,094 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop diffToNextRowInMinutes
2018-05-21 02:55:50,094 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop close
2018-05-21 02:55:50,095 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() complete
2018-05-21 02:55:50,095 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() started
2018-05-21 02:55:50,095 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop datetime
2018-05-21 02:55:50,095 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop diffToNextRowInMinutes
2018-05-21 02:55:50,095 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop close
2018-05-21 02:55:50,095 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() complete
2018-05-21 02:55:50,095 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() started
2018-05-21 02:55:50,096 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop datetime
2018-05-21 02:55:50,096 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop diffToNextRowInMinutes
2018-05-21 02:55:50,096 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop close
2018-05-21 02:55:50,096 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() complete
2018-05-21 02:55:50,096 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() started
2018-05-21 02:55:50,096 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop datetime
2018-05-21 02:55:50,097 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop diffToNextRowInMinutes
2018-05-21 02:55:50,097 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop close
2018-05-21 02:55:50,097 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() complete
2018-05-21 02:55:50,097 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() started
2018-05-21 02:55:50,097 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop datetime
2018-05-21 02:55:50,097 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop diffToNextRowInMinutes
2018-05-21 02:55:50,098 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop close
2018-05-21 02:55:50,098 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() complete
2018-05-21 02:55:50,098 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-21 02:55:50,099 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-21 02:55:50,099 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 02:55:53,360 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-21 02:55:53,360 sqlalchemy.engine.base.Engine _execute_context INFO PRAGMA table_info("MarketDataInfoTable")
2018-05-21 02:55:53,360 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 02:55:53,365 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-21 02:55:53,366 sqlalchemy.engine.base.Engine _execute_context INFO SELECT count(*) AS count_1 
FROM (SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable") AS anon_1
2018-05-21 02:55:53,366 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 02:55:53,368 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName", "MarketDataInfoTable".description, "MarketDataInfoTable"."conId", "MarketDataInfoTable".symbol, "MarketDataInfoTable".currency, "MarketDataInfoTable".exchange, "MarketDataInfoTable".category, "MarketDataInfoTable"."secType", "MarketDataInfoTable"."earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-21 02:55:53,368 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 02:55:53,372 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-21 02:55:53,373 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 02:55:53,993 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-21 02:55:54,013 apscheduler.scheduler start INFO Scheduler started
2018-05-21 02:55:54,014 root runProg INFO Now updating the settings for the request of recent historical bars
2018-05-21 02:55:54,014 root runProg INFO Now requesting initial recent historical bars
2018-05-21 02:55:54,014 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:55:54,016 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:55:55,558 ib_insync.wrapper error INFO Warning 2106, reqId -1: HMDS data farm connection is OK:cashhmds
2018-05-21 02:55:55,558 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2106, errorString: HMDS data farm connection is OK:cashhmds, localSymbol: None
2018-05-21 02:55:55,681 ib_insync.wrapper error INFO Warning 2119, reqId -1: Market data farm is connecting:cashfarm
2018-05-21 02:55:55,681 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2119, errorString: Market data farm is connecting:cashfarm, localSymbol: None
2018-05-21 02:55:55,786 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:55:56,180 ib_insync.wrapper error INFO Warning 2119, reqId -1: Market data farm is connecting:jfarm
2018-05-21 02:55:56,180 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2119, errorString: Market data farm is connecting:jfarm, localSymbol: None
2018-05-21 02:55:56,486 ib_insync.wrapper error INFO Warning 2104, reqId -1: Market data farm connection is OK:cashfarm
2018-05-21 02:55:56,486 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2104, errorString: Market data farm connection is OK:cashfarm, localSymbol: None
2018-05-21 02:55:58,582 ib_insync.wrapper error INFO Warning 2104, reqId -1: Market data farm connection is OK:jfarm
2018-05-21 02:55:58,582 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2104, errorString: Market data farm connection is OK:jfarm, localSymbol: None
2018-05-21 02:56:00,840 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: EUR.AUD; 2018-05-20 23:56:00+00:00; 2018-05-21 00:55:00+00:00 60; 2018-05-21 00:54:00; 2018-05-21 00:56:00; False
2018-05-21 02:56:01,001 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.063139
2018-05-21 02:56:01,002 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.161084
2018-05-21 02:56:01,002 trading.containerClass myBarUpdateCallback INFO localSymbol: EUR.AUD, nBars: 62, diffDateTime: 0.832169, close: 1.563255, last: 2018-05-21 00:54:00
2018-05-21 02:56:01,763 ib_insync.wrapper error INFO Warning 2106, reqId -1: HMDS data farm connection is OK:hkhmds
2018-05-21 02:56:01,763 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2106, errorString: HMDS data farm connection is OK:hkhmds, localSymbol: None
2018-05-21 02:56:02,450 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:56:02,462 ib_insync.wrapper error ERROR Error 162, reqId 32: Historical Market Data Service error message:API historical data query cancelled: 32
2018-05-21 02:56:02,462 trading.containerClass myErrorCallback INFO reqId: 32, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 32, localSymbol: None
2018-05-21 02:56:03,501 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:56:03,501 ib_insync.wrapper error ERROR Error 162, reqId 33: Historical Market Data Service error message:API historical data query cancelled: 33
2018-05-21 02:56:03,502 trading.containerClass myErrorCallback INFO reqId: 33, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 33, localSymbol: None
2018-05-21 02:56:04,544 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:56:04,545 ib_insync.wrapper error ERROR Error 162, reqId 34: Historical Market Data Service error message:API historical data query cancelled: 34
2018-05-21 02:56:04,545 trading.containerClass myErrorCallback INFO reqId: 34, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 34, localSymbol: None
2018-05-21 02:56:05,920 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:56:05,921 ib_insync.wrapper error ERROR Error 162, reqId 35: Historical Market Data Service error message:API historical data query cancelled: 35
2018-05-21 02:56:05,922 trading.containerClass myErrorCallback INFO reqId: 35, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 35, localSymbol: None
2018-05-21 02:56:06,912 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:56:06,912 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:56:06,912 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:56:06,912 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:56:06,914 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for SPX. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:56:06,929 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: N225; 2018-05-21 00:00:00+00:00; 2018-05-21 00:55:00+00:00 56; 2018-05-21 00:54:00; 2018-05-21 00:56:00; False
2018-05-21 02:56:07,027 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 56; elapsed time: 0:00:00.044690
2018-05-21 02:56:07,028 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 56; elapsed time: 0:00:00.098675
2018-05-21 02:56:07,028 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:56:07,029 ib_insync.wrapper error ERROR Error 162, reqId 36: Historical Market Data Service error message:API historical data query cancelled: 36
2018-05-21 02:56:07,029 trading.containerClass myErrorCallback INFO reqId: 36, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 36, localSymbol: None
2018-05-21 02:56:07,046 ib_insync.wrapper error INFO Warning 2119, reqId -1: Market data farm is connecting:usfarm.us
2018-05-21 02:56:07,047 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2119, errorString: Market data farm is connecting:usfarm.us, localSymbol: None
2018-05-21 02:56:08,116 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:56:08,117 trading.containerClass myBarUpdateCallback INFO localSymbol: N225, nBars: 61, diffDateTime: 6.91854, close: 22980.4, last: 2018-05-21 00:54:00
2018-05-21 02:56:08,123 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:56:08,124 ib_insync.wrapper error ERROR Error 162, reqId 38: Historical Market Data Service error message:API historical data query cancelled: 38
2018-05-21 02:56:08,124 trading.containerClass myErrorCallback INFO reqId: 38, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 38, localSymbol: None
2018-05-21 02:56:08,493 ib_insync.wrapper error INFO Warning 2104, reqId -1: Market data farm connection is OK:usfarm.us
2018-05-21 02:56:08,494 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2104, errorString: Market data farm connection is OK:usfarm.us, localSymbol: None
2018-05-21 02:56:09,115 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:56:09,116 trading.containerClass myBarUpdateCallback INFO localSymbol: N225, nBars: 61, diffDateTime: 8.121248, close: 22980.4, last: 2018-05-21 00:55:00
2018-05-21 02:56:09,124 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:56:09,126 ib_insync.wrapper error ERROR Error 162, reqId 39: Historical Market Data Service error message:API historical data query cancelled: 39
2018-05-21 02:56:09,126 trading.containerClass myErrorCallback INFO reqId: 39, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 39, localSymbol: None
2018-05-21 02:56:10,157 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:56:10,157 trading.containerClass myBarUpdateCallback INFO localSymbol: N225, nBars: 61, diffDateTime: 9.120974, close: 22980.4, last: 2018-05-21 00:55:00
2018-05-21 02:56:10,196 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:56:10,196 ib_insync.wrapper error ERROR Error 162, reqId 40: Historical Market Data Service error message:API historical data query cancelled: 40
2018-05-21 02:56:10,197 trading.containerClass myErrorCallback INFO reqId: 40, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 40, localSymbol: None
2018-05-21 02:56:11,186 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:56:11,186 ib_insync.wrapper error ERROR Error 162, reqId 41: Historical Market Data Service error message:API historical data query cancelled: 41
2018-05-21 02:56:11,187 trading.containerClass myErrorCallback INFO reqId: 41, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 41, localSymbol: None
2018-05-21 02:56:12,051 ib_insync.wrapper error INFO Warning 2108, reqId -1: Market data farm connection is inactive but should be available upon demand.usfarm.us
2018-05-21 02:56:12,051 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2108, errorString: Market data farm connection is inactive but should be available upon demand.usfarm.us, localSymbol: None
2018-05-21 02:56:12,052 ib_insync.wrapper error INFO Warning 2108, reqId -1: Market data farm connection is inactive but should be available upon demand.usfarm.us
2018-05-21 02:56:12,052 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2108, errorString: Market data farm connection is inactive but should be available upon demand.usfarm.us, localSymbol: None
2018-05-21 02:56:12,230 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:56:12,230 ib_insync.wrapper error ERROR Error 162, reqId 42: Historical Market Data Service error message:API historical data query cancelled: 42
2018-05-21 02:56:12,231 trading.containerClass myErrorCallback INFO reqId: 42, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 42, localSymbol: None
2018-05-21 02:56:13,257 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:56:13,257 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:56:13,257 trading.containerClass myBarUpdateCallback INFO localSymbol: N225, nBars: 61, diffDateTime: 11.182997, close: 22979.47, last: 2018-05-21 00:55:00
2018-05-21 02:56:13,258 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:56:13,258 trading.containerClass myBarUpdateCallback INFO localSymbol: N225, nBars: 61, diffDateTime: 10.193227, close: 22980.4, last: 2018-05-21 00:55:00
2018-05-21 02:56:13,295 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:56:13,296 ib_insync.wrapper error ERROR Error 162, reqId 43: Historical Market Data Service error message:API historical data query cancelled: 43
2018-05-21 02:56:13,296 trading.containerClass myErrorCallback INFO reqId: 43, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 43, localSymbol: None
2018-05-21 02:56:14,294 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:56:14,295 ib_insync.wrapper error ERROR Error 162, reqId 44: Historical Market Data Service error message:API historical data query cancelled: 44
2018-05-21 02:56:14,295 trading.containerClass myErrorCallback INFO reqId: 44, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 44, localSymbol: None
2018-05-21 02:56:15,324 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:56:15,325 ib_insync.wrapper error ERROR Error 162, reqId 45: Historical Market Data Service error message:API historical data query cancelled: 45
2018-05-21 02:56:15,326 trading.containerClass myErrorCallback INFO reqId: 45, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 45, localSymbol: None
2018-05-21 02:56:16,472 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:56:16,472 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:56:16,472 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:56:16,682 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.1747, marketValue=218494.2, averageCost=1.2182257, unrealizedPNL=-8095.78, realizedPNL=0.0, account='DU946735')
2018-05-21 02:56:16,916 trading.marketDataIB getHistoricalDataBars WARNING Timeout while requesting historical bars for contract Contract(secType='IND', conId=416904, symbol='SPX', exchange='CBOE', currency='USD', localSymbol='SPX')
2018-05-21 02:56:17,012 apscheduler.scheduler _real_add_job INFO Added job "asyncioJobGetHistoricalData_000000" to job store "default"
2018-05-21 02:56:17,012 apscheduler.scheduler _real_add_job INFO Added job "schedulerJobSwitchRequestForRecentHistoricalDataFromShortToLong_000000" to job store "default"
2018-05-21 02:56:17,013 apscheduler.scheduler _real_add_job INFO Added job "schedulerJobSwitchRequestForRecentHistoricalDataFromLongToShort_000000" to job store "default"
2018-05-21 02:56:20,003 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 02:56:25 CEST)" (scheduled at 2018-05-21 02:56:20+02:00)
2018-05-21 02:56:46,948 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:56:47,074 ib_insync.wrapper error ERROR Error 162, reqId 46: Historical Market Data Service error message:API historical data query cancelled: 46
2018-05-21 02:56:47,074 trading.containerClass myErrorCallback INFO reqId: 46, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 46, localSymbol: None
2018-05-21 02:56:48,434 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:56:48,435 ib_insync.wrapper error ERROR Error 162, reqId 48: Historical Market Data Service error message:API historical data query cancelled: 48
2018-05-21 02:56:48,435 trading.containerClass myErrorCallback INFO reqId: 48, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 48, localSymbol: None
2018-05-21 02:56:49,501 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:56:49,503 ib_insync.wrapper error ERROR Error 162, reqId 49: Historical Market Data Service error message:API historical data query cancelled: 49
2018-05-21 02:56:49,503 trading.containerClass myErrorCallback INFO reqId: 49, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 49, localSymbol: None
2018-05-21 02:56:50,514 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:56:50,515 ib_insync.wrapper error ERROR Error 162, reqId 50: Historical Market Data Service error message:API historical data query cancelled: 50
2018-05-21 02:56:50,515 trading.containerClass myErrorCallback INFO reqId: 50, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 50, localSymbol: None
2018-05-21 02:56:51,386 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:56:51,386 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:56:51,386 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:56:51,386 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:56:51,387 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: N225, JPY; is going to be performed because earliestDateTime as queried directly from IB is: 2005-06-30 00:00:00
2018-05-21 02:56:57,702 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-20 00:57:00
2018-05-21 02:56:57,702 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-21 00:57:00
2018-05-21 02:56:57,703 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: N225, JPY; startDT: 2018-05-20 00:57:00; endDT: 2018-05-21 00:37:00; durationString: 85200 S; timeout: 1800
2018-05-21 02:56:57,710 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:56:57,711 ib_insync.wrapper error ERROR Error 162, reqId 51: Historical Market Data Service error message:API historical data query cancelled: 51
2018-05-21 02:56:57,712 trading.containerClass myErrorCallback INFO reqId: 51, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 51, localSymbol: None
2018-05-21 02:56:58,654 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:56:58,695 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:56:58,696 ib_insync.wrapper error ERROR Error 162, reqId 53: Historical Market Data Service error message:API historical data query cancelled: 53
2018-05-21 02:56:58,696 trading.containerClass myErrorCallback INFO reqId: 53, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 53, localSymbol: None
2018-05-21 02:56:59,591 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:56:59,744 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:56:59,747 ib_insync.wrapper error ERROR Error 162, reqId 54: Historical Market Data Service error message:API historical data query cancelled: 54
2018-05-21 02:56:59,748 trading.containerClass myErrorCallback INFO reqId: 54, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 54, localSymbol: None
2018-05-21 02:57:00,641 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: EUR.AUD; 2018-05-20 23:57:00+00:00; 2018-05-21 00:56:00+00:00 60; 2018-05-21 00:55:00; 2018-05-21 00:57:00; False
2018-05-21 02:57:00,962 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.080921
2018-05-21 02:57:00,962 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.320809
2018-05-21 02:57:00,962 trading.containerClass myBarUpdateCallback INFO localSymbol: EUR.AUD, nBars: 63, diffDateTime: 0.631542, close: 1.56313, last: 2018-05-21 00:55:00
2018-05-21 02:57:00,974 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:57:00,975 ib_insync.wrapper error ERROR Error 162, reqId 55: Historical Market Data Service error message:API historical data query cancelled: 55
2018-05-21 02:57:00,975 trading.containerClass myErrorCallback INFO reqId: 55, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 55, localSymbol: None
2018-05-21 02:57:01,917 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:57:01,917 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:57:08,743 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 1420; elapsed time: 0:00:00.114657
2018-05-21 02:57:08,743 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 1420; elapsed time: 0:00:00.375445
2018-05-21 02:57:12,150 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: N225, JPY; startDT: 2018-05-20 00:57:00; endDT: 2018-05-21 00:37:00; durationString: 85200 S; elapsedTime: 0:00:14.447555; rows: 1420; rowsTotal: 1325541
2018-05-21 02:57:12,158 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:57:12,333 ib_insync.wrapper error ERROR Error 162, reqId 56: Historical Market Data Service error message:API historical data query cancelled: 56
2018-05-21 02:57:12,334 trading.containerClass myErrorCallback INFO reqId: 56, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 56, localSymbol: None
2018-05-21 02:57:13,127 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: N225; 2018-05-21 00:00:00+00:00; 2018-05-21 00:56:00+00:00 57; 2018-05-21 00:55:00; 2018-05-21 00:57:00; False
2018-05-21 02:57:13,207 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 57; elapsed time: 0:00:00.024927
2018-05-21 02:57:13,207 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 57; elapsed time: 0:00:00.080120
2018-05-21 02:57:13,208 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:57:13,208 ib_insync.wrapper error ERROR Error 162, reqId 57: Historical Market Data Service error message:API historical data query cancelled: 57
2018-05-21 02:57:13,209 trading.containerClass myErrorCallback INFO reqId: 57, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 57, localSymbol: None
2018-05-21 02:57:14,206 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:57:14,207 ib_insync.wrapper error ERROR Error 162, reqId 58: Historical Market Data Service error message:API historical data query cancelled: 58
2018-05-21 02:57:14,207 trading.containerClass myErrorCallback INFO reqId: 58, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 58, localSymbol: None
2018-05-21 02:57:15,234 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:57:15,235 ib_insync.wrapper error ERROR Error 162, reqId 59: Historical Market Data Service error message:API historical data query cancelled: 59
2018-05-21 02:57:15,235 trading.containerClass myErrorCallback INFO reqId: 59, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 59, localSymbol: None
2018-05-21 02:57:16,259 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:57:16,259 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:57:16,259 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:57:16,260 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:57:27,930 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-21 00:37:00
2018-05-21 02:57:27,930 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-22 00:17:00
2018-05-21 02:57:27,931 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: N225, JPY; startDT: 2018-05-21 00:37:00; endDT: 2018-05-22 00:18:00; durationString: 85260 S; timeout: 1800
2018-05-21 02:57:27,937 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:57:28,020 ib_insync.wrapper error ERROR Error 162, reqId 60: Historical Market Data Service error message:API historical data query cancelled: 60
2018-05-21 02:57:28,020 trading.containerClass myErrorCallback INFO reqId: 60, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 60, localSymbol: None
2018-05-21 02:57:29,115 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:57:29,700 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:57:29,701 ib_insync.wrapper error ERROR Error 162, reqId 62: Historical Market Data Service error message:API historical data query cancelled: 62
2018-05-21 02:57:29,701 trading.containerClass myErrorCallback INFO reqId: 62, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 62, localSymbol: None
2018-05-21 02:57:30,800 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:57:31,099 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 1100; elapsed time: 0:00:00.074247
2018-05-21 02:57:31,099 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 1100; elapsed time: 0:00:00.298296
2018-05-21 02:57:31,272 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: N225, JPY; startDT: 2018-05-21 00:37:00; endDT: 2018-05-22 00:18:00; durationString: 85260 S; elapsedTime: 0:00:03.341616; rows: 1100; rowsTotal: 1325542
2018-05-21 02:57:31,276 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:57:31,277 ib_insync.wrapper error ERROR Error 162, reqId 63: Historical Market Data Service error message:API historical data query cancelled: 63
2018-05-21 02:57:31,277 trading.containerClass myErrorCallback INFO reqId: 63, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 63, localSymbol: None
2018-05-21 02:57:32,219 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:57:32,220 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: N225, JPY; elapsedTime: 0:00:45.282777
2018-05-21 02:58:37,906 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:58:38,025 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: EUR.AUD; 2018-05-20 23:58:00+00:00; 2018-05-21 00:57:00+00:00 60; 2018-05-21 00:56:00; 2018-05-21 00:58:00; False
2018-05-21 02:58:38,253 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.095943
2018-05-21 02:58:38,254 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.228024
2018-05-21 02:58:38,254 trading.containerClass myBarUpdateCallback INFO localSymbol: EUR.AUD, nBars: 64, diffDateTime: 38.017072, close: 1.56331, last: 2018-05-21 00:56:00
2018-05-21 02:58:38,613 ib_insync.wrapper error ERROR Error 162, reqId 64: Historical Market Data Service error message:API historical data query cancelled: 64
2018-05-21 02:58:38,613 trading.containerClass myErrorCallback INFO reqId: 64, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 64, localSymbol: None
2018-05-21 02:58:38,853 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:58:38,904 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: N225; 2018-05-21 00:00:00+00:00; 2018-05-21 00:57:00+00:00 58; 2018-05-21 00:56:00; 2018-05-21 00:58:00; False
2018-05-21 02:58:39,020 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 58; elapsed time: 0:00:00.026574
2018-05-21 02:58:39,020 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 58; elapsed time: 0:00:00.115963
2018-05-21 02:58:39,020 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:58:39,021 ib_insync.wrapper error ERROR Error 162, reqId 66: Historical Market Data Service error message:API historical data query cancelled: 66
2018-05-21 02:58:39,021 trading.containerClass myErrorCallback INFO reqId: 66, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 66, localSymbol: None
2018-05-21 02:58:40,041 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:58:40,043 ib_insync.wrapper error ERROR Error 162, reqId 67: Historical Market Data Service error message:API historical data query cancelled: 67
2018-05-21 02:58:40,043 trading.containerClass myErrorCallback INFO reqId: 67, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 67, localSymbol: None
2018-05-21 02:58:41,055 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:58:41,057 ib_insync.wrapper error ERROR Error 162, reqId 68: Historical Market Data Service error message:API historical data query cancelled: 68
2018-05-21 02:58:41,057 trading.containerClass myErrorCallback INFO reqId: 68, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 68, localSymbol: None
2018-05-21 02:58:42,043 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:58:42,044 ib_insync.wrapper error ERROR Error 162, reqId 69: Historical Market Data Service error message:API historical data query cancelled: 69
2018-05-21 02:58:42,044 trading.containerClass myErrorCallback INFO reqId: 69, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 69, localSymbol: None
2018-05-21 02:58:43,069 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:58:43,069 ib_insync.wrapper error ERROR Error 162, reqId 70: Historical Market Data Service error message:API historical data query cancelled: 70
2018-05-21 02:58:43,070 trading.containerClass myErrorCallback INFO reqId: 70, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 70, localSymbol: None
2018-05-21 02:58:44,115 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:58:44,116 ib_insync.wrapper error ERROR Error 162, reqId 71: Historical Market Data Service error message:API historical data query cancelled: 71
2018-05-21 02:58:44,116 trading.containerClass myErrorCallback INFO reqId: 71, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 71, localSymbol: None
2018-05-21 02:58:45,149 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:58:45,150 ib_insync.wrapper error ERROR Error 162, reqId 72: Historical Market Data Service error message:API historical data query cancelled: 72
2018-05-21 02:58:45,150 trading.containerClass myErrorCallback INFO reqId: 72, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 72, localSymbol: None
2018-05-21 02:58:46,182 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:58:46,183 ib_insync.wrapper error ERROR Error 162, reqId 73: Historical Market Data Service error message:API historical data query cancelled: 73
2018-05-21 02:58:46,183 trading.containerClass myErrorCallback INFO reqId: 73, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 73, localSymbol: None
2018-05-21 02:58:47,214 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:58:47,215 ib_insync.wrapper error ERROR Error 162, reqId 74: Historical Market Data Service error message:API historical data query cancelled: 74
2018-05-21 02:58:47,215 trading.containerClass myErrorCallback INFO reqId: 74, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 74, localSymbol: None
2018-05-21 02:58:48,239 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:58:48,239 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:58:48,240 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:58:48,240 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:58:48,240 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:58:48,240 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:58:48,244 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:58:48,249 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:58:48,250 ib_insync.wrapper error ERROR Error 162, reqId 75: Historical Market Data Service error message:API historical data query cancelled: 75
2018-05-21 02:58:48,250 trading.containerClass myErrorCallback INFO reqId: 75, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 75, localSymbol: None
2018-05-21 02:58:49,315 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:58:49,316 ib_insync.wrapper error ERROR Error 162, reqId 76: Historical Market Data Service error message:API historical data query cancelled: 76
2018-05-21 02:58:49,316 trading.containerClass myErrorCallback INFO reqId: 76, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 76, localSymbol: None
2018-05-21 02:58:50,313 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:58:50,314 ib_insync.wrapper error ERROR Error 162, reqId 77: Historical Market Data Service error message:API historical data query cancelled: 77
2018-05-21 02:58:50,315 trading.containerClass myErrorCallback INFO reqId: 77, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 77, localSymbol: None
2018-05-21 02:58:51,298 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:58:51,298 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:58:51,298 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:58:51,298 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:58:51,299 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:58:51,299 trading.utils getEarliestDateTimeFromIBAsDateTime WARNING Timeout while requesting the earliestDateTime for contract Contract(secType='IND', conId=416904, symbol='SPX', exchange='CBOE', currency='USD', localSymbol='SPX')
2018-05-21 02:58:51,299 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: SPX, USD: not performed because earliestDateTime as queried directly from IB is NULL.
2018-05-21 02:59:04,711 apscheduler.executors.default run_coroutine_job INFO Job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 02:56:25 CEST)" executed successfully
2018-05-21 02:59:04,725 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 02:56:25 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 02:59:04,788 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:59:04,846 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: EUR.AUD; 2018-05-20 23:59:00+00:00; 2018-05-21 00:58:00+00:00 60; 2018-05-21 00:57:00; 2018-05-21 00:59:00; False
2018-05-21 02:59:04,965 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.062323
2018-05-21 02:59:04,965 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.118909
2018-05-21 02:59:04,965 trading.containerClass myBarUpdateCallback INFO localSymbol: EUR.AUD, nBars: 65, diffDateTime: 4.834918, close: 1.56364, last: 2018-05-21 00:57:00
2018-05-21 02:59:05,029 ib_insync.wrapper error ERROR Error 162, reqId 78: Historical Market Data Service error message:API historical data query cancelled: 78
2018-05-21 02:59:05,029 trading.containerClass myErrorCallback INFO reqId: 78, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 78, localSymbol: None
2018-05-21 02:59:05,037 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 02:59:10 CEST)" (scheduled at 2018-05-21 02:59:05+02:00)
2018-05-21 02:59:41,848 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:59:41,941 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.174595, marketValue=218474.67, averageCost=1.2182257, unrealizedPNL=-8115.31, realizedPNL=0.0, account='DU946735')
2018-05-21 02:59:42,168 ib_insync.wrapper error ERROR Error 162, reqId 79: Historical Market Data Service error message:API historical data query cancelled: 79
2018-05-21 02:59:42,168 trading.containerClass myErrorCallback INFO reqId: 79, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 79, localSymbol: None
2018-05-21 02:59:42,804 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: N225; 2018-05-21 00:00:00+00:00; 2018-05-21 00:58:00+00:00 59; 2018-05-21 00:57:00; 2018-05-21 00:59:00; False
2018-05-21 02:59:42,880 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 59; elapsed time: 0:00:00.025460
2018-05-21 02:59:42,880 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 59; elapsed time: 0:00:00.075362
2018-05-21 02:59:42,880 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:59:42,881 ib_insync.wrapper error ERROR Error 162, reqId 81: Historical Market Data Service error message:API historical data query cancelled: 81
2018-05-21 02:59:42,881 trading.containerClass myErrorCallback INFO reqId: 81, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 81, localSymbol: None
2018-05-21 02:59:43,870 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:59:43,871 ib_insync.wrapper error ERROR Error 162, reqId 82: Historical Market Data Service error message:API historical data query cancelled: 82
2018-05-21 02:59:43,871 trading.containerClass myErrorCallback INFO reqId: 82, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 82, localSymbol: None
2018-05-21 02:59:44,902 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:59:44,903 ib_insync.wrapper error ERROR Error 162, reqId 83: Historical Market Data Service error message:API historical data query cancelled: 83
2018-05-21 02:59:44,903 trading.containerClass myErrorCallback INFO reqId: 83, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 83, localSymbol: None
2018-05-21 02:59:45,933 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:59:45,933 ib_insync.wrapper error ERROR Error 162, reqId 84: Historical Market Data Service error message:API historical data query cancelled: 84
2018-05-21 02:59:45,934 trading.containerClass myErrorCallback INFO reqId: 84, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 84, localSymbol: None
2018-05-21 02:59:46,918 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:59:46,919 ib_insync.wrapper error ERROR Error 162, reqId 85: Historical Market Data Service error message:API historical data query cancelled: 85
2018-05-21 02:59:46,919 trading.containerClass myErrorCallback INFO reqId: 85, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 85, localSymbol: None
2018-05-21 02:59:47,956 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:59:47,957 ib_insync.wrapper error ERROR Error 162, reqId 86: Historical Market Data Service error message:API historical data query cancelled: 86
2018-05-21 02:59:47,957 trading.containerClass myErrorCallback INFO reqId: 86, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 86, localSymbol: None
2018-05-21 02:59:48,978 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:59:48,978 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:59:48,978 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:59:48,979 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:59:48,979 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:59:48,979 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:59:48,979 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:59:48,980 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: N225, JPY; is going to be performed because earliestDateTime as queried directly from IB is: 2005-06-30 00:00:00
2018-05-21 02:59:48,983 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-20 01:00:00
2018-05-21 02:59:48,983 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-21 01:00:00
2018-05-21 02:59:48,983 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: N225, JPY; startDT: 2018-05-20 01:00:00; endDT: 2018-05-21 00:37:00; durationString: 85020 S; timeout: 1800
2018-05-21 02:59:48,992 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:59:48,993 ib_insync.wrapper error ERROR Error 162, reqId 87: Historical Market Data Service error message:API historical data query cancelled: 87
2018-05-21 02:59:48,993 trading.containerClass myErrorCallback INFO reqId: 87, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 87, localSymbol: None
2018-05-21 02:59:50,017 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:59:50,017 ib_insync.wrapper error ERROR Error 162, reqId 89: Historical Market Data Service error message:API historical data query cancelled: 89
2018-05-21 02:59:50,018 trading.containerClass myErrorCallback INFO reqId: 89, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 89, localSymbol: None
2018-05-21 02:59:50,951 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:59:50,952 ib_insync.wrapper error ERROR Error 162, reqId 90: Historical Market Data Service error message:API historical data query cancelled: 90
2018-05-21 02:59:50,952 trading.containerClass myErrorCallback INFO reqId: 90, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 90, localSymbol: None
2018-05-21 02:59:51,924 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:59:51,924 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:59:51,924 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:59:52,288 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 1417; elapsed time: 0:00:00.114248
2018-05-21 02:59:52,288 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 1417; elapsed time: 0:00:00.362407
2018-05-21 02:59:52,363 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: N225, JPY; startDT: 2018-05-20 01:00:00; endDT: 2018-05-21 00:37:00; durationString: 85020 S; elapsedTime: 0:00:03.379957; rows: 1417; rowsTotal: 1325544
2018-05-21 02:59:52,371 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:59:52,372 ib_insync.wrapper error ERROR Error 162, reqId 91: Historical Market Data Service error message:API historical data query cancelled: 91
2018-05-21 02:59:52,372 trading.containerClass myErrorCallback INFO reqId: 91, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 91, localSymbol: None
2018-05-21 02:59:53,318 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:59:53,319 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-21 00:37:00
2018-05-21 02:59:53,319 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-22 00:14:00
2018-05-21 02:59:53,319 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: N225, JPY; startDT: 2018-05-21 00:37:00; endDT: 2018-05-22 00:26:00; durationString: 85740 S; timeout: 1800
2018-05-21 02:59:53,325 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:59:53,326 ib_insync.wrapper error ERROR Error 162, reqId 92: Historical Market Data Service error message:API historical data query cancelled: 92
2018-05-21 02:59:53,326 trading.containerClass myErrorCallback INFO reqId: 92, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 92, localSymbol: None
2018-05-21 02:59:54,356 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:59:54,401 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:59:54,402 ib_insync.wrapper error ERROR Error 162, reqId 94: Historical Market Data Service error message:API historical data query cancelled: 94
2018-05-21 02:59:54,403 trading.containerClass myErrorCallback INFO reqId: 94, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 94, localSymbol: None
2018-05-21 02:59:55,340 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 02:59:55,341 ib_insync.wrapper error ERROR Error 162, reqId 95: Historical Market Data Service error message:API historical data query cancelled: 95
2018-05-21 02:59:55,342 trading.containerClass myErrorCallback INFO reqId: 95, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 95, localSymbol: None
2018-05-21 02:59:56,341 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:59:56,341 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 02:59:56,605 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 1102; elapsed time: 0:00:00.067105
2018-05-21 02:59:56,605 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 1102; elapsed time: 0:00:00.263334
2018-05-21 02:59:56,672 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: N225, JPY; startDT: 2018-05-21 00:37:00; endDT: 2018-05-22 00:26:00; durationString: 85740 S; elapsedTime: 0:00:03.352836; rows: 1102; rowsTotal: 1325544
2018-05-21 02:59:56,683 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: N225, JPY; elapsedTime: 0:00:14.878617
2018-05-21 03:00:03,579 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: EUR.AUD; 2018-05-21 00:00:00+00:00; 2018-05-21 00:59:00+00:00 60; 2018-05-21 00:58:00; 2018-05-21 01:00:00; False
2018-05-21 03:00:03,765 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.084603
2018-05-21 03:00:03,765 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.185638
2018-05-21 03:00:03,765 trading.containerClass myBarUpdateCallback INFO localSymbol: EUR.AUD, nBars: 66, diffDateTime: 3.568249, close: 1.563795, last: 2018-05-21 00:58:00
2018-05-21 03:00:03,802 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 03:00:03,902 ib_insync.wrapper error ERROR Error 162, reqId 96: Historical Market Data Service error message:API historical data query cancelled: 96
2018-05-21 03:00:03,902 trading.containerClass myErrorCallback INFO reqId: 96, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 96, localSymbol: None
2018-05-21 03:00:04,788 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 03:00:04,789 ib_insync.wrapper error ERROR Error 162, reqId 98: Historical Market Data Service error message:API historical data query cancelled: 98
2018-05-21 03:00:04,789 trading.containerClass myErrorCallback INFO reqId: 98, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 98, localSymbol: None
2018-05-21 03:00:05,813 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 03:00:05,814 ib_insync.wrapper error ERROR Error 162, reqId 99: Historical Market Data Service error message:API historical data query cancelled: 99
2018-05-21 03:00:05,814 trading.containerClass myErrorCallback INFO reqId: 99, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 99, localSymbol: None
2018-05-21 03:00:06,797 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 03:00:06,797 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 03:00:06,797 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 03:00:06,851 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: N225; 2018-05-21 00:00:00+00:00; 2018-05-21 00:59:00+00:00 60; 2018-05-21 00:58:00; 2018-05-21 01:00:00; False
2018-05-21 03:00:06,934 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 60; elapsed time: 0:00:00.025742
2018-05-21 03:00:06,934 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 60; elapsed time: 0:00:00.082636
2018-05-21 03:00:06,934 trading.containerClass myBarUpdateCallback INFO localSymbol: N225, nBars: 61, diffDateTime: 6.841728, close: 22975.14, last: 2018-05-21 00:58:00
2018-05-21 03:00:13,548 trading.utils getEarliestDateTimeFromIBAsDateTime WARNING Timeout while requesting the earliestDateTime for contract Contract(secType='IND', conId=416904, symbol='SPX', exchange='CBOE', currency='USD', localSymbol='SPX')
2018-05-21 03:00:13,548 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: SPX, USD: not performed because earliestDateTime as queried directly from IB is NULL.
2018-05-21 03:00:13,549 apscheduler.executors.default run_coroutine_job INFO Job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 02:59:10 CEST)" executed successfully
2018-05-21 03:00:13,549 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 03:00:13,552 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:00:15 CEST)" (scheduled at 2018-05-21 03:00:10+02:00)
2018-05-21 03:00:28,228 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:00:15 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 03:00:28,229 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: N225, JPY; is going to be performed because earliestDateTime as queried directly from IB is: 2005-06-30 00:00:00
2018-05-21 03:00:28,230 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-20 01:01:00
2018-05-21 03:00:28,230 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-21 01:01:00
2018-05-21 03:00:28,231 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: N225, JPY; startDT: 2018-05-20 01:01:00; endDT: 2018-05-21 00:52:00; durationString: 85860 S; timeout: 1800
2018-05-21 03:00:30,003 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:00:30 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 03:00:31,336 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 1431; elapsed time: 0:00:00.142105
2018-05-21 03:00:31,336 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 1431; elapsed time: 0:00:00.415190
2018-05-21 03:00:31,427 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: N225, JPY; startDT: 2018-05-20 01:01:00; endDT: 2018-05-21 00:52:00; durationString: 85860 S; elapsedTime: 0:00:03.195977; rows: 1431; rowsTotal: 1325545
2018-05-21 03:00:31,439 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-21 00:52:00
2018-05-21 03:00:31,439 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-22 00:43:00
2018-05-21 03:00:31,439 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: N225, JPY; startDT: 2018-05-21 00:52:00; endDT: 2018-05-22 00:37:00; durationString: 85500 S; timeout: 1800
2018-05-21 03:00:34,170 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 1088; elapsed time: 0:00:00.082909
2018-05-21 03:00:34,170 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 1088; elapsed time: 0:00:00.428464
2018-05-21 03:00:34,503 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: N225, JPY; startDT: 2018-05-21 00:52:00; endDT: 2018-05-22 00:37:00; durationString: 85500 S; elapsedTime: 0:00:03.063777; rows: 1088; rowsTotal: 1325545
2018-05-21 03:00:34,516 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: N225, JPY; elapsedTime: 0:00:06.490147
2018-05-21 03:00:35,002 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:00:35 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 03:00:40,003 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:00:40 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 03:00:44,520 trading.utils getEarliestDateTimeFromIBAsDateTime WARNING Timeout while requesting the earliestDateTime for contract Contract(secType='IND', conId=416904, symbol='SPX', exchange='CBOE', currency='USD', localSymbol='SPX')
2018-05-21 03:00:44,520 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: SPX, USD: not performed because earliestDateTime as queried directly from IB is NULL.
2018-05-21 03:00:44,520 apscheduler.executors.default run_coroutine_job INFO Job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:00:45 CEST)" executed successfully
2018-05-21 03:00:45,001 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:00:50 CEST)" (scheduled at 2018-05-21 03:00:45+02:00)
2018-05-21 03:00:53,076 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:00:50 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 03:00:53,089 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: N225, JPY; is going to be performed because earliestDateTime as queried directly from IB is: 2005-06-30 00:00:00
2018-05-21 03:00:53,091 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-20 01:01:00
2018-05-21 03:00:53,091 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-21 01:01:00
2018-05-21 03:00:53,091 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: N225, JPY; startDT: 2018-05-20 01:01:00; endDT: 2018-05-21 00:47:00; durationString: 85560 S; timeout: 1800
2018-05-21 03:00:55,001 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:00:55 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 03:00:56,140 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 1426; elapsed time: 0:00:00.111149
2018-05-21 03:00:56,140 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 1426; elapsed time: 0:00:00.382868
2018-05-21 03:00:56,203 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: N225, JPY; startDT: 2018-05-20 01:01:00; endDT: 2018-05-21 00:47:00; durationString: 85560 S; elapsedTime: 0:00:03.112098; rows: 1426; rowsTotal: 1325545
2018-05-21 03:00:56,215 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-21 00:47:00
2018-05-21 03:00:56,215 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-22 00:33:00
2018-05-21 03:00:56,215 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: N225, JPY; startDT: 2018-05-21 00:47:00; endDT: 2018-05-22 00:46:00; durationString: 86340 S; timeout: 1800
2018-05-21 03:00:58,938 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 1093; elapsed time: 0:00:00.112043
2018-05-21 03:00:58,939 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 1093; elapsed time: 0:00:00.388260
2018-05-21 03:00:59,188 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: N225, JPY; startDT: 2018-05-21 00:47:00; endDT: 2018-05-22 00:46:00; durationString: 86340 S; elapsedTime: 0:00:02.972480; rows: 1093; rowsTotal: 1325545
2018-05-21 03:00:59,209 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: N225, JPY; elapsedTime: 0:00:06.274576
2018-05-21 03:01:00,002 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:01:00 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 03:01:00,382 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: EUR.AUD; 2018-05-21 00:01:00+00:00; 2018-05-21 01:00:00+00:00 60; 2018-05-21 00:59:00; 2018-05-21 01:01:00; False
2018-05-21 03:01:00,533 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.073475
2018-05-21 03:01:00,533 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.151223
2018-05-21 03:01:00,534 trading.containerClass myBarUpdateCallback INFO localSymbol: EUR.AUD, nBars: 67, diffDateTime: 0.367016, close: 1.562935, last: 2018-05-21 00:59:00
2018-05-21 03:01:05,003 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:01:05 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 03:01:05,629 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: N225; 2018-05-21 00:01:00+00:00; 2018-05-21 01:00:00+00:00 60; 2018-05-21 00:59:00; 2018-05-21 01:01:00; False
2018-05-21 03:01:05,726 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 60; elapsed time: 0:00:00.029807
2018-05-21 03:01:05,726 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 60; elapsed time: 0:00:00.097395
2018-05-21 03:01:05,727 trading.containerClass myBarUpdateCallback INFO localSymbol: N225, nBars: 62, diffDateTime: 5.616966, close: 22977.85, last: 2018-05-21 00:59:00
2018-05-21 03:01:09,214 trading.utils getEarliestDateTimeFromIBAsDateTime WARNING Timeout while requesting the earliestDateTime for contract Contract(secType='IND', conId=416904, symbol='SPX', exchange='CBOE', currency='USD', localSymbol='SPX')
2018-05-21 03:01:09,215 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: SPX, USD: not performed because earliestDateTime as queried directly from IB is NULL.
2018-05-21 03:01:09,215 apscheduler.executors.default run_coroutine_job INFO Job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:01:10 CEST)" executed successfully
2018-05-21 03:01:10,002 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:01:15 CEST)" (scheduled at 2018-05-21 03:01:10+02:00)
2018-05-21 03:01:43,545 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:01:15 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 03:01:44,904 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: N225, JPY; is going to be performed because earliestDateTime as queried directly from IB is: 2005-06-30 00:00:00
2018-05-21 03:02:15,083 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-20 01:02:00
2018-05-21 03:02:15,083 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-21 01:02:00
2018-05-21 03:02:15,083 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: N225, JPY; startDT: 2018-05-20 01:02:00; endDT: 2018-05-21 00:57:00; durationString: 86100 S; timeout: 1800
2018-05-21 03:02:15,406 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: EUR.AUD; 2018-05-21 00:02:00+00:00; 2018-05-21 01:01:00+00:00 60; 2018-05-21 01:00:00; 2018-05-21 01:02:00; False
2018-05-21 03:02:15,585 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.069980
2018-05-21 03:02:15,585 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.178828
2018-05-21 03:02:15,586 trading.containerClass myBarUpdateCallback INFO localSymbol: EUR.AUD, nBars: 68, diffDateTime: 15.392964, close: 1.562895, last: 2018-05-21 01:00:00
2018-05-21 03:02:15,687 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: N225; 2018-05-21 00:02:00+00:00; 2018-05-21 01:01:00+00:00 60; 2018-05-21 01:00:00; 2018-05-21 01:02:00; False
2018-05-21 03:02:15,890 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 60; elapsed time: 0:00:00.030820
2018-05-21 03:02:15,890 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 60; elapsed time: 0:00:00.202687
2018-05-21 03:02:15,890 trading.containerClass myBarUpdateCallback INFO localSymbol: N225, nBars: 63, diffDateTime: 15.675334, close: 22981.17, last: 2018-05-21 01:00:00
2018-05-21 03:02:16,000 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:01:45 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 03:02:16,685 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.174965, marketValue=218543.49, averageCost=1.2182257, unrealizedPNL=-8046.49, realizedPNL=0.0, account='DU946735')
2018-05-21 03:02:17,924 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 1435; elapsed time: 0:00:00.145406
2018-05-21 03:02:17,924 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 1435; elapsed time: 0:00:00.426695
2018-05-21 03:02:18,008 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: N225, JPY; startDT: 2018-05-20 01:02:00; endDT: 2018-05-21 00:57:00; durationString: 86100 S; elapsedTime: 0:00:02.924292; rows: 1435; rowsTotal: 1325547
2018-05-21 03:02:18,019 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-21 00:57:00
2018-05-21 03:02:18,019 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-22 00:52:00
2018-05-21 03:02:18,019 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: N225, JPY; startDT: 2018-05-21 00:57:00; endDT: 2018-05-22 00:56:00; durationString: 86340 S; timeout: 1800
2018-05-21 03:02:20,007 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:02:20 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 03:02:20,747 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 1085; elapsed time: 0:00:00.094080
2018-05-21 03:02:20,748 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 1085; elapsed time: 0:00:00.399145
2018-05-21 03:02:20,891 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: N225, JPY; startDT: 2018-05-21 00:57:00; endDT: 2018-05-22 00:56:00; durationString: 86340 S; elapsedTime: 0:00:02.871792; rows: 1085; rowsTotal: 1325547
2018-05-21 03:02:20,918 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: N225, JPY; elapsedTime: 0:00:38.830849
2018-05-21 03:02:25,003 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:02:25 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 03:02:30,003 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:02:30 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 03:02:30,923 trading.utils getEarliestDateTimeFromIBAsDateTime WARNING Timeout while requesting the earliestDateTime for contract Contract(secType='IND', conId=416904, symbol='SPX', exchange='CBOE', currency='USD', localSymbol='SPX')
2018-05-21 03:02:30,923 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: SPX, USD: not performed because earliestDateTime as queried directly from IB is NULL.
2018-05-21 03:02:30,923 apscheduler.executors.default run_coroutine_job INFO Job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:02:35 CEST)" executed successfully
2018-05-21 03:02:35,003 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:02:40 CEST)" (scheduled at 2018-05-21 03:02:35+02:00)
2018-05-21 03:02:58,876 ib_insync.wrapper error INFO Warning 2104, reqId -1: Market data farm connection is OK:usfarm.us
2018-05-21 03:02:58,876 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2104, errorString: Market data farm connection is OK:usfarm.us, localSymbol: None
2018-05-21 03:02:59,077 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:02:40 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 03:03:05,906 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: N225, JPY; is going to be performed because earliestDateTime as queried directly from IB is: 2005-06-30 00:00:00
2018-05-21 03:07:39,734 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-20 01:08:00
2018-05-21 03:07:52,558 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-21 01:08:00
2018-05-21 03:07:52,558 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: N225, JPY; startDT: 2018-05-20 01:08:00; endDT: 2018-05-21 00:44:00; durationString: 84960 S; timeout: 1800
2018-05-21 03:07:52,565 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 03:07:52,571 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 03:07:52,585 ib_insync.wrapper error INFO Warning 2108, reqId -1: Market data farm connection is inactive but should be available upon demand.usfarm.us
2018-05-21 03:07:52,586 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2108, errorString: Market data farm connection is inactive but should be available upon demand.usfarm.us, localSymbol: None
2018-05-21 03:07:52,586 ib_insync.wrapper error INFO Warning 2108, reqId -1: Market data farm connection is inactive but should be available upon demand.usfarm.us
2018-05-21 03:07:52,586 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2108, errorString: Market data farm connection is inactive but should be available upon demand.usfarm.us, localSymbol: None
2018-05-21 03:07:52,624 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17483495, marketValue=218519.3, averageCost=1.2182257, unrealizedPNL=-8070.68, realizedPNL=0.0, account='DU946735')
2018-05-21 03:07:52,679 ib_insync.wrapper error ERROR Error 162, reqId 31: Historical Market Data Service error message:API historical data query cancelled: 31
2018-05-21 03:07:52,679 trading.containerClass myErrorCallback INFO reqId: 31, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 31, localSymbol: None
2018-05-21 03:07:52,679 ib_insync.wrapper error ERROR Error 162, reqId 100: Historical Market Data Service error message:API historical data query cancelled: 100
2018-05-21 03:07:52,679 trading.containerClass myErrorCallback INFO reqId: 100, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 100, localSymbol: None
2018-05-21 03:07:53,536 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: N225; 2018-05-21 00:07:00+00:00; 2018-05-21 01:06:00+00:00 60; 2018-05-21 01:01:00; 2018-05-21 01:07:00; False
2018-05-21 03:07:53,626 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 60; elapsed time: 0:00:00.033121
2018-05-21 03:07:53,626 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 60; elapsed time: 0:00:00.089875
2018-05-21 03:07:53,627 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_IND_N225_JPY_OSE.JPN
2018-05-21 03:07:53,627 trading.containerClass myBarUpdateCallback INFO canceled and renewed recent historical bars for: MarketData_CASH_EUR_AUD_IDEALPRO
2018-05-21 03:07:53,635 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:03:00 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 03:07:55,009 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:07:55 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 03:07:55,837 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 1416; elapsed time: 0:00:00.169268
2018-05-21 03:07:55,837 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 1416; elapsed time: 0:00:00.673973
2018-05-21 03:07:55,918 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: N225, JPY; startDT: 2018-05-20 01:08:00; endDT: 2018-05-21 00:44:00; durationString: 84960 S; elapsedTime: 0:00:03.359497; rows: 1416; rowsTotal: 1325552
2018-05-21 03:07:55,930 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: EUR.AUD; 2018-05-21 00:07:00+00:00; 2018-05-21 01:06:00+00:00 60; 2018-05-21 01:01:00; 2018-05-21 01:07:00; False
2018-05-21 03:07:56,283 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.067350
2018-05-21 03:07:56,283 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.353624
2018-05-21 03:08:10,364 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-21 00:44:00
2018-05-21 03:08:10,365 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-22 00:20:00
2018-05-21 03:08:10,365 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: N225, JPY; startDT: 2018-05-21 00:44:00; endDT: 2018-05-22 00:36:00; durationString: 85920 S; timeout: 1800
2018-05-21 03:08:10,389 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: EUR.AUD; 2018-05-21 00:08:00+00:00; 2018-05-21 01:07:00+00:00 60; 2018-05-21 01:06:00; 2018-05-21 01:08:00; False
2018-05-21 03:08:10,528 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.064993
2018-05-21 03:08:10,528 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.138291
2018-05-21 03:08:10,528 trading.containerClass myBarUpdateCallback INFO localSymbol: EUR.AUD, nBars: 62, diffDateTime: 10.377024, close: 1.562565, last: 2018-05-21 01:06:00
2018-05-21 03:08:10,561 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: N225; 2018-05-21 00:08:00+00:00; 2018-05-21 01:07:00+00:00 60; 2018-05-21 01:06:00; 2018-05-21 01:08:00; False
2018-05-21 03:08:10,668 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 60; elapsed time: 0:00:00.026160
2018-05-21 03:08:10,669 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 60; elapsed time: 0:00:00.107010
2018-05-21 03:08:10,669 trading.containerClass myBarUpdateCallback INFO localSymbol: N225, nBars: 62, diffDateTime: 10.552277, close: 22985.59, last: 2018-05-21 01:06:00
2018-05-21 03:08:10,690 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:08:00 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 03:08:12,939 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 1104; elapsed time: 0:00:00.076235
2018-05-21 03:08:12,939 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 1104; elapsed time: 0:00:00.279343
2018-05-21 03:08:13,010 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: N225, JPY; startDT: 2018-05-21 00:44:00; endDT: 2018-05-22 00:36:00; durationString: 85920 S; elapsedTime: 0:00:02.645500; rows: 1104; rowsTotal: 1325553
2018-05-21 03:08:32,131 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: N225, JPY; elapsedTime: 0:05:33.149862
2018-05-21 03:08:53,332 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.174595, marketValue=218474.67, averageCost=1.2182257, unrealizedPNL=-8115.31, realizedPNL=0.0, account='DU946735')
2018-05-21 03:08:54,109 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:08:15 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 03:08:54,110 ib_insync.wrapper error INFO Warning 2119, reqId -1: Market data farm is connecting:usfarm.us
2018-05-21 03:08:54,110 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2119, errorString: Market data farm is connecting:usfarm.us, localSymbol: None
2018-05-21 03:08:54,846 ib_insync.wrapper error INFO Warning 2104, reqId -1: Market data farm connection is OK:usfarm.us
2018-05-21 03:08:54,846 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2104, errorString: Market data farm connection is OK:usfarm.us, localSymbol: None
2018-05-21 03:08:55,003 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:08:55 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 03:09:00,004 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:09:00 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 03:09:00,383 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: EUR.AUD; 2018-05-21 00:09:00+00:00; 2018-05-21 01:08:00+00:00 60; 2018-05-21 01:07:00; 2018-05-21 01:09:00; False
2018-05-21 03:09:00,519 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.070144
2018-05-21 03:09:00,519 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.135940
2018-05-21 03:09:00,519 trading.containerClass myBarUpdateCallback INFO localSymbol: EUR.AUD, nBars: 63, diffDateTime: 0.366797, close: 1.56263, last: 2018-05-21 01:07:00
2018-05-21 03:09:03,284 trading.utils getEarliestDateTimeFromIBAsDateTime WARNING Timeout while requesting the earliestDateTime for contract Contract(secType='IND', conId=416904, symbol='SPX', exchange='CBOE', currency='USD', localSymbol='SPX')
2018-05-21 03:09:07,253 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: SPX, USD: not performed because earliestDateTime as queried directly from IB is NULL.
2018-05-21 03:14:46,951 apscheduler.executors.default run_coroutine_job ERROR Job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:09:05 CEST)" raised an exception
Traceback (most recent call last):
  File "/home/bn/anaconda3/envs/trading/lib/python3.6/site-packages/apscheduler/executors/base_py3.py", line 29, in run_coroutine_job
    retval = await job.func(*job.args, **job.kwargs)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 734, in asyncioJobGetHistoricalData
    tDelta1 = tEnd1 - tStart1
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 734, in asyncioJobGetHistoricalData
    tDelta1 = tEnd1 - tStart1
  File "/snap/pycharm-professional/66/helpers/pydev/_pydevd_bundle/pydevd_frame.py", line 714, in trace_dispatch
    self.do_wait_suspend(thread, frame, event, arg)
  File "/snap/pycharm-professional/66/helpers/pydev/_pydevd_bundle/pydevd_frame.py", line 125, in do_wait_suspend
    self._args[0].do_wait_suspend(*args, **kwargs)
  File "/snap/pycharm-professional/66/helpers/pydev/pydevd.py", line 812, in do_wait_suspend
    time.sleep(0.01)
KeyboardInterrupt
2018-05-21 03:14:46,955 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 03:14:46,959 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 03:14:46,962 ib_insync.wrapper error INFO Warning 2108, reqId -1: Market data farm connection is inactive but should be available upon demand.usfarm.us
2018-05-21 03:14:46,962 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2108, errorString: Market data farm connection is inactive but should be available upon demand.usfarm.us, localSymbol: None
2018-05-21 03:14:46,962 ib_insync.wrapper error INFO Warning 2108, reqId -1: Market data farm connection is inactive but should be available upon demand.usfarm.us
2018-05-21 03:14:46,962 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2108, errorString: Market data farm connection is inactive but should be available upon demand.usfarm.us, localSymbol: None
2018-05-21 03:14:46,973 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17456995, marketValue=218470.01, averageCost=1.2182257, unrealizedPNL=-8119.97, realizedPNL=0.0, account='DU946735')
2018-05-21 03:14:46,994 ib_insync.wrapper error INFO Warning 2104, reqId -1: Market data farm connection is OK:usfarm.us
2018-05-21 03:14:46,994 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2104, errorString: Market data farm connection is OK:usfarm.us, localSymbol: None
2018-05-21 03:14:46,994 ib_insync.wrapper error ERROR Error 162, reqId 115: Historical Market Data Service error message:API historical data query cancelled: 115
2018-05-21 03:14:46,994 trading.containerClass myErrorCallback INFO reqId: 115, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 115, localSymbol: None
2018-05-21 03:14:46,994 ib_insync.wrapper error ERROR Error 162, reqId 116: Historical Market Data Service error message:API historical data query cancelled: 116
2018-05-21 03:14:46,994 trading.containerClass myErrorCallback INFO reqId: 116, errorCode: 162, errorString: Historical Market Data Service error message:API historical data query cancelled: 116, localSymbol: None
2018-05-21 03:14:47,003 ib_insync.wrapper error INFO Warning 2108, reqId -1: Market data farm connection is inactive but should be available upon demand.usfarm.us
2018-05-21 03:14:47,003 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2108, errorString: Market data farm connection is inactive but should be available upon demand.usfarm.us, localSymbol: None
2018-05-21 03:14:47,003 ib_insync.wrapper error INFO Warning 2108, reqId -1: Market data farm connection is inactive but should be available upon demand.usfarm.us
2018-05-21 03:14:47,003 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2108, errorString: Market data farm connection is inactive but should be available upon demand.usfarm.us, localSymbol: None
2018-05-21 03:14:47,329 ib_insync.client _onSocketDisconnected ERROR Peer closed connection
2018-05-21 03:14:47,329 trading.containerClass myStoppingCallback INFO stopping watchdog callback: Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-21 03:14:47,329 ib_insync.Watchdog stop INFO Stopping
2018-05-21 03:14:47,329 ib_insync.ib disconnect INFO BN added disconnect in ib
2018-05-21 03:14:47,329 ib_insync.IBC terminateAsync INFO Terminating
2018-05-21 03:14:47,330 trading.containerClass myStoppedCallback INFO stopped watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-21 03:14:47,330 ib_insync.Watchdog scheduleRestart INFO Schedule restart in 2s
2018-05-21 03:14:47,330 trading.containerClass myDisconnectedCallback INFO disconnected callback
2018-05-21 03:14:47,330 trading.containerClass myDisconnectedCallback INFO removing jobs from the scheduler
2018-05-21 03:14:47,330 trading.containerClass myDisconnectedCallback INFO scheduler: removing job asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:09:05 CEST)
2018-05-21 03:14:47,330 apscheduler.scheduler remove_job INFO Removed job asyncioJobGetHistoricalData_000000
2018-05-21 03:14:47,330 trading.containerClass myDisconnectedCallback INFO scheduler: removing job schedulerJobSwitchRequestForRecentHistoricalDataFromLongToShort_000000 (trigger: cron[hour='4', minute='2', second='0'], next run at: 2018-05-21 04:02:00 CEST)
2018-05-21 03:14:47,330 apscheduler.scheduler remove_job INFO Removed job schedulerJobSwitchRequestForRecentHistoricalDataFromLongToShort_000000
2018-05-21 03:14:47,330 trading.containerClass myDisconnectedCallback INFO scheduler: removing job schedulerJobSwitchRequestForRecentHistoricalDataFromShortToLong_000000 (trigger: cron[hour='22', minute='2', second='0'], next run at: 2018-05-21 22:02:00 CEST)
2018-05-21 03:14:47,330 apscheduler.scheduler remove_job INFO Removed job schedulerJobSwitchRequestForRecentHistoricalDataFromShortToLong_000000
2018-05-21 03:14:47,330 trading.containerClass myDisconnectedCallback INFO removing requests for recent historical bars
2018-05-21 03:14:47,330 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: ['MarketData_CASH_EUR_AUD_IDEALPRO', 'MarketData_IND_N225_JPY_OSE.JPN', 'MarketData_IND_SPX_USD_CBOE']
2018-05-21 03:14:49,332 trading.containerClass myStartingCallback INFO starting watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-21 03:14:49,332 ib_insync.Watchdog start INFO Starting
2018-05-21 03:14:49,332 ib_insync.IBC startAsync INFO Starting
2018-05-21 03:15:00,293 ib_insync.Watchdog start INFO Starting
2018-05-21 03:15:00,295 quamash <module> INFO Using Qt Implementation: PyQt5
2018-05-21 03:15:00,332 ib_insync.IBC startAsync INFO Starting
2018-05-21 03:15:04,342 ib_insync.client connectAsync INFO Connecting to 127.0.0.1:4002 with clientId 24...
2018-05-21 03:15:04,343 ib_insync.client _onSocketConnected INFO Connected
2018-05-21 03:15:04,384 ib_insync.client _onSocketHasData INFO Logged on to server version 141
2018-05-21 03:15:04,431 ib_insync.client connectAsync INFO API connection ready
2018-05-21 03:15:04,479 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17456995, marketValue=218470.01, averageCost=1.2182257, unrealizedPNL=-8119.97, realizedPNL=0.0, account='DU946735')
2018-05-21 03:15:04,480 ib_insync.wrapper position INFO position: Position(account='DU946735', contract=Contract(secType='CASH', conId=12087792, symbol='EUR', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, avgCost=1.2182257)
2018-05-21 03:15:04,485 ib_insync.ib connectAsync INFO Synchronization complete
2018-05-21 03:15:04,485 trading.containerClass myConnectedCallback INFO connected callback
2018-05-21 03:15:04,485 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 03:15:04,487 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 03:15:06,037 ib_insync.wrapper error INFO Warning 2106, reqId -1: HMDS data farm connection is OK:cashhmds
2018-05-21 03:15:06,037 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2106, errorString: HMDS data farm connection is OK:cashhmds, localSymbol: None
2018-05-21 03:15:06,194 ib_insync.wrapper error INFO Warning 2119, reqId -1: Market data farm is connecting:cashfarm
2018-05-21 03:15:06,194 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2119, errorString: Market data farm is connecting:cashfarm, localSymbol: None
2018-05-21 03:15:06,256 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 03:15:06,395 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: EUR.AUD; 2018-05-21 00:15:00+00:00; 2018-05-21 01:14:00+00:00 60; 2018-05-21 01:08:00; 2018-05-21 01:15:00; False
2018-05-21 03:15:06,512 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.079347
2018-05-21 03:15:06,513 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.117382
2018-05-21 03:15:06,513 trading.containerClass myBarUpdateCallback INFO localSymbol: EUR.AUD, nBars: 61, diffDateTime: 6.390693, close: 1.562685, last: 2018-05-21 01:08:00
2018-05-21 03:15:06,694 ib_insync.wrapper error INFO Warning 2119, reqId -1: Market data farm is connecting:jfarm
2018-05-21 03:15:06,694 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2119, errorString: Market data farm is connecting:jfarm, localSymbol: None
2018-05-21 03:15:07,015 ib_insync.wrapper error INFO Warning 2104, reqId -1: Market data farm connection is OK:cashfarm
2018-05-21 03:15:07,015 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2104, errorString: Market data farm connection is OK:cashfarm, localSymbol: None
2018-05-21 03:15:09,197 ib_insync.wrapper error INFO Warning 2104, reqId -1: Market data farm connection is OK:jfarm
2018-05-21 03:15:09,198 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2104, errorString: Market data farm connection is OK:jfarm, localSymbol: None
2018-05-21 03:15:09,813 ib_insync.client _onSocketDisconnected ERROR Peer closed connection
2018-05-21 03:15:09,813 trading.containerClass myStoppingCallback INFO stopping watchdog callback: Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-21 03:15:09,813 ib_insync.Watchdog stop INFO Stopping
2018-05-21 03:15:09,813 ib_insync.ib disconnect INFO BN added disconnect in ib
2018-05-21 03:15:09,813 ib_insync.IBC terminateAsync INFO Terminating
2018-05-21 03:15:10,203 trading.containerClass myStoppedCallback INFO stopped watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-21 03:15:10,203 ib_insync.Watchdog scheduleRestart INFO Schedule restart in 2s
2018-05-21 03:15:10,203 trading.containerClass myDisconnectedCallback INFO disconnected callback
2018-05-21 03:15:10,203 trading.containerClass myDisconnectedCallback INFO removing jobs from the scheduler
2018-05-21 03:15:10,203 trading.containerClass myDisconnectedCallback INFO removing requests for recent historical bars
2018-05-21 03:15:10,203 trading.containerClass cancelAllRecentHistoricalBars INFO Canceling the historical bars for: ['MarketData_CASH_EUR_AUD_IDEALPRO', 'MarketData_IND_N225_JPY_OSE.JPN', 'MarketData_IND_SPX_USD_CBOE']
2018-05-21 03:15:12,204 trading.containerClass myStartingCallback INFO starting watchdog callback Watchdog(controller=IBC(twsVersion=970, gateway=True, tradingMode='paper', ibcPath='/opt/IBController', ibcIni='/home/bn/IBController/configPaper.ini'), ib=<IB not connected>, port=4002, clientId='24', appStartupTime=15)
2018-05-21 03:15:12,204 ib_insync.Watchdog start INFO Starting
2018-05-21 03:15:12,204 ib_insync.IBC startAsync INFO Starting
2018-05-21 03:17:50,138 ib_insync.Watchdog start INFO Starting
2018-05-21 03:17:50,139 quamash <module> INFO Using Qt Implementation: PyQt5
2018-05-21 03:17:50,166 ib_insync.IBC startAsync INFO Starting
2018-05-21 03:18:05,179 ib_insync.client connectAsync INFO Connecting to 127.0.0.1:4002 with clientId 24...
2018-05-21 03:18:05,181 ib_insync.client _onSocketConnected INFO Connected
2018-05-21 03:18:05,222 ib_insync.client _onSocketHasData INFO Logged on to server version 141
2018-05-21 03:18:05,267 ib_insync.client connectAsync INFO API connection ready
2018-05-21 03:18:05,328 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17473995, marketValue=218501.63, averageCost=1.2182257, unrealizedPNL=-8088.35, realizedPNL=0.0, account='DU946735')
2018-05-21 03:18:05,329 ib_insync.wrapper position INFO position: Position(account='DU946735', contract=Contract(secType='CASH', conId=12087792, symbol='EUR', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, avgCost=1.2182257)
2018-05-21 03:18:05,349 ib_insync.ib connectAsync INFO Synchronization complete
2018-05-21 03:18:05,432 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() started
2018-05-21 03:18:05,433 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop datetime
2018-05-21 03:18:05,433 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 03:18:05,433 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) initialize prop close
2018-05-21 03:18:05,433 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_AUD_IDEALPRO) _post_configure_properties() complete
2018-05-21 03:18:05,434 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() started
2018-05-21 03:18:05,434 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop datetime
2018-05-21 03:18:05,434 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 03:18:05,434 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) initialize prop close
2018-05-21 03:18:05,434 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CAD_IDEALPRO) _post_configure_properties() complete
2018-05-21 03:18:05,434 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() started
2018-05-21 03:18:05,434 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop datetime
2018-05-21 03:18:05,435 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 03:18:05,435 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) initialize prop close
2018-05-21 03:18:05,435 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CHF_IDEALPRO) _post_configure_properties() complete
2018-05-21 03:18:05,435 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() started
2018-05-21 03:18:05,435 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop datetime
2018-05-21 03:18:05,435 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 03:18:05,436 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) initialize prop close
2018-05-21 03:18:05,436 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_CNH_IDEALPRO) _post_configure_properties() complete
2018-05-21 03:18:05,436 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() started
2018-05-21 03:18:05,436 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop datetime
2018-05-21 03:18:05,436 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 03:18:05,436 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) initialize prop close
2018-05-21 03:18:05,437 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_GBP_IDEALPRO) _post_configure_properties() complete
2018-05-21 03:18:05,437 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() started
2018-05-21 03:18:05,437 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop datetime
2018-05-21 03:18:05,437 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 03:18:05,437 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) initialize prop close
2018-05-21 03:18:05,438 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_JPY_IDEALPRO) _post_configure_properties() complete
2018-05-21 03:18:05,438 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() started
2018-05-21 03:18:05,438 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop datetime
2018-05-21 03:18:05,438 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 03:18:05,438 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) initialize prop close
2018-05-21 03:18:05,439 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_RUB_IDEALPRO) _post_configure_properties() complete
2018-05-21 03:18:05,439 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() started
2018-05-21 03:18:05,439 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop datetime
2018-05-21 03:18:05,439 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop diffToNextRowInMinutes
2018-05-21 03:18:05,440 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) initialize prop close
2018-05-21 03:18:05,440 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CASH_EUR_USD_IDEALPRO) _post_configure_properties() complete
2018-05-21 03:18:05,440 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() started
2018-05-21 03:18:05,440 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop datetime
2018-05-21 03:18:05,440 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop diffToNextRowInMinutes
2018-05-21 03:18:05,441 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) initialize prop close
2018-05-21 03:18:05,441 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_CFD_IBDE30_EUR_SMART) _post_configure_properties() complete
2018-05-21 03:18:05,441 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() started
2018-05-21 03:18:05,441 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop datetime
2018-05-21 03:18:05,442 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop diffToNextRowInMinutes
2018-05-21 03:18:05,442 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) initialize prop close
2018-05-21 03:18:05,442 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_DAX_EUR_DTB) _post_configure_properties() complete
2018-05-21 03:18:05,442 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() started
2018-05-21 03:18:05,443 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop datetime
2018-05-21 03:18:05,443 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop diffToNextRowInMinutes
2018-05-21 03:18:05,443 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) initialize prop close
2018-05-21 03:18:05,443 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_HSC50_HKD_HKFE) _post_configure_properties() complete
2018-05-21 03:18:05,444 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() started
2018-05-21 03:18:05,444 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop datetime
2018-05-21 03:18:05,444 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop diffToNextRowInMinutes
2018-05-21 03:18:05,444 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) initialize prop close
2018-05-21 03:18:05,445 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_INDU_USD_CME) _post_configure_properties() complete
2018-05-21 03:18:05,445 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() started
2018-05-21 03:18:05,445 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop datetime
2018-05-21 03:18:05,445 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop diffToNextRowInMinutes
2018-05-21 03:18:05,446 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) initialize prop close
2018-05-21 03:18:05,446 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_N225_JPY_OSE.JPN) _post_configure_properties() complete
2018-05-21 03:18:05,446 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() started
2018-05-21 03:18:05,446 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop datetime
2018-05-21 03:18:05,447 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop diffToNextRowInMinutes
2018-05-21 03:18:05,447 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) initialize prop close
2018-05-21 03:18:05,447 sqlalchemy.orm.mapper.Mapper _log INFO (MarketDataTable|MarketData_IND_SPX_USD_CBOE) _post_configure_properties() complete
2018-05-21 03:18:05,448 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-21 03:18:05,448 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-21 03:18:05,449 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 03:18:08,723 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-21 03:18:08,724 sqlalchemy.engine.base.Engine _execute_context INFO PRAGMA table_info("MarketDataInfoTable")
2018-05-21 03:18:08,724 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 03:18:08,728 sqlalchemy.engine.base.Engine _begin_impl INFO BEGIN (implicit)
2018-05-21 03:18:08,729 sqlalchemy.engine.base.Engine _execute_context INFO SELECT count(*) AS count_1 
FROM (SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName", "MarketDataInfoTable".description AS "MarketDataInfoTable_description", "MarketDataInfoTable"."conId" AS "MarketDataInfoTable_conId", "MarketDataInfoTable".symbol AS "MarketDataInfoTable_symbol", "MarketDataInfoTable".currency AS "MarketDataInfoTable_currency", "MarketDataInfoTable".exchange AS "MarketDataInfoTable_exchange", "MarketDataInfoTable".category AS "MarketDataInfoTable_category", "MarketDataInfoTable"."secType" AS "MarketDataInfoTable_secType", "MarketDataInfoTable"."earliestDateTime" AS "MarketDataInfoTable_earliestDateTime" 
FROM "MarketDataInfoTable") AS anon_1
2018-05-21 03:18:08,729 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 03:18:08,731 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName", "MarketDataInfoTable".description, "MarketDataInfoTable"."conId", "MarketDataInfoTable".symbol, "MarketDataInfoTable".currency, "MarketDataInfoTable".exchange, "MarketDataInfoTable".category, "MarketDataInfoTable"."secType", "MarketDataInfoTable"."earliestDateTime" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-21 03:18:08,731 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 03:18:08,736 sqlalchemy.engine.base.Engine _execute_context INFO SELECT "MarketDataInfoTable"."tableName" AS "MarketDataInfoTable_tableName" 
FROM "MarketDataInfoTable" ORDER BY "MarketDataInfoTable"."tableName"
2018-05-21 03:18:08,736 sqlalchemy.engine.base.Engine _execute_context INFO ()
2018-05-21 03:18:09,357 sqlalchemy.engine.base.Engine _rollback_impl INFO ROLLBACK
2018-05-21 03:18:09,377 apscheduler.scheduler start INFO Scheduler started
2018-05-21 03:18:09,378 root runProg INFO Now updating the settings for the request of recent historical bars
2018-05-21 03:18:09,378 root runProg INFO Now requesting initial recent historical bars
2018-05-21 03:18:09,378 trading.containerClass requestRecentHistoricalOrderedDictOfBars INFO requesting recent historical data for all qcs. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 03:18:09,380 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for EUR.AUD. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 03:18:10,894 ib_insync.wrapper error INFO Warning 2106, reqId -1: HMDS data farm connection is OK:cashhmds
2018-05-21 03:18:10,894 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2106, errorString: HMDS data farm connection is OK:cashhmds, localSymbol: None
2018-05-21 03:18:11,232 ib_insync.wrapper error INFO Warning 2119, reqId -1: Market data farm is connecting:cashfarm
2018-05-21 03:18:11,232 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2119, errorString: Market data farm is connecting:cashfarm, localSymbol: None
2018-05-21 03:18:11,332 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for N225. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 03:18:11,498 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: EUR.AUD; 2018-05-21 00:18:00+00:00; 2018-05-21 01:17:00+00:00 60; 2018-05-21 01:16:00; 2018-05-21 01:18:00; False
2018-05-21 03:18:11,630 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.062417
2018-05-21 03:18:11,630 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.131745
2018-05-21 03:18:11,734 ib_insync.wrapper error INFO Warning 2119, reqId -1: Market data farm is connecting:jfarm
2018-05-21 03:18:11,734 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2119, errorString: Market data farm is connecting:jfarm, localSymbol: None
2018-05-21 03:18:12,032 ib_insync.wrapper error INFO Warning 2104, reqId -1: Market data farm connection is OK:cashfarm
2018-05-21 03:18:12,032 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2104, errorString: Market data farm connection is OK:cashfarm, localSymbol: None
2018-05-21 03:18:14,157 ib_insync.wrapper error INFO Warning 2104, reqId -1: Market data farm connection is OK:jfarm
2018-05-21 03:18:14,157 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2104, errorString: Market data farm connection is OK:jfarm, localSymbol: None
2018-05-21 03:18:17,189 ib_insync.wrapper error INFO Warning 2106, reqId -1: HMDS data farm connection is OK:hkhmds
2018-05-21 03:18:17,190 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2106, errorString: HMDS data farm connection is OK:hkhmds, localSymbol: None
2018-05-21 03:18:17,902 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: N225; 2018-05-21 00:18:00+00:00; 2018-05-21 01:17:00+00:00 60; 2018-05-21 01:15:00; 2018-05-21 01:18:00; False
2018-05-21 03:18:17,982 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 60; elapsed time: 0:00:00.026510
2018-05-21 03:18:17,982 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 60; elapsed time: 0:00:00.079838
2018-05-21 03:18:17,983 trading.containerClass requestRecentHistoricalBars INFO requesting recent historical data for SPX. settings: {'durationPandasTimeDelta': Timedelta('0 days 01:00:00'), 'barSizePandasTimeDelta': Timedelta('0 days 00:01:00'), 'timeOutTime': 10, 'maximumBarsLengthFactor': 2}
2018-05-21 03:18:18,083 ib_insync.wrapper error INFO Warning 2119, reqId -1: Market data farm is connecting:usfarm.us
2018-05-21 03:18:18,084 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2119, errorString: Market data farm is connecting:usfarm.us, localSymbol: None
2018-05-21 03:18:19,468 ib_insync.wrapper error INFO Warning 2104, reqId -1: Market data farm connection is OK:usfarm.us
2018-05-21 03:18:19,468 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2104, errorString: Market data farm connection is OK:usfarm.us, localSymbol: None
2018-05-21 03:18:27,986 trading.marketDataIB getHistoricalDataBars WARNING Timeout while requesting historical bars for contract Contract(secType='IND', conId=416904, symbol='SPX', exchange='CBOE', currency='USD', localSymbol='SPX')
2018-05-21 03:18:28,083 apscheduler.scheduler _real_add_job INFO Added job "asyncioJobGetHistoricalData_000000" to job store "default"
2018-05-21 03:18:28,084 apscheduler.scheduler _real_add_job INFO Added job "schedulerJobSwitchRequestForRecentHistoricalDataFromShortToLong_000000" to job store "default"
2018-05-21 03:18:28,085 apscheduler.scheduler _real_add_job INFO Added job "schedulerJobSwitchRequestForRecentHistoricalDataFromLongToShort_000000" to job store "default"
2018-05-21 03:18:30,001 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:18:35 CEST)" (scheduled at 2018-05-21 03:18:30+02:00)
2018-05-21 03:18:48,157 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:18:35 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 03:18:50,114 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: N225, JPY; is going to be performed because earliestDateTime as queried directly from IB is: 2005-06-30 00:00:00
2018-05-21 03:19:03,052 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-20 01:18:00
2018-05-21 03:19:03,052 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-21 01:18:00
2018-05-21 03:19:03,052 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: N225, JPY; startDT: 2018-05-20 01:18:00; endDT: 2018-05-21 01:13:00; durationString: 86100 S; timeout: 1800
2018-05-21 03:19:03,164 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: EUR.AUD; 2018-05-21 00:19:00+00:00; 2018-05-21 01:18:00+00:00 60; 2018-05-21 01:17:00; 2018-05-21 01:19:00; False
2018-05-21 03:19:03,312 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.065146
2018-05-21 03:19:03,312 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.148404
2018-05-21 03:19:03,312 trading.containerClass myBarUpdateCallback INFO localSymbol: EUR.AUD, nBars: 62, diffDateTime: 3.153662, close: 1.562395, last: 2018-05-21 01:17:00
2018-05-21 03:19:03,366 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:18:50 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 03:19:05,003 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:19:05 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 03:19:06,491 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 1435; elapsed time: 0:00:00.339470
2018-05-21 03:19:06,491 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 1435; elapsed time: 0:00:00.753389
2018-05-21 03:19:06,617 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: N225, JPY; startDT: 2018-05-20 01:18:00; endDT: 2018-05-21 01:13:00; durationString: 86100 S; elapsedTime: 0:00:03.564227; rows: 1435; rowsTotal: 1325563
2018-05-21 03:19:06,657 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: N225; 2018-05-21 00:19:00+00:00; 2018-05-21 01:18:00+00:00 60; 2018-05-21 01:17:00; 2018-05-21 01:19:00; False
2018-05-21 03:19:06,965 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 60; elapsed time: 0:00:00.026115
2018-05-21 03:19:06,965 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 60; elapsed time: 0:00:00.307716
2018-05-21 03:19:06,966 trading.containerClass myBarUpdateCallback INFO localSymbol: N225, nBars: 62, diffDateTime: 6.626419, close: 23016.37, last: 2018-05-21 01:17:00
2018-05-21 03:19:06,974 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-21 01:13:00
2018-05-21 03:19:06,974 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-22 01:08:00
2018-05-21 03:19:06,975 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: N225, JPY; startDT: 2018-05-21 01:13:00; endDT: 2018-05-22 01:03:00; durationString: 85800 S; timeout: 1800
2018-05-21 03:19:09,600 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 1086; elapsed time: 0:00:00.096467
2018-05-21 03:19:09,600 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 1086; elapsed time: 0:00:00.282300
2018-05-21 03:19:09,668 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: N225, JPY; startDT: 2018-05-21 01:13:00; endDT: 2018-05-22 01:03:00; durationString: 85800 S; elapsedTime: 0:00:02.693644; rows: 1086; rowsTotal: 1325564
2018-05-21 03:19:09,682 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: N225, JPY; elapsedTime: 0:00:23.139124
2018-05-21 03:19:45,188 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:19:10 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 03:19:50,005 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:19:50 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 03:19:54,963 trading.utils getEarliestDateTimeFromIBAsDateTime WARNING Timeout while requesting the earliestDateTime for contract Contract(secType='IND', conId=416904, symbol='SPX', exchange='CBOE', currency='USD', localSymbol='SPX')
2018-05-21 03:19:54,964 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: SPX, USD: not performed because earliestDateTime as queried directly from IB is NULL.
2018-05-21 03:20:16,878 apscheduler.executors.default run_coroutine_job INFO Job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:19:55 CEST)" executed successfully
2018-05-21 03:20:16,913 ib_insync.wrapper error INFO Warning 2108, reqId -1: Market data farm connection is inactive but should be available upon demand.usfarm.us
2018-05-21 03:20:16,913 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2108, errorString: Market data farm connection is inactive but should be available upon demand.usfarm.us, localSymbol: None
2018-05-21 03:20:16,913 ib_insync.wrapper error INFO Warning 2108, reqId -1: Market data farm connection is inactive but should be available upon demand.usfarm.us
2018-05-21 03:20:16,913 trading.containerClass myErrorCallback INFO reqId: -1, errorCode: 2108, errorString: Market data farm connection is inactive but should be available upon demand.usfarm.us, localSymbol: None
2018-05-21 03:20:16,974 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: EUR.AUD; 2018-05-21 00:20:00+00:00; 2018-05-21 01:19:00+00:00 60; 2018-05-21 01:18:00; 2018-05-21 01:20:00; False
2018-05-21 03:20:17,091 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.064142
2018-05-21 03:20:17,091 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.116963
2018-05-21 03:20:17,091 trading.containerClass myBarUpdateCallback INFO localSymbol: EUR.AUD, nBars: 63, diffDateTime: 16.961742, close: 1.562255, last: 2018-05-21 01:18:00
2018-05-21 03:20:17,118 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: N225; 2018-05-21 00:20:00+00:00; 2018-05-21 01:19:00+00:00 60; 2018-05-21 01:18:00; 2018-05-21 01:20:00; False
2018-05-21 03:20:17,196 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 60; elapsed time: 0:00:00.030012
2018-05-21 03:20:17,196 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 60; elapsed time: 0:00:00.077911
2018-05-21 03:20:17,197 trading.containerClass myBarUpdateCallback INFO localSymbol: N225, nBars: 63, diffDateTime: 17.110568, close: 23020.3, last: 2018-05-21 01:18:00
2018-05-21 03:20:17,272 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.174775, marketValue=218508.15, averageCost=1.2182257, unrealizedPNL=-8081.83, realizedPNL=0.0, account='DU946735')
2018-05-21 03:20:17,287 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:20:20 CEST)" (scheduled at 2018-05-21 03:20:15+02:00)
2018-05-21 03:20:49,089 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:20:20 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 03:20:49,094 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: N225, JPY; is going to be performed because earliestDateTime as queried directly from IB is: 2005-06-30 00:00:00
2018-05-21 03:20:49,096 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-20 01:20:00
2018-05-21 03:20:49,096 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-21 01:20:00
2018-05-21 03:20:49,096 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: N225, JPY; startDT: 2018-05-20 01:20:00; endDT: 2018-05-21 00:59:00; durationString: 85140 S; timeout: 1800
2018-05-21 03:20:50,003 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:20:50 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 03:20:52,665 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 1419; elapsed time: 0:00:00.388580
2018-05-21 03:20:52,666 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 1419; elapsed time: 0:00:00.876300
2018-05-21 03:20:52,791 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: N225, JPY; startDT: 2018-05-20 01:20:00; endDT: 2018-05-21 00:59:00; durationString: 85140 S; elapsedTime: 0:00:03.695052; rows: 1419; rowsTotal: 1325565
2018-05-21 03:20:52,803 trading.marketDataIB asyncioJobGetHistoricalData INFO startDateTime Original 2018-05-21 00:59:00
2018-05-21 03:20:52,803 trading.marketDataIB asyncioJobGetHistoricalData INFO calculated endDateTime 2018-05-22 00:38:00
2018-05-21 03:20:52,803 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data chunk: N225, JPY; startDT: 2018-05-21 00:59:00; endDT: 2018-05-22 00:38:00; durationString: 85140 S; timeout: 1800
2018-05-21 03:20:55,004 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:20:55 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 03:20:55,404 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 1101; elapsed time: 0:00:00.089830
2018-05-21 03:20:55,404 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 1101; elapsed time: 0:00:00.273969
2018-05-21 03:20:55,472 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data chunk: N225, JPY; startDT: 2018-05-21 00:59:00; endDT: 2018-05-22 00:38:00; durationString: 85140 S; elapsedTime: 0:00:02.669005; rows: 1101; rowsTotal: 1325565
2018-05-21 03:20:55,486 trading.marketDataIB asyncioJobGetHistoricalData INFO finished to get historical data: N225, JPY; elapsedTime: 0:00:06.574726
2018-05-21 03:21:12,335 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: EUR.AUD; 2018-05-21 00:21:00+00:00; 2018-05-21 01:20:00+00:00 60; 2018-05-21 01:19:00; 2018-05-21 01:21:00; False
2018-05-21 03:21:12,567 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.100829
2018-05-21 03:21:12,567 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.231446
2018-05-21 03:21:12,567 trading.containerClass myBarUpdateCallback INFO localSymbol: EUR.AUD, nBars: 64, diffDateTime: 12.321175, close: 1.562345, last: 2018-05-21 01:19:00
2018-05-21 03:21:12,622 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: N225; 2018-05-21 00:21:00+00:00; 2018-05-21 01:20:00+00:00 60; 2018-05-21 01:19:00; 2018-05-21 01:21:00; False
2018-05-21 03:21:13,001 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 60; elapsed time: 0:00:00.063526
2018-05-21 03:21:13,001 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 60; elapsed time: 0:00:00.378472
2018-05-21 03:21:13,001 trading.containerClass myBarUpdateCallback INFO localSymbol: N225, nBars: 64, diffDateTime: 12.608658, close: 23023.53, last: 2018-05-21 01:19:00
2018-05-21 03:21:13,050 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:21:00 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 03:21:15,007 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:21:15 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 03:21:20,012 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:21:20 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 03:21:22,293 trading.utils getEarliestDateTimeFromIBAsDateTime WARNING Timeout while requesting the earliestDateTime for contract Contract(secType='IND', conId=416904, symbol='SPX', exchange='CBOE', currency='USD', localSymbol='SPX')
2018-05-21 03:21:52,905 trading.marketDataIB asyncioJobGetHistoricalData INFO attempting to get historical data: SPX, USD: not performed because earliestDateTime as queried directly from IB is NULL.
2018-05-21 03:23:37,090 apscheduler.executors.default run_coroutine_job ERROR Job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:21:25 CEST)" raised an exception
Traceback (most recent call last):
  File "/home/bn/anaconda3/envs/trading/lib/python3.6/site-packages/apscheduler/executors/base_py3.py", line 29, in run_coroutine_job
    retval = await job.func(*job.args, **job.kwargs)
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 488, in asyncioJobGetHistoricalData
    numberOfTicksRetrieved=None,
  File "/home/bn/PycharmProjects/trading/trading/marketDataIB.py", line 488, in asyncioJobGetHistoricalData
    numberOfTicksRetrieved=None,
  File "/snap/pycharm-professional/66/helpers/pydev/_pydevd_bundle/pydevd_frame.py", line 714, in trace_dispatch
    self.do_wait_suspend(thread, frame, event, arg)
  File "/snap/pycharm-professional/66/helpers/pydev/_pydevd_bundle/pydevd_frame.py", line 125, in do_wait_suspend
    self._args[0].do_wait_suspend(*args, **kwargs)
  File "/snap/pycharm-professional/66/helpers/pydev/pydevd.py", line 812, in do_wait_suspend
    time.sleep(0.01)
KeyboardInterrupt
2018-05-21 03:23:37,260 trading.containerClass myBarUpdateCallback INFO localSymbol: EUR.AUD, nBars: 65, diffDateTime: 97.259257, close: 1.56238, last: 2018-05-21 01:20:00
2018-05-21 03:23:37,287 trading.containerClass myBarUpdateCallback INFO localSymbol: N225, nBars: 65, diffDateTime: 97.286003, close: 23023.61, last: 2018-05-21 01:20:00
2018-05-21 03:23:37,425 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: EUR.AUD; 2018-05-21 00:23:00+00:00; 2018-05-21 01:22:00+00:00 60; 2018-05-21 01:20:00; 2018-05-21 01:23:00; False
2018-05-21 03:23:37,518 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.057326
2018-05-21 03:23:37,518 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_CASH_EUR_AUD_IDEALPRO; nRows: 60; elapsed time: 0:00:00.093714
2018-05-21 03:23:37,519 trading.containerClass myBarUpdateCallback INFO localSymbol: EUR.AUD, nBars: 66, diffDateTime: 37.420341, close: 1.562405, last: 2018-05-21 01:20:00
2018-05-21 03:23:37,530 trading.containerClass myBarUpdateCallback INFO bar update callback before persist: N225; 2018-05-21 00:23:00+00:00; 2018-05-21 01:22:00+00:00 60; 2018-05-21 01:20:00; 2018-05-21 01:23:00; False
2018-05-21 03:23:37,594 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished correcting data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 60; elapsed time: 0:00:00.020748
2018-05-21 03:23:37,594 trading.marketDataIB persistMarketDataBarsOnDisk INFO finished treating data. Table: MarketData_IND_N225_JPY_OSE.JPN; nRows: 60; elapsed time: 0:00:00.064014
2018-05-21 03:23:37,594 trading.containerClass myBarUpdateCallback INFO localSymbol: N225, nBars: 66, diffDateTime: 37.525773, close: 23023.72, last: 2018-05-21 01:20:00
2018-05-21 03:23:37,612 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17497005, marketValue=218544.43, averageCost=1.2182257, unrealizedPNL=-8045.55, realizedPNL=0.0, account='DU946735')
2018-05-21 03:23:37,644 apscheduler.executors.default run_coroutine_job INFO Running job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:23:40 CEST)" (scheduled at 2018-05-21 03:23:35+02:00)
2018-05-21 03:23:40,003 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:23:40 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 03:23:45,006 apscheduler.scheduler _process_jobs WARNING Execution of job "asyncioJobGetHistoricalData_000000 (trigger: cron[minute='*', second='*/5'], next run at: 2018-05-21 03:23:45 CEST)" skipped: maximum number of running instances reached (1)
2018-05-21 15:31:31,932 ib_insync.Watchdog start INFO Starting
2018-05-21 15:31:31,933 quamash <module> INFO Using Qt Implementation: PyQt5
2018-05-21 15:31:31,960 ib_insync.IBC startAsync INFO Starting
2018-05-21 15:31:46,976 ib_insync.client connectAsync INFO Connecting to 127.0.0.1:4002 with clientId 24...
2018-05-21 15:31:46,977 ib_insync.client _onSocketConnected INFO Connected
2018-05-21 15:31:47,016 ib_insync.client _onSocketHasData INFO Logged on to server version 141
2018-05-21 15:31:47,059 ib_insync.client connectAsync INFO API connection ready
2018-05-21 15:31:47,124 ib_insync.wrapper updatePortfolio INFO updatePortfolio: PortfolioItem(contract=Contract(secType='CASH', conId=12087792, symbol='EUR', right='0', primaryExchange='IDEALPRO', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, marketPrice=1.17742, marketValue=219000.12, averageCost=1.2182257, unrealizedPNL=-7589.86, realizedPNL=0.0, account='DU946735')
2018-05-21 15:31:47,124 ib_insync.wrapper position INFO position: Position(account='DU946735', contract=Contract(secType='CASH', conId=12087792, symbol='EUR', currency='USD', localSymbol='EUR.USD', tradingClass='EUR.USD'), position=186000.0, avgCost=1.2182257)
2018-05-21 15:31:47,146 ib_insync.ib connectAsync INFO Synchronization complete
